<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.9.1" xml:lang="en-US">
  <compound refid="structtf_1_1SmallVectorTemplateCommon_1_1AlignedUnionType" kind="struct"><name>tf::SmallVectorTemplateCommon::AlignedUnionType</name>
    <member refid="structtf_1_1SmallVectorTemplateCommon_1_1AlignedUnionType_1a156936c74cd597a4d4f6c9343f2bdc78" kind="variable"><name>buff</name></member>
  </compound>
  <compound refid="structtf_1_1TaskQueue_1_1Array" kind="struct"><name>tf::TaskQueue::Array</name>
    <member refid="structtf_1_1TaskQueue_1_1Array_1a59aae96cf602b0c89d16aec140a639b8" kind="variable"><name>C</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1a9669c115e1ca6040935a060e56286962" kind="variable"><name>M</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1a25a3a80719755424001cfebe47555efe" kind="variable"><name>S</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1a5c104a080a8bcbc069e39ef67215ce95" kind="function"><name>Array</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1ab75932271a96bba9b058a62cb5a6c98e" kind="function"><name>~Array</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1afb19f3c093e6a2139bfaca183a97798e" kind="function"><name>capacity</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1a0a751690ca21c4d0cb5214bff3e7fd12" kind="function"><name>push</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1a257d7c9ebedba9ed83019b0fb74060c8" kind="function"><name>pop</name></member>
    <member refid="structtf_1_1TaskQueue_1_1Array_1a89b8f1fdbff1fa4d794ce26d15fd12a8" kind="function"><name>resize</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1Async" kind="struct"><name>tf::Node::Async</name>
    <member refid="structtf_1_1Node_1_1Async_1a1aba14191b152b955cb2005bab6630b8" kind="variable"><name>work</name></member>
    <member refid="structtf_1_1Node_1_1Async_1a368fa43e2d7715828da6f3459b5dbcbf" kind="function"><name>Async</name></member>
    <member refid="structtf_1_1Node_1_1Async_1a6fae56cffa17e20ff0e99eafd4670e07" kind="function"><name>Async</name></member>
  </compound>
  <compound refid="classtf_1_1AsyncTask" kind="class"><name>tf::AsyncTask</name>
    <member refid="classtf_1_1AsyncTask_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1AsyncTask_1aa84e10d306fd24a7ecfa8de2cc964cac" kind="variable"><name>_node</name></member>
    <member refid="classtf_1_1AsyncTask_1a68689c79c7d794a8be2e1c181c818001" kind="function"><name>AsyncTask</name></member>
    <member refid="classtf_1_1AsyncTask_1a148ddcabda8fd44746b278499cd4cb53" kind="function"><name>~AsyncTask</name></member>
    <member refid="classtf_1_1AsyncTask_1a682bc679a773da5e45714f71c8137f70" kind="function"><name>AsyncTask</name></member>
    <member refid="classtf_1_1AsyncTask_1a5a31f85d2ee542f62e784d551ec78896" kind="function"><name>AsyncTask</name></member>
    <member refid="classtf_1_1AsyncTask_1a14fa18d27a02c41e01b48ea07e87f5c5" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1AsyncTask_1a8dc18d17f3a5d72ef4d9c20ebf7ade4a" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1AsyncTask_1ae42c70dc0c5edc6d58f47b346125fca3" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1AsyncTask_1a7c12835577fbdc1bca3190cf92c78088" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1AsyncTask_1a826a2ea909094f5a26c2df876de58056" kind="function"><name>hash_value</name></member>
    <member refid="classtf_1_1AsyncTask_1a6a4a54030f57d1ef05c04ae01825165d" kind="function"><name>use_count</name></member>
    <member refid="classtf_1_1AsyncTask_1aefeefa30d7cafdfbb7dc8def542e8e51" kind="function"><name>is_done</name></member>
    <member refid="classtf_1_1AsyncTask_1ad6a3bcc865f13ecddc1d32306b6df1bb" kind="function"><name>AsyncTask</name></member>
    <member refid="classtf_1_1AsyncTask_1ae2eefe6ee6de4f97dd0b247b053addb1" kind="function"><name>_incref</name></member>
    <member refid="classtf_1_1AsyncTask_1aaee1f8ef1109eb90ad20bac2cba4eaca" kind="function"><name>_decref</name></member>
  </compound>
  <compound refid="classtf_1_1ChromeObserver" kind="class"><name>tf::ChromeObserver</name>
    <member refid="classtf_1_1ChromeObserver_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1ChromeObserver_1aee57a7a03bb4af2aadd2fdefbebd9e7b" kind="variable"><name>_timeline</name></member>
    <member refid="classtf_1_1ChromeObserver_1a5df3852d8525cabafee696d5f77b3fd7" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1ChromeObserver_1a414d60cee91db1d3924636fcea5f4ea7" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1ChromeObserver_1a3948e57186155a6934c100447cb9332d" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1ChromeObserver_1a44032b7607de5dd929683739f4df9ef2" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1ChromeObserver_1aa8d5d9c3d0de7e7006d27079d8eb3888" kind="function"><name>set_up</name></member>
    <member refid="classtf_1_1ChromeObserver_1a6fa502ca5ef6bfb9d2168db190125855" kind="function"><name>on_entry</name></member>
    <member refid="classtf_1_1ChromeObserver_1a62ae8c50814d285d29e50a322461a803" kind="function"><name>on_exit</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1Condition" kind="struct"><name>tf::Node::Condition</name>
    <member refid="structtf_1_1Node_1_1Condition_1ad9b69c26cf41ac682ec3a09f38921f8e" kind="variable"><name>work</name></member>
    <member refid="structtf_1_1Node_1_1Condition_1a781e9c6374654fd12a35b6c9b4346884" kind="function"><name>Condition</name></member>
  </compound>
  <compound refid="classtf_1_1CriticalSection" kind="class"><name>tf::CriticalSection</name>
    <member refid="classtf_1_1CriticalSection_1af690812215dfed0327cff39c77fc6545" kind="function"><name>CriticalSection</name></member>
    <member refid="classtf_1_1CriticalSection_1abf9cbde9354a06e0fee5fee2ea2bfc45" kind="function"><name>add</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaBlockReduce" kind="struct"><name>tf::detail::cudaBlockReduce</name>
    <member refid="structtf_1_1detail_1_1cudaBlockReduce_1a090793ae40eaea9ae4cfec2960777c7e" kind="variable"><name>group_size</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockReduce_1a83b5862bde412c439b25d17e6b85f176" kind="variable"><name>num_passes</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockReduce_1af4f00b1e05f942cf0eaf448ca37baf83" kind="variable"><name>num_items</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockReduce_1a6487595da01b3fb5666f41c52b93f5a0" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaBlockScan" kind="struct"><name>tf::detail::cudaBlockScan</name>
    <member refid="structtf_1_1detail_1_1cudaBlockScan_1ade947dae7ff7d1a8d33cb937f0c9d93a" kind="variable"><name>num_warps</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockScan_1a341cac68448f65a06e10c1327bfe06a5" kind="variable"><name>num_passes</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockScan_1a232b3e951d2a0b68b98e3ced6964b223" kind="variable"><name>capacity</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockScan_1a5ac5687ea52d5b6378bd22f4e0bf3b2d" kind="function"><name>operator()</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockScan_1aeab231ca5acb3afa6be1f82c95397aad" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaBlockSort" kind="struct"><name>tf::detail::cudaBlockSort</name>
    <member refid="structtf_1_1detail_1_1cudaBlockSort_1ab08e7fc6dcfebd4c091bf742558a004e" kind="variable"><name>has_values</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockSort_1a09986d68c8c99159902e9c2ab9182079" kind="variable"><name>num_passes</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockSort_1a8a4821a2ba1e2412cfa78ae5f8fbfb5e" kind="function"><name>merge_pass</name></member>
    <member refid="structtf_1_1detail_1_1cudaBlockSort_1a79d7cd8115842d64e15b91bb7f6c31a7" kind="function"><name>block_sort</name></member>
  </compound>
  <compound refid="classtf_1_1cudaDeviceAllocator" kind="class"><name>tf::cudaDeviceAllocator</name>
    <member refid="classtf_1_1cudaDeviceAllocator_1a37039db4f27e849c44b361c6d107903c" kind="typedef"><name>value_type</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a68c29bda337094fcb9fc6f3e9445ca9c" kind="typedef"><name>pointer</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1aef9d9622074af9b3ce50b5a63346998b" kind="typedef"><name>reference</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a3cce1e14aad82c9444ab3076a8f35482" kind="typedef"><name>const_pointer</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a449d07320a94b00d4b09fa0f4e1ce399" kind="typedef"><name>const_reference</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1ac4b1781c2f116866927701d931bf8852" kind="typedef"><name>size_type</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1aaacd3b516ceaa9468e40dcf1a048a453" kind="typedef"><name>difference_type</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a5db2fe60c59fe95ceee94392508f9f82" kind="function"><name>cudaDeviceAllocator</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a8c6f5c1a2ad3fb5d933911c18f10397e" kind="function"><name>cudaDeviceAllocator</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1aba7fc3e232d452c4c474225bdf4adabb" kind="function"><name>cudaDeviceAllocator</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a1c5dd0ea4e5c574e57b804cfff24ec0b" kind="function"><name>~cudaDeviceAllocator</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a3aeae7566c71b25fc5b722f74b68a8f9" kind="function"><name>address</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1aadbef395cbe886d2be80ba1771992ffb" kind="function"><name>address</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a9cd24fe35ceef3d5cd386263b20d3093" kind="function"><name>allocate</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1acb6d952479fda4ac4269b9d40529a0a7" kind="function"><name>deallocate</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a095d67530352fb7be340775fe0c7b120" kind="function"><name>max_size</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a280882efd5963a11aa5d79ed491c056e" kind="function"><name>construct</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1af50777c1f25a5766980d8fdbdd250b83" kind="function"><name>destroy</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1a1038b32b85395c5f2e206221d0f849b7" kind="function"><name>operator==</name></member>
    <member refid="classtf_1_1cudaDeviceAllocator_1ae31834c1ab0a8a9c88274ff524cebbac" kind="function"><name>operator!=</name></member>
  </compound>
  <compound refid="classtf_1_1cudaDeviceVector" kind="class"><name>tf::cudaDeviceVector</name>
    <member refid="classtf_1_1cudaDeviceVector_1a52da84c77829a1ea261fc187ef2e474e" kind="variable"><name>_data</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1a4637a4ea042aa8e3c2b7be1e5ed3ce84" kind="variable"><name>_N</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1a7783ef6aed9b7872d22f5f9127887206" kind="function"><name>cudaDeviceVector</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1a6d0daf9a0d45cb4827c0dd8e0d434ce3" kind="function"><name>cudaDeviceVector</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1adf971821fec0d2817ca510ec8509612f" kind="function"><name>cudaDeviceVector</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1a84682a01838130c1eb70d9da95f1d71f" kind="function"><name>~cudaDeviceVector</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1a17cde55e1a5c2e1c9ca8cdbb39e03e09" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1ab235c0e585e4b87ab9a2678fb4d79c3e" kind="function"><name>size</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1a6749e3c50f6e1b0a2a76bd65f8408a06" kind="function"><name>data</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1aa7044232a8a103673645081a5393791b" kind="function"><name>data</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1a20cc8bd1758927a4cc116d0ecd7b8fb5" kind="function"><name>cudaDeviceVector</name></member>
    <member refid="classtf_1_1cudaDeviceVector_1aa00033a24c55fe15527b073b9e43c1bf" kind="function"><name>operator=</name></member>
  </compound>
  <compound refid="classtf_1_1cudaEvent" kind="class"><name>tf::cudaEvent</name>
    <member refid="classtf_1_1cudaEvent_1ad0b23cb864f0c7acee306f7fe49a3c23" kind="function"><name>cudaEvent</name></member>
    <member refid="classtf_1_1cudaEvent_1aef986b15a45d9992a31caa6e42e4e945" kind="function"><name>cudaEvent</name></member>
    <member refid="classtf_1_1cudaEvent_1af6d6a9c4f98ae85927985a1f89cdeee1" kind="function"><name>cudaEvent</name></member>
  </compound>
  <compound refid="structtf_1_1cudaEventCreator" kind="struct"><name>tf::cudaEventCreator</name>
    <member refid="structtf_1_1cudaEventCreator_1aa479fabea27a173213d94062c07f3599" kind="function"><name>operator()</name></member>
    <member refid="structtf_1_1cudaEventCreator_1a94c304977d6ac96bd550bad52341b1fa" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structtf_1_1cudaEventDeleter" kind="struct"><name>tf::cudaEventDeleter</name>
    <member refid="structtf_1_1cudaEventDeleter_1afe6ff663a2e030397316c12e690d2b82" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="classtf_1_1cudaExecutionPolicy" kind="class"><name>tf::cudaExecutionPolicy</name>
    <member refid="classtf_1_1cudaExecutionPolicy_1abb1050526f45873c967976a99e9a370d" kind="variable"><name>nt</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a9410f1b3a5cb9a3cc5e8d640bc7d3990" kind="variable"><name>vt</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a92ac5a32147584738f32a720ea08e3f4" kind="variable"><name>nv</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a1eaf3d45afdf53b4bf9927dd1bd7a02b" kind="variable"><name>_stream</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1aea3b671f778bfb9eca5d7113636f63bf" kind="function"><name>cudaExecutionPolicy</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1ac1c7784472394d4abcb6f6a2a80cc019" kind="function"><name>cudaExecutionPolicy</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a5be1b273985800ab886665d28663c29b" kind="function"><name>stream</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a5f2a4d6b35af49403756ee2291264758" kind="function"><name>stream</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1ab96c478964fcba935aa99efe91a64e5c" kind="function"><name>num_blocks</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a446cee95bb839ee180052059e2ad7fd6" kind="function"><name>reduce_bufsz</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1abcafb001cd68c1135392f4bcda5a2a05" kind="function"><name>min_element_bufsz</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a31fe75c4b0765df3035e12be49af88aa" kind="function"><name>max_element_bufsz</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1af25648b3269902b333cfcd58665005e8" kind="function"><name>scan_bufsz</name></member>
    <member refid="classtf_1_1cudaExecutionPolicy_1a1febbe549d9cbe4502a5b66167ab9553" kind="function"><name>merge_bufsz</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaFindPair" kind="struct"><name>tf::detail::cudaFindPair</name>
    <member refid="structtf_1_1detail_1_1cudaFindPair_1a45f07c94fc363d0d14bd827e33868c77" kind="variable"><name>key</name></member>
    <member refid="structtf_1_1detail_1_1cudaFindPair_1a0cdb518ce84ef59432fe1b1995597bf1" kind="variable"><name>index</name></member>
    <member refid="structtf_1_1detail_1_1cudaFindPair_1a2fb94039a5cb8280591044a35626ad8d" kind="function"><name>operator unsigned</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlow" kind="class"><name>tf::cudaFlow</name>
    <member refid="classtf_1_1cudaFlow_1a31c7ba8b8053d6ad95c7da5e5a9494f2" kind="variable"><name>_cfg</name></member>
    <member refid="classtf_1_1cudaFlow_1a8e3255897f01f87dcd9ca506c314a125" kind="variable"><name>_exe</name></member>
    <member refid="classtf_1_1cudaFlow_1ad4c3e001db151486c8479151a2108d37" kind="function"><name>cudaFlow</name></member>
    <member refid="classtf_1_1cudaFlow_1a828c3ab275521672e4ec6c78d3a9ee62" kind="function"><name>~cudaFlow</name></member>
    <member refid="classtf_1_1cudaFlow_1a677a4b510abee2ac665193389b20f725" kind="function"><name>cudaFlow</name></member>
    <member refid="classtf_1_1cudaFlow_1a74beef874538193ac0df81a180faa742" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1cudaFlow_1a1926f45a038d8faa9c1b1ee43fd29a93" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1cudaFlow_1ae6560c27d249af7e4b8b921388f5e1e2" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1cudaFlow_1aad726dfe21e9719d96c65530a56d9951" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1cudaFlow_1a7f97b68fa7c889db49b26aa71a46a7cf" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1cudaFlow_1a43507f21eb9cb77667ffe0ac7e6ae635" kind="function"><name>dump_native_graph</name></member>
    <member refid="classtf_1_1cudaFlow_1a30b2e107cb2c90a37f467b28d1b42a74" kind="function"><name>noop</name></member>
    <member refid="classtf_1_1cudaFlow_1a060e1c96111c2134ce0f896420a42cd0" kind="function"><name>host</name></member>
    <member refid="classtf_1_1cudaFlow_1a02e4e5cf7d03b9d087d6fbf54eb86bbf" kind="function"><name>host</name></member>
    <member refid="classtf_1_1cudaFlow_1a68f666503d13a7b80fb7399fb2f0c153" kind="function"><name>kernel</name></member>
    <member refid="classtf_1_1cudaFlow_1a821117dd640807bb7ec114b46888dfb1" kind="function"><name>kernel</name></member>
    <member refid="classtf_1_1cudaFlow_1a079ca65da35301e5aafd45878a19e9d2" kind="function"><name>memset</name></member>
    <member refid="classtf_1_1cudaFlow_1a082505f0fec89f65808421cdc737fb17" kind="function"><name>memset</name></member>
    <member refid="classtf_1_1cudaFlow_1ad37637606f0643f360e9eda1f9a6e559" kind="function"><name>memcpy</name></member>
    <member refid="classtf_1_1cudaFlow_1acf9e6cfa65cbfcd1d33c88e64b487ce6" kind="function"><name>memcpy</name></member>
    <member refid="classtf_1_1cudaFlow_1a40172fac4464f6d805f75921ea3c2a3b" kind="function"><name>zero</name></member>
    <member refid="classtf_1_1cudaFlow_1a78c2a73243809e3cbd1955cc1ffe6477" kind="function"><name>zero</name></member>
    <member refid="classtf_1_1cudaFlow_1a21d4447bc834f4d3e1bb4772c850d090" kind="function"><name>fill</name></member>
    <member refid="classtf_1_1cudaFlow_1a39ed97c9142959c73d4c25c34d71bd5e" kind="function"><name>fill</name></member>
    <member refid="classtf_1_1cudaFlow_1af03e04771b655f9e629eb4c22e19b19f" kind="function"><name>copy</name></member>
    <member refid="classtf_1_1cudaFlow_1a6cf6ec1e85172fa99c16bf0beffc0562" kind="function"><name>copy</name></member>
    <member refid="classtf_1_1cudaFlow_1ae6810f7de27e5a347331aacfce67bea1" kind="function"><name>run</name></member>
    <member refid="classtf_1_1cudaFlow_1acfbee67cff7dc7c6297c20c64f2e015c" kind="function"><name>native_graph</name></member>
    <member refid="classtf_1_1cudaFlow_1a5bfdaf621ab617ab5f0ca63466570256" kind="function"><name>native_executable</name></member>
    <member refid="classtf_1_1cudaFlow_1ac2906cb0002fc411a983d100a3d58d62" kind="function"><name>single_task</name></member>
    <member refid="classtf_1_1cudaFlow_1add2d364f38c72322d8e36bc0da0b98e4" kind="function"><name>single_task</name></member>
    <member refid="classtf_1_1cudaFlow_1a1a681f6223853b6445dcfdad07e4d0fd" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1cudaFlow_1af9cc7ee16602754929bb9118a9d7f0b2" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1cudaFlow_1a34f1ea89e5651faa6e8af522a42556ac" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1cudaFlow_1a3fa7f8e38b4da1fe0cbcfb265f9349a2" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1cudaFlow_1af89a9bda182272462a0eda2581536cd8" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlow_1a4a211b1f8562e10f9aae8b44fd6acdec" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlow_1abab2bfdfc86ef3a764ece4743fdede76" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlow_1a7c6ca7be2b6908e8f71570c54303ba9e" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlow_1a89c389fff64a16e5dd8c60875d3b514d" kind="function"><name>capture</name></member>
    <member refid="classtf_1_1cudaFlow_1aa0f182dc0fa99bcc9118311925fddca5" kind="function"><name>capture</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlowCapturer" kind="class"><name>tf::cudaFlowCapturer</name>
    <member refid="classtf_1_1cudaFlowCapturer_1a5f92f6ccad52aed18441d80bc186049f" kind="typedef"><name>handle_t</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a9e390b0f7cb62729b1f04a5f37430ac8" kind="typedef"><name>Optimizer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a9f64f729511a922781a59663ff1c6250" kind="friend"><name>cudaFlow</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1aaaebe71b8297f4e14ba132a664401628" kind="variable"><name>_cfg</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1acdc0ba0a1d25ca9f3c0780a62b68508a" kind="variable"><name>_optimizer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1aadd53d42f612da940755d5ebc6fb00de" kind="variable"><name>_exe</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a0ddccd6faa338047921269bfe964b774" kind="function"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a8492d77263ab2a15cce21d4bfae5b331" kind="function"><name>~cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1abeca6931972344a97c862c1f8d3ab9bb" kind="function"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a8e9d99a9bd07761156ab8445a07dbdec" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a3413a20a7c8229365e1ee9fb5af4af1e" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1aeb826786f1580bae1335d94ffbeb7e02" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a06f1176b6a5590832f0e09a049f8a622" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a90d1265bcc27647906bed6e6876c9aa7" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a979fe2a7bf2c361c050c0742108197c7" kind="function"><name>dump_native_graph</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1ad0d937ae0d77239f148b66a77e35db41" kind="function"><name>on</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a5215d459df3a0d7bccac1a1f2ce9d1ee" kind="function"><name>on</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a593335760ea517cea597237137ef9333" kind="function"><name>noop</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a168a968d7f5833700fcc14a210ad39bc" kind="function"><name>noop</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1ae84d097cdae9e2e8ce108dea760483ed" kind="function"><name>memcpy</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a20db64e086bf8182b350eaf5d8807af9" kind="function"><name>memcpy</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1ab70f12050e78b588f5c23d874aa4e538" kind="function"><name>copy</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a605f9dfd1363e10d08cbdab29f59a52e" kind="function"><name>copy</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a0d38965b380f940bf6cfc6667a281052" kind="function"><name>memset</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a4a7c4dd81f5e00e8a4c733417bca3205" kind="function"><name>memset</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a6f06c7f6954d8d67ad89f0eddfe285e9" kind="function"><name>kernel</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a850c7c028e1535db1deaecd819d82efb" kind="function"><name>kernel</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1ac944c7d20056e0633ef84f1a25b52296" kind="function"><name>single_task</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a2f7e439c336aa43781c3ef1ef0d71154" kind="function"><name>single_task</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a0b2f1bcd59f0b42e0f823818348b4ae7" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a17471b99db619c5a6b4645b3dffebe20" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1aeb877f42ee3a627c40f1c9c84e31ba3c" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a05ca5fb4d005f1ff05fd1e4312fcd357" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a99d9a86a7240ebf0767441e4ec2e14c4" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1afa62195f91702a6f5cbdad6fefb97e4c" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1ac2f527e57e8fe447b9f13ba51e9b9c48" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a568dcdd226d7e466e2ee106fcdde5db9" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1aa1d016b56c06cb28eabfebfdd7dbb24d" kind="function"><name>make_optimizer</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a31f29772f4713848c1b0ff1a66a3dcc3" kind="function"><name>capture</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a952596fd7c46acee4c2459d8fe39da28" kind="function"><name>run</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a34be2e2d69ff66add60f5517e01bea83" kind="function"><name>native_graph</name></member>
    <member refid="classtf_1_1cudaFlowCapturer_1a3c03a7d269268a2a63e864fedb2fb8a6" kind="function"><name>native_executable</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlowLinearOptimizer" kind="class"><name>tf::cudaFlowLinearOptimizer</name>
    <member refid="classtf_1_1cudaFlowLinearOptimizer_1a672b45d300c57d726c203c62f950efbd" kind="friend"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowLinearOptimizer_1a58e1021e702e553834c6696637b736f1" kind="function"><name>cudaFlowLinearOptimizer</name></member>
    <member refid="classtf_1_1cudaFlowLinearOptimizer_1a272177ccabb376ad862f4afd0c87d2b2" kind="function"><name>_optimize</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlowOptimizerBase" kind="class"><name>tf::cudaFlowOptimizerBase</name>
    <member refid="classtf_1_1cudaFlowOptimizerBase_1a25bb1274b6ab2279e261690a5fe46007" kind="function"><name>_toposort</name></member>
    <member refid="classtf_1_1cudaFlowOptimizerBase_1ae20d9b88a98439f8d8ee5f6280b15744" kind="function"><name>_levelize</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlowRoundRobinOptimizer" kind="class"><name>tf::cudaFlowRoundRobinOptimizer</name>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1a672b45d300c57d726c203c62f950efbd" kind="friend"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1a1354083daa786bad9df520f4ddb03511" kind="variable"><name>_num_streams</name></member>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1aef646675174ffcab6135fbfb7f0eecfe" kind="function"><name>cudaFlowRoundRobinOptimizer</name></member>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1ab293c8613773baf87ff740d2cec14149" kind="function"><name>cudaFlowRoundRobinOptimizer</name></member>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1a22fb9667ce393c31d908c3cc4f0ba650" kind="function"><name>num_streams</name></member>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1acbd190f22ecc606a8b888953649a5be6" kind="function"><name>num_streams</name></member>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1ad612d3b6c169a65eebcf300eaca358aa" kind="function"><name>_optimize</name></member>
    <member refid="classtf_1_1cudaFlowRoundRobinOptimizer_1afd0f87fbc9131efbdb9e92bb834aeb47" kind="function"><name>_reset</name></member>
  </compound>
  <compound refid="classtf_1_1cudaFlowSequentialOptimizer" kind="class"><name>tf::cudaFlowSequentialOptimizer</name>
    <member refid="classtf_1_1cudaFlowSequentialOptimizer_1a672b45d300c57d726c203c62f950efbd" kind="friend"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaFlowSequentialOptimizer_1a83c8d618b0e3ea4a838845bd819057e1" kind="function"><name>cudaFlowSequentialOptimizer</name></member>
    <member refid="classtf_1_1cudaFlowSequentialOptimizer_1a0bf59a8ce8c0ee8dd2ae9f7af192e3ad" kind="function"><name>_optimize</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaMergePair" kind="struct"><name>tf::detail::cudaMergePair</name>
    <member refid="structtf_1_1detail_1_1cudaMergePair_1adbf7c0271328c86df8e4901d967b3af6" kind="variable"><name>keys</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergePair_1a9c9433903a168daa925976a8dc0846c8" kind="variable"><name>indices</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaMergeRange" kind="struct"><name>tf::detail::cudaMergeRange</name>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1aa599b3f20e0dd6b8591f27a109f9f68b" kind="variable"><name>a_begin</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a18e5459630ad797730ae036811a1e8b6" kind="variable"><name>a_end</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1abbd8779cdd91be743c50058e6954f606" kind="variable"><name>b_begin</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a2ffd872168d2aceed6a5511bfafc63a6" kind="variable"><name>b_end</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a52c11fca5a95552bb4cad3d1a4699182" kind="function"><name>a_count</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a3bb9b4b36698fd65e61835db26365f2b" kind="function"><name>b_count</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1add20ad4dc8f69cd4e721c8cd6c980794" kind="function"><name>total</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1ab1fc3995d44f69c08cf79ae7ec8b7678" kind="function"><name>a_range</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1af892545bc85e5d7ebb7bd0b4ae245395" kind="function"><name>b_range</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a8c57bb805e4ec8bbd8f6f664ae942829" kind="function"><name>to_local</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a9c41c8b40139447d29620d97bf9f7dcd" kind="function"><name>partition</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a005452c52ca2da5ad00550d3a76b6b18" kind="function"><name>partition</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a63dac3d86274b1656a273c6dc0a0fef0" kind="function"><name>a_valid</name></member>
    <member refid="structtf_1_1detail_1_1cudaMergeRange_1a056ab4aac8e1d18e48ead08ede1dd4ea" kind="function"><name>b_valid</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaScanResult" kind="struct"><name>tf::detail::cudaScanResult</name>
    <member refid="structtf_1_1detail_1_1cudaScanResult_1a2d18214ac96fce1c9b5523eb72646497" kind="variable"><name>scan</name></member>
    <member refid="structtf_1_1detail_1_1cudaScanResult_1ac4aeb7807ad442899dc62ac65d48df9c" kind="variable"><name>reduction</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaScanResult_3_01T_00_01vt_00_01true_01_4" kind="struct"><name>tf::detail::cudaScanResult&lt; T, vt, true &gt;</name>
    <member refid="structtf_1_1detail_1_1cudaScanResult_3_01T_00_01vt_00_01true_01_4_1ae2631d1e70f8a1942022462b17e523cc" kind="variable"><name>scan</name></member>
    <member refid="structtf_1_1detail_1_1cudaScanResult_3_01T_00_01vt_00_01true_01_4_1a1e4eda84a7da8e5b3c1c4e3c799a9021" kind="variable"><name>reduction</name></member>
  </compound>
  <compound refid="classtf_1_1cudaScopedDevice" kind="class"><name>tf::cudaScopedDevice</name>
    <member refid="classtf_1_1cudaScopedDevice_1a350583393e3c5edb51543726ca659687" kind="variable"><name>_p</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1a03d75e2c0b084c8e926a00a922302653" kind="function"><name>cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1ad2c9212f42d80d1f7436bb52651006ee" kind="function"><name>~cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1a4315f5b72224a82ec8a7d6e5e2a45a7d" kind="function"><name>cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1ad15f7efad106ae6e8ba3ee5057a014f0" kind="function"><name>cudaScopedDevice</name></member>
    <member refid="classtf_1_1cudaScopedDevice_1a75ddad61a5ea8029bfc112a19d4a45dc" kind="function"><name>cudaScopedDevice</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory" kind="struct"><name>tf::cudaSharedMemory</name>
    <member refid="structtf_1_1cudaSharedMemory_1aa9107019c5f12fb26412b5c4ae0a39b1" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01bool_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; bool &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01bool_01_4_1a38d4dadcf0cf869a703005efb960bb51" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01char_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; char &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01char_01_4_1a54117307262fb62083bbc6f05792c0e6" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01double_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; double &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01double_01_4_1a83abd28e780449fc679ecca2cd1a58c5" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01float_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; float &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01float_01_4_1af276a91004948e6b218c2d215f04a0d3" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01int_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; int &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01int_01_4_1a15b5e0144d9984e1357bc57b0d32fa6b" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01long_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; long &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01long_01_4_1ae0ca4f3e5da97221e6fe0993b8e58cd4" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01short_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; short &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01short_01_4_1ab78cac0530b96bf84dd601d3973fd162" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01char_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned char &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01char_01_4_1a9971b377a2f62eeaefe23320403bf347" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01int_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned int &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01int_01_4_1a8663dc7588cf88c9c1ed7e28e832ecde" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01long_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned long &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01long_01_4_1abc39bfa1b0a82bc4c41b55191176b0bf" kind="function"><name>get</name></member>
  </compound>
  <compound refid="structtf_1_1cudaSharedMemory_3_01unsigned_01short_01_4" kind="struct"><name>tf::cudaSharedMemory&lt; unsigned short &gt;</name>
    <member refid="structtf_1_1cudaSharedMemory_3_01unsigned_01short_01_4_1ab0d92965dd5347008f751cae4149cd58" kind="function"><name>get</name></member>
  </compound>
  <compound refid="classtf_1_1cudaStream" kind="class"><name>tf::cudaStream</name>
    <member refid="classtf_1_1cudaStream_1ab29390d447e334d4945caf78b24d6ca6" kind="function"><name>cudaStream</name></member>
    <member refid="classtf_1_1cudaStream_1a922ed633cf0670b22aca1430e7a810b1" kind="function"><name>cudaStream</name></member>
    <member refid="classtf_1_1cudaStream_1a1a81d6005e8d60ad082dba2303a8aa30" kind="function"><name>synchronize</name></member>
    <member refid="classtf_1_1cudaStream_1ad98a025ff4306aa799e664a1e2aefd2e" kind="function"><name>begin_capture</name></member>
    <member refid="classtf_1_1cudaStream_1a9c48388031655cc691b267de96516a66" kind="function"><name>end_capture</name></member>
    <member refid="classtf_1_1cudaStream_1a8343c234b4a3040b59626dc70e81d767" kind="function"><name>record</name></member>
    <member refid="classtf_1_1cudaStream_1a6bb195945f7a580bec6105691c53c699" kind="function"><name>wait</name></member>
  </compound>
  <compound refid="structtf_1_1cudaStreamCreator" kind="struct"><name>tf::cudaStreamCreator</name>
    <member refid="structtf_1_1cudaStreamCreator_1a45240b5459cef8b2d5c8d48d57cc3910" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structtf_1_1cudaStreamDeleter" kind="struct"><name>tf::cudaStreamDeleter</name>
    <member refid="structtf_1_1cudaStreamDeleter_1a626619c00a871c7be86071fe262ce63e" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="classtf_1_1cudaTask" kind="class"><name>tf::cudaTask</name>
    <member refid="classtf_1_1cudaTask_1a9f64f729511a922781a59663ff1c6250" kind="friend"><name>cudaFlow</name></member>
    <member refid="classtf_1_1cudaTask_1a672b45d300c57d726c203c62f950efbd" kind="friend"><name>cudaFlowCapturer</name></member>
    <member refid="classtf_1_1cudaTask_1a8a72366cffc8beb57fb68b1591df56e4" kind="friend"><name>cudaFlowCapturerBase</name></member>
    <member refid="classtf_1_1cudaTask_1aa48fa98a827ff71f8c3845a29f5e4d10" kind="friend"><name>operator&lt;&lt;</name></member>
    <member refid="classtf_1_1cudaTask_1ac34d9bd5a869051ee5c7bc7b0faf9e33" kind="variable"><name>_node</name></member>
    <member refid="classtf_1_1cudaTask_1a68942b759c0420da99b639a8de3cc3d1" kind="function"><name>cudaTask</name></member>
    <member refid="classtf_1_1cudaTask_1a367cf46c1ea828de4502a2ddc805c094" kind="function"><name>cudaTask</name></member>
    <member refid="classtf_1_1cudaTask_1af17c570ca9a43ad71c4b626635ea9cbb" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1cudaTask_1abdd68287ec4dff4216af34d1db44d1b4" kind="function"><name>precede</name></member>
    <member refid="classtf_1_1cudaTask_1a4a9ca1a34bac47e4c9b04eb4fb2f7775" kind="function"><name>succeed</name></member>
    <member refid="classtf_1_1cudaTask_1ab81b4f71a44af8d61758524f0c274962" kind="function"><name>name</name></member>
    <member refid="classtf_1_1cudaTask_1aa80fb7a06b2828bd95c43fb465e10abe" kind="function"><name>name</name></member>
    <member refid="classtf_1_1cudaTask_1a581673ad83a48a2d3b4f06f125043c32" kind="function"><name>num_successors</name></member>
    <member refid="classtf_1_1cudaTask_1afe21933815619b8f51f0efa2706aa16e" kind="function"><name>num_dependents</name></member>
    <member refid="classtf_1_1cudaTask_1a1b0da9e643b80008063406fe1bf207b9" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1cudaTask_1a7eab02ec6633a5cf17cc15898db2d648" kind="function"><name>type</name></member>
    <member refid="classtf_1_1cudaTask_1af2ce580b0bfb771e463e66af64c2c571" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1cudaTask_1aebdbc276e0b3b72b5c9e574e801e76dc" kind="function"><name>for_each_successor</name></member>
    <member refid="classtf_1_1cudaTask_1afd23fdf190317e790e7fc35049b53fcf" kind="function"><name>for_each_dependent</name></member>
    <member refid="classtf_1_1cudaTask_1a3087f0396df700ada2d56a81a2b18fcb" kind="function"><name>cudaTask</name></member>
  </compound>
  <compound refid="classtf_1_1cudaUSMAllocator" kind="class"><name>tf::cudaUSMAllocator</name>
    <member refid="classtf_1_1cudaUSMAllocator_1a4ab981d38c36112b589a3b67c510fc50" kind="typedef"><name>value_type</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a580e704508e250311f4dce9c6413d900" kind="typedef"><name>pointer</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1ae700ece72b4eeb0f13f612455878f0a9" kind="typedef"><name>reference</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a1bbd56f975fd433c1fd86d5008373ad0" kind="typedef"><name>const_pointer</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1af5b1bd492a8de28eb75c136ee391b006" kind="typedef"><name>const_reference</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a2d145987f7535219dcfe47ee6765b2ad" kind="typedef"><name>size_type</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1aae5fff6eb8fd2e61f686d6e3ccb9ba9d" kind="typedef"><name>difference_type</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a10c30e951b3dab81261c26e91b0ec62b" kind="function"><name>cudaUSMAllocator</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a8b881c3608e2886513c0364e9fdc417f" kind="function"><name>cudaUSMAllocator</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a19981496b14b5a29cc2f71dfc25eecd1" kind="function"><name>cudaUSMAllocator</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a8bfebfc64bc7781856870f143a84f03b" kind="function"><name>~cudaUSMAllocator</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a174d32365a682da21469e155b95d3260" kind="function"><name>address</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1ae9e99ab1ec08d419798e50f8d5b49802" kind="function"><name>address</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1afa664496a897fc04442a5fc1988b8759" kind="function"><name>allocate</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a0ec189c941b389062106a37fde46677a" kind="function"><name>deallocate</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1abdf3c2024de5972e7d13d15d4960c984" kind="function"><name>max_size</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a9218d72dc90bc87b1ac648f5bf923439" kind="function"><name>construct</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1a33ea798011c837c65251b756ae3d66f9" kind="function"><name>destroy</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1aea7c8c9232f588faaf274c4439ca936d" kind="function"><name>operator==</name></member>
    <member refid="classtf_1_1cudaUSMAllocator_1abf8b566b8863b5a460e816a5f3d5fd7b" kind="function"><name>operator!=</name></member>
  </compound>
  <compound refid="classtf_1_1DataPipe" kind="class"><name>tf::DataPipe</name>
    <member refid="classtf_1_1DataPipe_1a5cc3b76f16379f4cb2ecdef66dee1ba3" kind="typedef"><name>callable_t</name></member>
    <member refid="classtf_1_1DataPipe_1ae5e9dd100a02edb2d560e8a1d516037d" kind="typedef"><name>input_t</name></member>
    <member refid="classtf_1_1DataPipe_1a8a99a980f0fa6bc55203cb33f526f007" kind="typedef"><name>output_t</name></member>
    <member refid="classtf_1_1DataPipe_1a576c05629fadf8120eb4db27cf28e659" kind="friend"><name>DataPipeline</name></member>
    <member refid="classtf_1_1DataPipe_1af7e6b232e5d82bd0443b4e4606a3fbea" kind="variable"><name>_type</name></member>
    <member refid="classtf_1_1DataPipe_1a0a91ad80a855658439bb9d9750ae4fc9" kind="variable"><name>_callable</name></member>
    <member refid="classtf_1_1DataPipe_1a8b7e8194874901eacfb5d3d2b72a2b85" kind="function"><name>DataPipe</name></member>
    <member refid="classtf_1_1DataPipe_1a542531895cb9363c6291e0ce9d126974" kind="function"><name>DataPipe</name></member>
    <member refid="classtf_1_1DataPipe_1a82ef8e8f06444b251ccfe323facbf67a" kind="function"><name>type</name></member>
    <member refid="classtf_1_1DataPipe_1af7a3c2d313edd443b049e937f8ec8cd8" kind="function"><name>type</name></member>
    <member refid="classtf_1_1DataPipe_1a5931f0ae2db8e00f4ad4c42a26adbeae" kind="function"><name>callable</name></member>
  </compound>
  <compound refid="classtf_1_1DataPipeline" kind="class"><name>tf::DataPipeline</name>
    <member refid="classtf_1_1DataPipeline_1a4fafcfd61a19628b48042b79e0d3f86e" kind="typedef"><name>data_t</name></member>
    <member refid="classtf_1_1DataPipeline_1aceec74e44a0b6c2c7018844643da84fb" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1DataPipeline_1a4c4d77197be98821ad567db7e8d1cc61" kind="variable"><name>_num_tokens</name></member>
    <member refid="classtf_1_1DataPipeline_1a30a1c660df935da648be30743a6a3381" kind="variable"><name>_pipes</name></member>
    <member refid="classtf_1_1DataPipeline_1ad7bb60a333fe6cde6c72c7599145a96c" kind="variable"><name>_meta</name></member>
    <member refid="classtf_1_1DataPipeline_1aa8c8a3852f6a055e0666bd679b69a550" kind="variable"><name>_lines</name></member>
    <member refid="classtf_1_1DataPipeline_1ab8d93e0c228355590102a9bc1775b5fd" kind="variable"><name>_tasks</name></member>
    <member refid="classtf_1_1DataPipeline_1ae78ad58672cd1a4307543957950d7819" kind="variable"><name>_pipeflows</name></member>
    <member refid="classtf_1_1DataPipeline_1a59b6d2346e79a363f5c15958a9d14d7b" kind="variable"><name>_buffer</name></member>
    <member refid="classtf_1_1DataPipeline_1a1559f218ca91b41d6c871a88183a04e5" kind="function"><name>DataPipeline</name></member>
    <member refid="classtf_1_1DataPipeline_1abe9f09834e32eebf792c330fe825138d" kind="function"><name>DataPipeline</name></member>
    <member refid="classtf_1_1DataPipeline_1aaa74a52dac68155a9b73f5f70d9d14aa" kind="function"><name>num_lines</name></member>
    <member refid="classtf_1_1DataPipeline_1a8720a404e3811b28e3dd5b98c9047496" kind="function"><name>num_pipes</name></member>
    <member refid="classtf_1_1DataPipeline_1ad6355a117bbc4d3d607fb6f95ffd9889" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1DataPipeline_1a2c208032313105d142e2c8cec650acfe" kind="function"><name>num_tokens</name></member>
    <member refid="classtf_1_1DataPipeline_1adfc70da6fdffc4a0a56bd2fe0f0dc07d" kind="function"><name>graph</name></member>
    <member refid="classtf_1_1DataPipeline_1a4550dd13483b3624648acda90d1e04f4" kind="function"><name>_gen_meta</name></member>
    <member refid="classtf_1_1DataPipeline_1ad5836484403bf71a4082fc9a71393e86" kind="function"><name>_on_pipe</name></member>
    <member refid="classtf_1_1DataPipeline_1a2820a8648648fbdb5f06220b5960f033" kind="function"><name>_build</name></member>
  </compound>
  <compound refid="structtf_1_1DefaultClosureWrapper" kind="struct"><name>tf::DefaultClosureWrapper</name>
  </compound>
  <compound refid="structtf_1_1DefaultTaskParams" kind="struct"><name>tf::DefaultTaskParams</name>
  </compound>
  <compound refid="classtf_1_1DeferredPipeflow" kind="class"><name>tf::DeferredPipeflow</name>
    <member refid="classtf_1_1DeferredPipeflow_1af65467c6cb27f4ef42522207f03ab9cf" kind="friend"><name>Pipeline</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1af64ddb98831b893b2388af2a2302acea" kind="friend"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1a980f82b352812b6113679176ae86cd06" kind="variable"><name>_token</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1af1c058902aa45aab8441df9ae6d3a8e8" kind="variable"><name>_num_deferrals</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1ae6b4ab057aefe7b7dac6925f64026c9b" kind="variable"><name>_dependents</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1a0d872e94c733f69a25814f21f2e96791" kind="function"><name>DeferredPipeflow</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1af7901bf11f47c8a18f4a975f9c3310b5" kind="function"><name>DeferredPipeflow</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1af73af50f0d304ec6b51219c9f2f9babc" kind="function"><name>DeferredPipeflow</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1a2f54d8b4097235501de465000490e5d8" kind="function"><name>DeferredPipeflow</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1a13188876ec55da73f71f7d6d36a3024e" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1DeferredPipeflow_1ae7356cbbea96ae9f62711703e610eba8" kind="function"><name>operator=</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1DependentAsync" kind="struct"><name>tf::Node::DependentAsync</name>
    <member refid="structtf_1_1Node_1_1DependentAsync_1a8fe764be4c0357d25e6da706c6c56390" kind="variable"><name>work</name></member>
    <member refid="structtf_1_1Node_1_1DependentAsync_1a7fafc495551519e0ca220136b923aae7" kind="variable"><name>use_count</name></member>
    <member refid="structtf_1_1Node_1_1DependentAsync_1a1ff3d7cb9d06a7c66623f41e5ed177a3" kind="variable"><name>state</name></member>
    <member refid="structtf_1_1Node_1_1DependentAsync_1a37927e314ca437d682dcaa40f86960e8" kind="function"><name>DependentAsync</name></member>
  </compound>
  <compound refid="structtf_1_1Taskflow_1_1Dumper" kind="struct"><name>tf::Taskflow::Dumper</name>
    <member refid="structtf_1_1Taskflow_1_1Dumper_1ae4ab73ca95da35a18d6bad1e0932ab19" kind="variable"><name>id</name></member>
    <member refid="structtf_1_1Taskflow_1_1Dumper_1aaf12aeff9ab5fdc366886711130e1f1f" kind="variable"><name>stack</name></member>
    <member refid="structtf_1_1Taskflow_1_1Dumper_1a3419470cb683a0eef3a8fb03ec0cf126" kind="variable"><name>visited</name></member>
  </compound>
  <compound refid="classtf_1_1DynamicPartitioner" kind="class"><name>tf::DynamicPartitioner</name>
    <member refid="classtf_1_1DynamicPartitioner_1ab16dcd2758ad0059aa5ac7822f31f8a7" kind="function"><name>type</name></member>
    <member refid="classtf_1_1DynamicPartitioner_1a2ff37845f4489df50f199f06a96590c8" kind="function"><name>DynamicPartitioner</name></member>
    <member refid="classtf_1_1DynamicPartitioner_1ac1922e2796cba43d81e4567c9e2c0c76" kind="function"><name>DynamicPartitioner</name></member>
    <member refid="classtf_1_1DynamicPartitioner_1a82c2ee7829e54b474e9b11e0944bc2cd" kind="function"><name>DynamicPartitioner</name></member>
    <member refid="classtf_1_1DynamicPartitioner_1afcb528d9e66380375fce8a7ae99b467f" kind="function"><name>loop</name></member>
    <member refid="classtf_1_1DynamicPartitioner_1abae632f23aeefe2cd91ca51b6b409d19" kind="function"><name>loop_until</name></member>
  </compound>
  <compound refid="classtf_1_1Executor" kind="class"><name>tf::Executor</name>
    <member refid="classtf_1_1Executor_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Executor_1aa48945297ede77a161defc88033ce8a6" kind="friend"><name>Subflow</name></member>
    <member refid="classtf_1_1Executor_1af3d14e26ba8af9e6cc5a32aad8446de7" kind="friend"><name>Runtime</name></member>
    <member refid="classtf_1_1Executor_1ac4a4632561a52d00a02d91296b20cb5a" kind="variable"><name>_MAX_STEALS</name></member>
    <member refid="classtf_1_1Executor_1ad031630f03103157f807d85a174d08cb" kind="variable"><name>_wsq_mutex</name></member>
    <member refid="classtf_1_1Executor_1aef4cf993dbd8efa0372cdea6b0f725d7" kind="variable"><name>_taskflows_mutex</name></member>
    <member refid="classtf_1_1Executor_1a7bd9227be27ebae3a10d5c317a6ef5de" kind="variable"><name>_num_topologies</name></member>
    <member refid="classtf_1_1Executor_1aa572e78d63306a5be82a1d347328c017" kind="variable"><name>_all_spawned</name></member>
    <member refid="classtf_1_1Executor_1a94357ea08db1859178f855b0b926b3de" kind="variable"><name>_topology_cv</name></member>
    <member refid="classtf_1_1Executor_1a8be5571fa0df99784aacb26b01d0f4b4" kind="variable"><name>_topology_mutex</name></member>
    <member refid="classtf_1_1Executor_1a9e38edfbc967dd3f5ca6f7a115f95ed7" kind="variable"><name>_num_topologies</name></member>
    <member refid="classtf_1_1Executor_1a6704efd89fdcf46bd388b2e83c5def9f" kind="variable"><name>_wids</name></member>
    <member refid="classtf_1_1Executor_1a3b5e7cf6749feded228a46e9fbfdef5f" kind="variable"><name>_threads</name></member>
    <member refid="classtf_1_1Executor_1ad93162f032d463cc845fbca4fc0d960e" kind="variable"><name>_workers</name></member>
    <member refid="classtf_1_1Executor_1a63090414fbad15f5934838d21aa0a28f" kind="variable"><name>_taskflows</name></member>
    <member refid="classtf_1_1Executor_1ab92c39c4b59577cf4163c21ef2edb2f3" kind="variable"><name>_notifier</name></member>
    <member refid="classtf_1_1Executor_1a21685ee0442fbbd635e7134d6a0afe1c" kind="variable"><name>_wsq</name></member>
    <member refid="classtf_1_1Executor_1a500d540a170f1da6e5247168bc6efa87" kind="variable"><name>_done</name></member>
    <member refid="classtf_1_1Executor_1ad7f083460df992b1186f83ac99481a57" kind="variable"><name>_observers</name></member>
    <member refid="classtf_1_1Executor_1a4910e89d89146b6d563d598b795eb4a9" kind="function"><name>Executor</name></member>
    <member refid="classtf_1_1Executor_1a5a511b0cc23b264826373d3dabcef670" kind="function"><name>~Executor</name></member>
    <member refid="classtf_1_1Executor_1a519777f5783981d534e9e53b99712069" kind="function"><name>run</name></member>
    <member refid="classtf_1_1Executor_1a4bbef53618db1852003a0cd1e1e40c50" kind="function"><name>run</name></member>
    <member refid="classtf_1_1Executor_1ac01c2f31dd3ed3b4dfa1a6c933a58b2f" kind="function"><name>run</name></member>
    <member refid="classtf_1_1Executor_1a52c27df2fb7372277f4926f4ab0a0937" kind="function"><name>run</name></member>
    <member refid="classtf_1_1Executor_1a6d0617eebc9421f1ba1f82ce6dd02c00" kind="function"><name>run_n</name></member>
    <member refid="classtf_1_1Executor_1ad10a12c9e14c8132e414c9a48443d938" kind="function"><name>run_n</name></member>
    <member refid="classtf_1_1Executor_1abd99b189457d1a00a33cd22339694fcd" kind="function"><name>run_n</name></member>
    <member refid="classtf_1_1Executor_1ad14430ac62f0e64e9e21712ba35c22ea" kind="function"><name>run_n</name></member>
    <member refid="classtf_1_1Executor_1a0f52e9dd64b65aba32ca0e13c1ed300a" kind="function"><name>run_until</name></member>
    <member refid="classtf_1_1Executor_1ab10fac2869d80049e5a75d2084a78eda" kind="function"><name>run_until</name></member>
    <member refid="classtf_1_1Executor_1af84856e5c4c605fcb3cbfbcad069a6a8" kind="function"><name>run_until</name></member>
    <member refid="classtf_1_1Executor_1af30c6947f060e4bdf344e90b6b44fc70" kind="function"><name>run_until</name></member>
    <member refid="classtf_1_1Executor_1a8fcd9e0557922bb8194999f0cd433ea8" kind="function"><name>corun</name></member>
    <member refid="classtf_1_1Executor_1a0fc6eb19f168dc4a9cd0a7c6187c1d2d" kind="function"><name>corun_until</name></member>
    <member refid="classtf_1_1Executor_1ab9aa252f70e9a40020a1e5a89d485b85" kind="function"><name>wait_for_all</name></member>
    <member refid="classtf_1_1Executor_1a9d2d464ab2a84ecb3b3ea7747e8e276b" kind="function"><name>num_workers</name></member>
    <member refid="classtf_1_1Executor_1a6d6c28ed58211e4c27a99571e5bf0b6c" kind="function"><name>num_topologies</name></member>
    <member refid="classtf_1_1Executor_1a5fb438dc0f7b9e1ae2fe3f240c82f174" kind="function"><name>num_taskflows</name></member>
    <member refid="classtf_1_1Executor_1a6487d589cb1f6b078b69fd3bb1082345" kind="function"><name>this_worker_id</name></member>
    <member refid="classtf_1_1Executor_1aff77def96ae740d648dd84e571237c83" kind="function"><name>make_observer</name></member>
    <member refid="classtf_1_1Executor_1a31081f492c376f7b798de0e430534531" kind="function"><name>remove_observer</name></member>
    <member refid="classtf_1_1Executor_1affec621aae59d73fc188ef454008fda2" kind="function"><name>num_observers</name></member>
    <member refid="classtf_1_1Executor_1af960048056f7c6b5bc71f4f526f05df7" kind="function"><name>async</name></member>
    <member refid="classtf_1_1Executor_1a28bdb43837bd6b548e092154e4df5dd9" kind="function"><name>async</name></member>
    <member refid="classtf_1_1Executor_1a0461cb2c459c9f9473c72af06af9c701" kind="function"><name>silent_async</name></member>
    <member refid="classtf_1_1Executor_1a878ec1bc337c7efe22619b21ba3ecdf3" kind="function"><name>silent_async</name></member>
    <member refid="classtf_1_1Executor_1a0e2d792f28136b8227b413d0c27d5c7f" kind="function"><name>silent_dependent_async</name></member>
    <member refid="classtf_1_1Executor_1abbf277ddbe4974e928361f232149341e" kind="function"><name>silent_dependent_async</name></member>
    <member refid="classtf_1_1Executor_1aa9b08e47e68ae1e568f18aa7104cb9b1" kind="function"><name>silent_dependent_async</name></member>
    <member refid="classtf_1_1Executor_1afdfb0ef6f995288299f7fe7e53c0cf3b" kind="function"><name>silent_dependent_async</name></member>
    <member refid="classtf_1_1Executor_1aee02b63d3a91ad5ca5a1c0e71f3e128f" kind="function"><name>dependent_async</name></member>
    <member refid="classtf_1_1Executor_1a4428cc5d1102ecb0eb51e0b977e08857" kind="function"><name>dependent_async</name></member>
    <member refid="classtf_1_1Executor_1a01e51e564f5def845506bcf6b4bb1664" kind="function"><name>dependent_async</name></member>
    <member refid="classtf_1_1Executor_1a962d7fb7213a804ee4a2e7b79455efdc" kind="function"><name>dependent_async</name></member>
    <member refid="classtf_1_1Executor_1a941f6e5e9e6141a81c750648c4802b63" kind="function"><name>_this_worker</name></member>
    <member refid="classtf_1_1Executor_1a57f5105dc812d83f259ec8cab7c96228" kind="function"><name>_wait_for_task</name></member>
    <member refid="classtf_1_1Executor_1a7338106d893b2b7cc223376878a48d64" kind="function"><name>_invoke_module_task_internal</name></member>
    <member refid="classtf_1_1Executor_1ae023614977a19def9e04cf7212eab65b" kind="function"><name>_observer_prologue</name></member>
    <member refid="classtf_1_1Executor_1a9cd8c1a72af4477bc0f9575b68ffb16a" kind="function"><name>_observer_epilogue</name></member>
    <member refid="classtf_1_1Executor_1a8aee6c0ec55b4bfb3909601203e98514" kind="function"><name>_spawn</name></member>
    <member refid="classtf_1_1Executor_1a0b4f231e11016194980b14e76262c8a7" kind="function"><name>_exploit_task</name></member>
    <member refid="classtf_1_1Executor_1aab7cc2e53d75fcc87fcc919f29bf9ca9" kind="function"><name>_explore_task</name></member>
    <member refid="classtf_1_1Executor_1ab8d98f12a62d10ad6cf1a4011a4d0034" kind="function"><name>_schedule</name></member>
    <member refid="classtf_1_1Executor_1a685c08b62a494359e34c6de2a700fdab" kind="function"><name>_schedule</name></member>
    <member refid="classtf_1_1Executor_1a93428e4393889d4f944cd2ead5ae9a44" kind="function"><name>_schedule</name></member>
    <member refid="classtf_1_1Executor_1aeb7284d779569a8297bca3c5f126cd9b" kind="function"><name>_schedule</name></member>
    <member refid="classtf_1_1Executor_1a723daf897c5d3d3517583cb4c62654ee" kind="function"><name>_set_up_topology</name></member>
    <member refid="classtf_1_1Executor_1a9c5bd85f2a5a266ae9cd27e5aaf2f14e" kind="function"><name>_set_up_graph</name></member>
    <member refid="classtf_1_1Executor_1a76be884d38d1bb8f9b8bba488c901b4b" kind="function"><name>_tear_down_topology</name></member>
    <member refid="classtf_1_1Executor_1a42e7db3fc43e1c5479e30e8d83da9e74" kind="function"><name>_tear_down_async</name></member>
    <member refid="classtf_1_1Executor_1a5a745396246598bb55acb9dd3a4b6c25" kind="function"><name>_tear_down_dependent_async</name></member>
    <member refid="classtf_1_1Executor_1a17fe8e0f32892cf2848611bca7566378" kind="function"><name>_tear_down_invoke</name></member>
    <member refid="classtf_1_1Executor_1ab85dc42b3e9b18e4b975bd5e9a8c5e72" kind="function"><name>_increment_topology</name></member>
    <member refid="classtf_1_1Executor_1a8728f22f6d177fad84ce667e02a7a3b9" kind="function"><name>_decrement_topology</name></member>
    <member refid="classtf_1_1Executor_1ad16165142908aca9444ea88e65040219" kind="function"><name>_invoke</name></member>
    <member refid="classtf_1_1Executor_1ac243d2a08b5a4a75dd440dc063b886ce" kind="function"><name>_invoke_static_task</name></member>
    <member refid="classtf_1_1Executor_1aacaec034158ede71eb815a9a1e9a83ca" kind="function"><name>_invoke_subflow_task</name></member>
    <member refid="classtf_1_1Executor_1a990098e7c3c5d055c2aa87526772ce1e" kind="function"><name>_detach_subflow_task</name></member>
    <member refid="classtf_1_1Executor_1afa6be6aab23ff4b2a293a2245818916d" kind="function"><name>_invoke_condition_task</name></member>
    <member refid="classtf_1_1Executor_1a19b3f10d4eab40143d3f76b946ded252" kind="function"><name>_invoke_multi_condition_task</name></member>
    <member refid="classtf_1_1Executor_1a4c5324657bf02bc2da0294192ab80233" kind="function"><name>_invoke_module_task</name></member>
    <member refid="classtf_1_1Executor_1a505ccafa7ab1855c200d5590499adf5a" kind="function"><name>_invoke_async_task</name></member>
    <member refid="classtf_1_1Executor_1a6c5e337d9666504eed50c242f2090dbf" kind="function"><name>_invoke_dependent_async_task</name></member>
    <member refid="classtf_1_1Executor_1a824fbb761eaece4549da2fe070f95dac" kind="function"><name>_process_async_dependent</name></member>
    <member refid="classtf_1_1Executor_1ad3c24a3fa701517bfdf119c549e2729a" kind="function"><name>_process_exception</name></member>
    <member refid="classtf_1_1Executor_1af5acda8c6e9a1564c9d665336ea091d0" kind="function"><name>_schedule_async_task</name></member>
    <member refid="classtf_1_1Executor_1a6202243d809e524d196a9c0e3092ce41" kind="function"><name>_corun_graph</name></member>
    <member refid="classtf_1_1Executor_1a43cdd198427b7be2827450f6ce8343af" kind="function"><name>_corun_until</name></member>
  </compound>
  <compound refid="structtf_1_1cudaFlowCapturer_1_1External" kind="struct"><name>tf::cudaFlowCapturer::External</name>
    <member refid="structtf_1_1cudaFlowCapturer_1_1External_1a8037773edaec0ea3bd4925187250482b" kind="variable"><name>graph</name></member>
  </compound>
  <compound refid="classtf_1_1FlowBuilder" kind="class"><name>tf::FlowBuilder</name>
    <member refid="classtf_1_1FlowBuilder_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1FlowBuilder_1a9404a57d9d37a4d49d20b686e4e5f68f" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1FlowBuilder_1a67d023d5493da1594a1d2eaea89da179" kind="function"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a60d7a666cab71ecfa3010b2efb0d6b57" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a1f6118326ad434f6c839007a1a79fe1b" kind="function"><name>emplace</name></member>
    <member refid="classtf_1_1FlowBuilder_1a5627f7962099ac7c4986993cffa7b909" kind="function"><name>erase</name></member>
    <member refid="classtf_1_1FlowBuilder_1ac6f22228d4c2ea2e643c4b0d42c0e92a" kind="function"><name>composed_of</name></member>
    <member refid="classtf_1_1FlowBuilder_1acab0b4ac82260f47fdb36a3244ee3aaf" kind="function"><name>placeholder</name></member>
    <member refid="classtf_1_1FlowBuilder_1a90f3d9b9d6fcf4df8e7d7878dfdd130d" kind="function"><name>linearize</name></member>
    <member refid="classtf_1_1FlowBuilder_1a4ec89b554d15ad5fb96f4fdb10dbbb16" kind="function"><name>linearize</name></member>
    <member refid="classtf_1_1FlowBuilder_1aae3edfa278baa75b08414e083c14c836" kind="function"><name>for_each</name></member>
    <member refid="classtf_1_1FlowBuilder_1a3b132bd902331a11b04b4ad66cf8bf77" kind="function"><name>for_each_index</name></member>
    <member refid="classtf_1_1FlowBuilder_1a97be7ceef6fa4276e3b074c10c13b826" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1FlowBuilder_1a7ea96d3fa0aa9e3ff337a9f1e37682b0" kind="function"><name>transform</name></member>
    <member refid="classtf_1_1FlowBuilder_1afb24798ebf46e253a40b01bffb1da6a7" kind="function"><name>reduce</name></member>
    <member refid="classtf_1_1FlowBuilder_1aa62d24438c0860e76153ffd129deba41" kind="function"><name>transform_reduce</name></member>
    <member refid="classtf_1_1FlowBuilder_1adcd90e5b46299f4ccab33caf46edcbc0" kind="function"><name>transform_reduce</name></member>
    <member refid="classtf_1_1FlowBuilder_1abcfd93880168b7c701c4e9da2e8657de" kind="function"><name>inclusive_scan</name></member>
    <member refid="classtf_1_1FlowBuilder_1a0f80c33f083b423d4d19b2a3f2650d65" kind="function"><name>inclusive_scan</name></member>
    <member refid="classtf_1_1FlowBuilder_1a7ba5b95020fe35f12ee6bdb97ac84156" kind="function"><name>exclusive_scan</name></member>
    <member refid="classtf_1_1FlowBuilder_1ab1afb02f55255db38625eded6bf6a1d4" kind="function"><name>transform_inclusive_scan</name></member>
    <member refid="classtf_1_1FlowBuilder_1aa7f9f4805a150cf8d82938388c419078" kind="function"><name>transform_inclusive_scan</name></member>
    <member refid="classtf_1_1FlowBuilder_1a2b7965f3611737503a73ab41714642b0" kind="function"><name>transform_exclusive_scan</name></member>
    <member refid="classtf_1_1FlowBuilder_1a46a96f5889e6ac87b1ff8d6313b5f471" kind="function"><name>find_if</name></member>
    <member refid="classtf_1_1FlowBuilder_1a95fa2719fa7bbe7d171cf474ddb06726" kind="function"><name>find_if_not</name></member>
    <member refid="classtf_1_1FlowBuilder_1a6bf43eeaa81900084a472be1d36d46a6" kind="function"><name>min_element</name></member>
    <member refid="classtf_1_1FlowBuilder_1a6be5d7f053a868647c3b9e0d9cdf6b68" kind="function"><name>max_element</name></member>
    <member refid="classtf_1_1FlowBuilder_1a35e180eb63de6c9f28e43185e837a4fa" kind="function"><name>sort</name></member>
    <member refid="classtf_1_1FlowBuilder_1a7d844e9856c7c65b26ccdb83ffdab1d6" kind="function"><name>sort</name></member>
    <member refid="classtf_1_1FlowBuilder_1a04115519f61efc42d018ea697054135d" kind="function"><name>_linearize</name></member>
  </compound>
  <compound refid="classtf_1_1Future" kind="class"><name>tf::Future</name>
    <member refid="classtf_1_1Future_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Future_1aa48945297ede77a161defc88033ce8a6" kind="friend"><name>Subflow</name></member>
    <member refid="classtf_1_1Future_1af3d14e26ba8af9e6cc5a32aad8446de7" kind="friend"><name>Runtime</name></member>
    <member refid="classtf_1_1Future_1ab2925106300ed72a886dd4a46a212114" kind="variable"><name>_topology</name></member>
    <member refid="classtf_1_1Future_1a520785365a129094d7ecf11e217509db" kind="function"><name>Future</name></member>
    <member refid="classtf_1_1Future_1ad22645f2bcbd2af449cfcd36eace9a1b" kind="function"><name>Future</name></member>
    <member refid="classtf_1_1Future_1ae6c5f935a2062f58054b067d39f5e78a" kind="function"><name>Future</name></member>
    <member refid="classtf_1_1Future_1af33647f94075cbbacc260f36917e6ff2" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Future_1af3f3c745d9359478e12560ceb2157fc6" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Future_1a3bf5f104864ab2590b6409712d3a469b" kind="function"><name>cancel</name></member>
    <member refid="classtf_1_1Future_1ac031c302bee903de52624d3b6868f61e" kind="function"><name>Future</name></member>
  </compound>
  <compound refid="classtf_1_1Graph" kind="class"><name>tf::Graph</name>
    <member refid="classtf_1_1Graph_1a6db9d28bd448a131448276ee03de1e6d" kind="friend"><name>Node</name></member>
    <member refid="classtf_1_1Graph_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Graph_1aa48945297ede77a161defc88033ce8a6" kind="friend"><name>Subflow</name></member>
    <member refid="classtf_1_1Graph_1af043dd6f6a359602805d9c7dd7539cca" kind="friend"><name>Taskflow</name></member>
    <member refid="classtf_1_1Graph_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Graph_1ac5e4c434ae03bf37c5a275f9fdc9f97d" kind="variable"><name>_nodes</name></member>
    <member refid="classtf_1_1Graph_1a1cd3bae8cabb45810b25cdbdd4e89006" kind="function"><name>Graph</name></member>
    <member refid="classtf_1_1Graph_1ade95936f49af81b9834e09e807033e61" kind="function"><name>Graph</name></member>
    <member refid="classtf_1_1Graph_1a5fcaca536e67632ff6dd3cf2c0284cfd" kind="function"><name>Graph</name></member>
    <member refid="classtf_1_1Graph_1a493acc70cca8c0a09d7c407d28c59ee2" kind="function"><name>~Graph</name></member>
    <member refid="classtf_1_1Graph_1a945eb240dd5d6840e282c525a1ea74e4" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Graph_1a9104e2edd9e02c64d0102378f81ed9a9" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Graph_1a30750e1be2657e491854791cd3afff06" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1Graph_1a790710289553897fa88672d9104d8ed1" kind="function"><name>size</name></member>
    <member refid="classtf_1_1Graph_1a8213e42bf3f7460757db411181d78c4c" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1Graph_1a13b297fdc502102ee784495f6d4c3d1e" kind="function"><name>_clear</name></member>
    <member refid="classtf_1_1Graph_1ace2898fcb8cd86099dbf5d453a9cf0b4" kind="function"><name>_clear_detached</name></member>
    <member refid="classtf_1_1Graph_1a39d26ac29a3aa19650dcf31a7563b6ee" kind="function"><name>_merge</name></member>
    <member refid="classtf_1_1Graph_1a6b50ab0846fe1720edc2dcc5147ba16b" kind="function"><name>_erase</name></member>
    <member refid="classtf_1_1Graph_1a7e19ca35c105d72e35f86740e6e3d34e" kind="function"><name>_emplace_back</name></member>
    <member refid="classtf_1_1Graph_1a4f4256f012b5b05fbaf3125d76faa9b6" kind="function"><name>_emplace_back</name></member>
  </compound>
  <compound refid="classtf_1_1GuidedPartitioner" kind="class"><name>tf::GuidedPartitioner</name>
    <member refid="classtf_1_1GuidedPartitioner_1ae414688ae5ece94e8b2c108dee4266e2" kind="function"><name>type</name></member>
    <member refid="classtf_1_1GuidedPartitioner_1ad922cf64fc355513c756247d4e2b69d3" kind="function"><name>GuidedPartitioner</name></member>
    <member refid="classtf_1_1GuidedPartitioner_1ab5540d5761ed6dbaf037cd431367b9f2" kind="function"><name>GuidedPartitioner</name></member>
    <member refid="classtf_1_1GuidedPartitioner_1a6a42cf5071fc665671345fefde2c5ec0" kind="function"><name>GuidedPartitioner</name></member>
    <member refid="classtf_1_1GuidedPartitioner_1ab1c854d9d6059ef5c8014afcdec8b026" kind="function"><name>loop</name></member>
    <member refid="classtf_1_1GuidedPartitioner_1a40dced9465b64dbc65018a9de64b39fd" kind="function"><name>loop_until</name></member>
  </compound>
  <compound refid="structtf_1_1cudaFlowCapturer_1_1Internal" kind="struct"><name>tf::cudaFlowCapturer::Internal</name>
  </compound>
  <compound refid="structtf_1_1IsPartitioner" kind="struct"><name>tf::IsPartitioner</name>
  </compound>
  <compound refid="structtf_1_1IsPod" kind="struct"><name>tf::IsPod</name>
  </compound>
  <compound refid="structtf_1_1DataPipeline_1_1Line" kind="struct"><name>tf::DataPipeline::Line</name>
    <member refid="structtf_1_1DataPipeline_1_1Line_1aaade43a88e3f312158054c3ab34f62a9" kind="variable"><name>join_counter</name></member>
  </compound>
  <compound refid="structtf_1_1Pipeline_1_1Line" kind="struct"><name>tf::Pipeline::Line</name>
    <member refid="structtf_1_1Pipeline_1_1Line_1ae1ac04cb91bb360639e4e384e201011f" kind="variable"><name>join_counter</name></member>
  </compound>
  <compound refid="structtf_1_1ScalablePipeline_1_1Line" kind="struct"><name>tf::ScalablePipeline::Line</name>
    <member refid="structtf_1_1ScalablePipeline_1_1Line_1a777bd19b4440c77f9abc5e63debe1874" kind="variable"><name>join_counter</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1Module" kind="struct"><name>tf::Node::Module</name>
    <member refid="structtf_1_1Node_1_1Module_1a36d452a503c51f5166ff2fe7927f6ee1" kind="variable"><name>graph</name></member>
    <member refid="structtf_1_1Node_1_1Module_1a777969545ba578e7beb87ca016d5d797" kind="function"><name>Module</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1MultiCondition" kind="struct"><name>tf::Node::MultiCondition</name>
    <member refid="structtf_1_1Node_1_1MultiCondition_1ac1379c4b8b443c3f7a28c6b3544d19c8" kind="variable"><name>work</name></member>
    <member refid="structtf_1_1Node_1_1MultiCondition_1a978a3094a70121066466fe382d15e471" kind="function"><name>MultiCondition</name></member>
  </compound>
  <compound refid="classtf_1_1Node" kind="class"><name>tf::Node</name>
    <member refid="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bc" kind="enum"><name>AsyncState</name></member>
    <member refid="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bca6f8eb84e55e2f1c21cb428ae5b644a6e" kind="enumvalue"><name>UNFINISHED</name></member>
    <member refid="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bcaaeff3f3f2731681b2ed6a27786a56203" kind="enumvalue"><name>LOCKED</name></member>
    <member refid="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bca2c616b2713e2e0aed04b4c4752c88133" kind="enumvalue"><name>FINISHED</name></member>
    <member refid="classtf_1_1Node_1a8c001eed6bd8ac9bd348c2f710f9e0b1" kind="typedef"><name>Placeholder</name></member>
    <member refid="classtf_1_1Node_1acd5ac6414ba9b85c15826fcbe924905e" kind="typedef"><name>handle_t</name></member>
    <member refid="classtf_1_1Node_1afab89afd724f1b07b1aaad6bdc61c47a" kind="friend"><name>Graph</name></member>
    <member refid="classtf_1_1Node_1aaa7728226b6ce66782e8816b1658dd9a" kind="friend"><name>Task</name></member>
    <member refid="classtf_1_1Node_1a842f41f7bc0f1de257dc369a61cc7eaf" kind="friend"><name>AsyncTask</name></member>
    <member refid="classtf_1_1Node_1a0aa0e12e4a0ba023033e808fb2132fdf" kind="friend"><name>TaskView</name></member>
    <member refid="classtf_1_1Node_1af043dd6f6a359602805d9c7dd7539cca" kind="friend"><name>Taskflow</name></member>
    <member refid="classtf_1_1Node_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Node_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Node_1aa48945297ede77a161defc88033ce8a6" kind="friend"><name>Subflow</name></member>
    <member refid="classtf_1_1Node_1af3d14e26ba8af9e6cc5a32aad8446de7" kind="friend"><name>Runtime</name></member>
    <member refid="classtf_1_1Node_1aa78ccd142a22698289c2c823bfa14241" kind="variable"><name>TF_ENABLE_POOLABLE_ON_THIS</name></member>
    <member refid="classtf_1_1Node_1a4a022f2346fe70d56910bd4108dd0e05" kind="variable"><name>_name</name></member>
    <member refid="classtf_1_1Node_1a97240d40fe462ab1df97aee10a966965" kind="variable"><name>_priority</name></member>
    <member refid="classtf_1_1Node_1a5458c5905ee4b28b70f368a522c198f2" kind="variable"><name>_data</name></member>
    <member refid="classtf_1_1Node_1ae771748b9bb4f9a01116ddbc31f7bc2d" kind="variable"><name>_topology</name></member>
    <member refid="classtf_1_1Node_1a20e0970afa16e43872a9a2f8839e9540" kind="variable"><name>_parent</name></member>
    <member refid="classtf_1_1Node_1a45a3783b67e19091d8e02e5ab56c6b63" kind="variable"><name>_successors</name></member>
    <member refid="classtf_1_1Node_1a4f549abd6361156430572e57a1f89aec" kind="variable"><name>_dependents</name></member>
    <member refid="classtf_1_1Node_1a19bbe02799273a6df9b639d22813f83c" kind="variable"><name>_state</name></member>
    <member refid="classtf_1_1Node_1a58f07ec0fb20050fe1d9845ac1d897f6" kind="variable"><name>_join_counter</name></member>
    <member refid="classtf_1_1Node_1a26a8c9bfbbd1c62dbd49545d9d49a8f4" kind="variable"><name>_semaphores</name></member>
    <member refid="classtf_1_1Node_1a3579ebdad0ee32537fe593811c14096e" kind="variable"><name>_exception_ptr</name></member>
    <member refid="classtf_1_1Node_1a83b494fd50500454e9fb1b8afe8fc65c" kind="variable"><name>_handle</name></member>
    <member refid="classtf_1_1Node_1a0f13e41390ceb7e3fe884952b39f2d0f" kind="variable"><name>CONDITIONED</name></member>
    <member refid="classtf_1_1Node_1aad8a10e34c51bc4a809aaa8fba7de854" kind="variable"><name>DETACHED</name></member>
    <member refid="classtf_1_1Node_1aa08558b7c798287cf75b8a2dc322e2de" kind="variable"><name>ACQUIRED</name></member>
    <member refid="classtf_1_1Node_1ada61f28d1cbfd66654c77211a8748891" kind="variable"><name>READY</name></member>
    <member refid="classtf_1_1Node_1aefc19f1840b8ab57b2e472eab4ca67fd" kind="variable"><name>EXCEPTION</name></member>
    <member refid="classtf_1_1Node_1a421d0da10e52e8bd1036676efc63579e" kind="variable"><name>PLACEHOLDER</name></member>
    <member refid="classtf_1_1Node_1a5714ed4ff69cce23a1db12c258e66439" kind="variable"><name>STATIC</name></member>
    <member refid="classtf_1_1Node_1a6de84d178457b0f6ea089e08192dd7d3" kind="variable"><name>SUBFLOW</name></member>
    <member refid="classtf_1_1Node_1a923ea39a548a7421f4ec56349c61c1eb" kind="variable"><name>CONDITION</name></member>
    <member refid="classtf_1_1Node_1aeb7855e09ce91f0a8c87ed3f4df5cac7" kind="variable"><name>MULTI_CONDITION</name></member>
    <member refid="classtf_1_1Node_1aab8a9356eb42f9250e548818bbe30ae3" kind="variable"><name>MODULE</name></member>
    <member refid="classtf_1_1Node_1ab298b962d4cadbfd38f1a398712e2880" kind="variable"><name>ASYNC</name></member>
    <member refid="classtf_1_1Node_1a1beac9706176ad4f9e6062e8a6fa8bb2" kind="variable"><name>DEPENDENT_ASYNC</name></member>
    <member refid="classtf_1_1Node_1aebc4701caf53db89d260c75fba0e5050" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1aa5e77c24dc9a40efde7df11d034700e3" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1adfceea099b09ccb6dcd63b6382ce070d" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1a65675d673d5ed9c4309840254e62516b" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1a1aacff0f33b84bded0a710bd041eacc6" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1a65026753fe6eaf5c4c904b4437aeecef" kind="function"><name>~Node</name></member>
    <member refid="classtf_1_1Node_1a7133911e093d82e5f5edd73124b60c6a" kind="function"><name>num_successors</name></member>
    <member refid="classtf_1_1Node_1abbb6a85cc8f62682ce8c78ad9851c0e5" kind="function"><name>num_dependents</name></member>
    <member refid="classtf_1_1Node_1ad5eb7ac6418e89fccc300986b216510c" kind="function"><name>num_strong_dependents</name></member>
    <member refid="classtf_1_1Node_1a7dbe963f0173062f3a6164f1ff581c5a" kind="function"><name>num_weak_dependents</name></member>
    <member refid="classtf_1_1Node_1a0214bc98366d4c24a1cae941cdffe119" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Node_1ae8e06f322a0238307363acbe41efdd64" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1a803cea9b57cbb262284ab2324bec7580" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1afb060bbf0a83ffc6f8b3441665c1cc11" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1a66a64a20e1cf38de06c44912c263a99b" kind="function"><name>Node</name></member>
    <member refid="classtf_1_1Node_1a7e6ccc13774475f9ee23af8d37a5311c" kind="function"><name>_precede</name></member>
    <member refid="classtf_1_1Node_1a30ffac5296d61687b8ebb9ff4716a26a" kind="function"><name>_set_up_join_counter</name></member>
    <member refid="classtf_1_1Node_1af5aa363ce33e70446382ab5218a5d87b" kind="function"><name>_process_exception</name></member>
    <member refid="classtf_1_1Node_1a4207c300c6ac0c564deef65c73e1ee96" kind="function"><name>_is_cancelled</name></member>
    <member refid="classtf_1_1Node_1aed1c802d5794f881f9c47089003ef62c" kind="function"><name>_is_conditioner</name></member>
    <member refid="classtf_1_1Node_1ac5778a60afb44cd54eb0247a04b38a91" kind="function"><name>_acquire_all</name></member>
    <member refid="classtf_1_1Node_1a69f967fa92024d7b31cc30d010ccf207" kind="function"><name>_release_all</name></member>
  </compound>
  <compound refid="structtf_1_1NodeDeleter" kind="struct"><name>tf::NodeDeleter</name>
    <member refid="structtf_1_1NodeDeleter_1a99b8529531deaf94bfb1723a528a6a47" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="classtf_1_1ObserverInterface" kind="class"><name>tf::ObserverInterface</name>
    <member refid="classtf_1_1ObserverInterface_1adfd71c3af3ae2ea4f41eed26c1b6f604" kind="function"><name>~ObserverInterface</name></member>
    <member refid="classtf_1_1ObserverInterface_1a41e6e62f12bf9d9dc4fa74632f6825d9" kind="function"><name>set_up</name></member>
    <member refid="classtf_1_1ObserverInterface_1a8225fcacb03089677a1efc4b16b734cc" kind="function"><name>on_entry</name></member>
    <member refid="classtf_1_1ObserverInterface_1aa22f5378154653f08d9a58326bda4754" kind="function"><name>on_exit</name></member>
  </compound>
  <compound refid="classtf_1_1PartitionerBase" kind="class"><name>tf::PartitionerBase</name>
    <member refid="classtf_1_1PartitionerBase_1a2b6152f24c2a3d6e750349d02ecb4595" kind="typedef"><name>closure_wrapper_type</name></member>
    <member refid="classtf_1_1PartitionerBase_1a9ff56f7150ee4ff42b5006942f9c4b52" kind="variable"><name>_chunk_size</name></member>
    <member refid="classtf_1_1PartitionerBase_1a9c5a8d350a913bea4c63d350e2bc9d1b" kind="variable"><name>_closure_wrapper</name></member>
    <member refid="classtf_1_1PartitionerBase_1ad0037e70726a054527a923821ec2d95a" kind="function"><name>PartitionerBase</name></member>
    <member refid="classtf_1_1PartitionerBase_1a099464a339e09d9f6e4a59bec425c53a" kind="function"><name>PartitionerBase</name></member>
    <member refid="classtf_1_1PartitionerBase_1a9cf9f5400992c6d9bd4131b5af2b9e8e" kind="function"><name>PartitionerBase</name></member>
    <member refid="classtf_1_1PartitionerBase_1afa34299dea355738efa5684024d08215" kind="function"><name>chunk_size</name></member>
    <member refid="classtf_1_1PartitionerBase_1a481097aeb7ec62dcc23584eaa48cbce4" kind="function"><name>chunk_size</name></member>
    <member refid="classtf_1_1PartitionerBase_1a929714296243b2c63e4f2baa2025d380" kind="function"><name>closure_wrapper</name></member>
    <member refid="classtf_1_1PartitionerBase_1a99e23ce7c0faf3a932ab2b7ac51e58f4" kind="function"><name>closure_wrapper</name></member>
  </compound>
  <compound refid="classtf_1_1Pipe" kind="class"><name>tf::Pipe</name>
    <member refid="classtf_1_1Pipe_1aa3d034d90bc01d42d9dd55f82de1da2a" kind="typedef"><name>callable_t</name></member>
    <member refid="classtf_1_1Pipe_1af65467c6cb27f4ef42522207f03ab9cf" kind="friend"><name>Pipeline</name></member>
    <member refid="classtf_1_1Pipe_1af64ddb98831b893b2388af2a2302acea" kind="friend"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1Pipe_1a2cb97697921ad55788a1d88feb338c8b" kind="variable"><name>_type</name></member>
    <member refid="classtf_1_1Pipe_1a0337e2bbcf5cf7e204951a489dee7c30" kind="variable"><name>_callable</name></member>
    <member refid="classtf_1_1Pipe_1ad2c372074ba5daacb54811cb48141570" kind="function"><name>Pipe</name></member>
    <member refid="classtf_1_1Pipe_1aebe1462048fa147ad8328fb13577cdf2" kind="function"><name>Pipe</name></member>
    <member refid="classtf_1_1Pipe_1a0a8ad99dbb66ad0bca766da47ef11b21" kind="function"><name>type</name></member>
    <member refid="classtf_1_1Pipe_1ad939617c84a9e97ef1dd56ad56b84e33" kind="function"><name>type</name></member>
    <member refid="classtf_1_1Pipe_1a43da5ae4ba56e35e4d0a705f7fa25686" kind="function"><name>callable</name></member>
  </compound>
  <compound refid="classtf_1_1Pipeflow" kind="class"><name>tf::Pipeflow</name>
    <member refid="classtf_1_1Pipeflow_1af65467c6cb27f4ef42522207f03ab9cf" kind="friend"><name>Pipeline</name></member>
    <member refid="classtf_1_1Pipeflow_1af64ddb98831b893b2388af2a2302acea" kind="friend"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1Pipeflow_1a576c05629fadf8120eb4db27cf28e659" kind="friend"><name>DataPipeline</name></member>
    <member refid="classtf_1_1Pipeflow_1a082a1a549ab50360c7e6e55a0fd4477f" kind="variable"><name>_line</name></member>
    <member refid="classtf_1_1Pipeflow_1a597744cac4ef0dd9e31e1d694f71f7ec" kind="variable"><name>_pipe</name></member>
    <member refid="classtf_1_1Pipeflow_1a16275ecab224bf1ede060d9e24b4eb48" kind="variable"><name>_token</name></member>
    <member refid="classtf_1_1Pipeflow_1a7474a98aa648d96011df53b085d53965" kind="variable"><name>_stop</name></member>
    <member refid="classtf_1_1Pipeflow_1a669318dadb120d96c277529670a02588" kind="variable"><name>_num_deferrals</name></member>
    <member refid="classtf_1_1Pipeflow_1a444746d10472b56b8e6cb52fd35e3d84" kind="variable"><name>_dependents</name></member>
    <member refid="classtf_1_1Pipeflow_1a801877443f7046b9e450160c05c26d7d" kind="function"><name>Pipeflow</name></member>
    <member refid="classtf_1_1Pipeflow_1afee054e6a99965d4b3e36ff903227e6c" kind="function"><name>line</name></member>
    <member refid="classtf_1_1Pipeflow_1a4914c1f381a3016e98285b019cf60d6d" kind="function"><name>pipe</name></member>
    <member refid="classtf_1_1Pipeflow_1a295e5d884665c076f4ef5d78139f7c51" kind="function"><name>token</name></member>
    <member refid="classtf_1_1Pipeflow_1a830b7f204cb87fff17e8d424918d9453" kind="function"><name>stop</name></member>
    <member refid="classtf_1_1Pipeflow_1a2f909c75e15b6bdf83faf2c0b74c7a74" kind="function"><name>num_deferrals</name></member>
    <member refid="classtf_1_1Pipeflow_1a5fbd2326b68a69826423bf0528a7c961" kind="function"><name>defer</name></member>
  </compound>
  <compound refid="classtf_1_1Pipeline" kind="class"><name>tf::Pipeline</name>
    <member refid="classtf_1_1Pipeline_1a1e3ad41a55de7fdc1f2ad40ee49a4d4a" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1Pipeline_1a9d9fe0c2e30331b1f7e40d2dc3c5a76f" kind="variable"><name>_num_tokens</name></member>
    <member refid="classtf_1_1Pipeline_1a442f95439871ed72fd67edab10fc77a0" kind="variable"><name>_pipes</name></member>
    <member refid="classtf_1_1Pipeline_1a836ee5a9505f07fc032ea69563063378" kind="variable"><name>_meta</name></member>
    <member refid="classtf_1_1Pipeline_1a21eaa8e9904e9ebb9a1b1ea4a1e183de" kind="variable"><name>_lines</name></member>
    <member refid="classtf_1_1Pipeline_1aba0c750fa328b21fcda5cb44801d6289" kind="variable"><name>_tasks</name></member>
    <member refid="classtf_1_1Pipeline_1a8d0536148e5fdd373b4ed81965498749" kind="variable"><name>_pipeflows</name></member>
    <member refid="classtf_1_1Pipeline_1a10499ef31797d4db31243e6f73fb2ee8" kind="variable"><name>_ready_tokens</name></member>
    <member refid="classtf_1_1Pipeline_1ab19a3164e7584ce1d16ecbff975421a7" kind="variable"><name>_token_dependencies</name></member>
    <member refid="classtf_1_1Pipeline_1a7ff727cd8c130fc9b606c01dbfa12f9d" kind="variable"><name>_deferred_tokens</name></member>
    <member refid="classtf_1_1Pipeline_1aaee01340ac6e941a949931b7e478d83e" kind="variable"><name>_longest_deferral</name></member>
    <member refid="classtf_1_1Pipeline_1aad8735676e4f9fd8474ad1ac51b58f3e" kind="function"><name>Pipeline</name></member>
    <member refid="classtf_1_1Pipeline_1a879a54b37af5db33e5768e5b3c135ba6" kind="function"><name>Pipeline</name></member>
    <member refid="classtf_1_1Pipeline_1a79f066bacd6c1abd28c26d8196955e95" kind="function"><name>num_lines</name></member>
    <member refid="classtf_1_1Pipeline_1adfef0c60f8f8ace267d7cd8548457ff3" kind="function"><name>num_pipes</name></member>
    <member refid="classtf_1_1Pipeline_1a311d874b98de6f0def8a7d869e8d15bd" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1Pipeline_1a89af6714b661ded59970cac4c73b3ef9" kind="function"><name>num_tokens</name></member>
    <member refid="classtf_1_1Pipeline_1a4320bdd8b8cf05c9aac1b9fa000e4a35" kind="function"><name>graph</name></member>
    <member refid="classtf_1_1Pipeline_1a5c0604ba81fb2c8d0ba9c076df13ddda" kind="function"><name>_gen_meta</name></member>
    <member refid="classtf_1_1Pipeline_1aa2e4a635ac4469754f2d922ea67151f9" kind="function"><name>_on_pipe</name></member>
    <member refid="classtf_1_1Pipeline_1ad091bbd38c1538884aa83d488fdf40f2" kind="function"><name>_build</name></member>
    <member refid="classtf_1_1Pipeline_1afb16e7472b979f81a8d997eae134e1c9" kind="function"><name>_check_dependents</name></member>
    <member refid="classtf_1_1Pipeline_1a2d90bf386da24e7913b021febbcb6809" kind="function"><name>_construct_deferred_tokens</name></member>
    <member refid="classtf_1_1Pipeline_1aa69993288e9ceefed489ff0c71ed1aca" kind="function"><name>_resolve_token_dependencies</name></member>
  </compound>
  <compound refid="structtf_1_1DataPipeline_1_1PipeMeta" kind="struct"><name>tf::DataPipeline::PipeMeta</name>
    <member refid="structtf_1_1DataPipeline_1_1PipeMeta_1a46556eee44255bb7e1048e8445086e80" kind="variable"><name>type</name></member>
  </compound>
  <compound refid="structtf_1_1Pipeline_1_1PipeMeta" kind="struct"><name>tf::Pipeline::PipeMeta</name>
    <member refid="structtf_1_1Pipeline_1_1PipeMeta_1a9ff8f29a229bba87f9e08bbc1a86bb33" kind="variable"><name>type</name></member>
  </compound>
  <compound refid="structtf_1_1ProfileData" kind="struct"><name>tf::ProfileData</name>
    <member refid="structtf_1_1ProfileData_1a4fb1f988a4e0697b8ce09cf53d82b559" kind="variable"><name>timelines</name></member>
    <member refid="structtf_1_1ProfileData_1aeb9f598e4887c2c6a609558af270e8ab" kind="function"><name>ProfileData</name></member>
    <member refid="structtf_1_1ProfileData_1a5b3df6d0b86817aeb0cd2ae65d3f6647" kind="function"><name>ProfileData</name></member>
    <member refid="structtf_1_1ProfileData_1aca16c42f4ae3056bddcc1f14b9216958" kind="function"><name>ProfileData</name></member>
    <member refid="structtf_1_1ProfileData_1a78c6fcf63302872220bd75ef82cd1a55" kind="function"><name>operator=</name></member>
    <member refid="structtf_1_1ProfileData_1a12535e834bc6e429f3815c90162e1c57" kind="function"><name>operator=</name></member>
    <member refid="structtf_1_1ProfileData_1ac8bd5a12ea62aa7f5c1afbcceae1b075" kind="function"><name>save</name></member>
    <member refid="structtf_1_1ProfileData_1a8ba1ef7e916c4b827707a48c886381c4" kind="function"><name>load</name></member>
  </compound>
  <compound refid="classtf_1_1RandomPartitioner" kind="class"><name>tf::RandomPartitioner</name>
    <member refid="classtf_1_1RandomPartitioner_1a8bc25fd9379e4075847ed85efcddba0a" kind="variable"><name>_alpha</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a53866b6a5227064ba14d7ec40698f1c7" kind="variable"><name>_beta</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a5c64a1d794cece6ed226fb1c14632cbb" kind="function"><name>type</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a5ab28a71b47ce0ddef1764469d67153d" kind="function"><name>RandomPartitioner</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a72fa7e849ffb0c9b6547edc719cbda50" kind="function"><name>RandomPartitioner</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a3158af2f133856f3620fad20decd8d40" kind="function"><name>RandomPartitioner</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a586f4233b5ace06598282b007b75ee7f" kind="function"><name>RandomPartitioner</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a36fcc5816916f621f0fb2eb9338b3376" kind="function"><name>RandomPartitioner</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a67eea3b4ca4a2920a320d717ff3153aa" kind="function"><name>alpha</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a8f378443b152a7f0b7476a82982d12cb" kind="function"><name>beta</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a7b283c21ca72666c7a12f0e82b28fde1" kind="function"><name>chunk_size_range</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a6b1533ffdce413e11298ad28019d1012" kind="function"><name>loop</name></member>
    <member refid="classtf_1_1RandomPartitioner_1a25f583caec2a85ebfd33d5cfec12dc9a" kind="function"><name>loop_until</name></member>
  </compound>
  <compound refid="structtf_1_1cudaDeviceAllocator_1_1rebind" kind="struct"><name>tf::cudaDeviceAllocator::rebind</name>
    <member refid="structtf_1_1cudaDeviceAllocator_1_1rebind_1a6d0799b927ce743f4fa174c6a9806282" kind="typedef"><name>other</name></member>
  </compound>
  <compound refid="structtf_1_1cudaUSMAllocator_1_1rebind" kind="struct"><name>tf::cudaUSMAllocator::rebind</name>
    <member refid="structtf_1_1cudaUSMAllocator_1_1rebind_1ad110a928d2b4e991f1dacd473a6ba00c" kind="typedef"><name>other</name></member>
  </compound>
  <compound refid="classtf_1_1Runtime" kind="class"><name>tf::Runtime</name>
    <member refid="classtf_1_1Runtime_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Runtime_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Runtime_1a8074028372bb09946927b1b6ec01c6e1" kind="variable"><name>_executor</name></member>
    <member refid="classtf_1_1Runtime_1ae9bd2bcb1e004b078f627472fb9e0371" kind="variable"><name>_worker</name></member>
    <member refid="classtf_1_1Runtime_1ac040d7410fbb82703ac39ac3b1baf8fd" kind="variable"><name>_parent</name></member>
    <member refid="classtf_1_1Runtime_1a7bf472d4afca4eed0f1a0fe4168c1097" kind="function"><name>~Runtime</name></member>
    <member refid="classtf_1_1Runtime_1a4ee48a82df1f9758a999d18e6015cec4" kind="function"><name>executor</name></member>
    <member refid="classtf_1_1Runtime_1aa7e72cc0f298475195b252c8f1793343" kind="function"><name>schedule</name></member>
    <member refid="classtf_1_1Runtime_1a5688b13034f179c4a8b2b0ebbb215051" kind="function"><name>async</name></member>
    <member refid="classtf_1_1Runtime_1a333a76d63e50f3ddfbea60c4356b86f3" kind="function"><name>async</name></member>
    <member refid="classtf_1_1Runtime_1a0ce29efa2106c8c5a1432e4a55ab2e05" kind="function"><name>silent_async</name></member>
    <member refid="classtf_1_1Runtime_1a532d8cd09ebee59023e3ad65f3220f4e" kind="function"><name>silent_async</name></member>
    <member refid="classtf_1_1Runtime_1ab32a718db1cc32d997b68b4f8482fc7e" kind="function"><name>silent_async_unchecked</name></member>
    <member refid="classtf_1_1Runtime_1ae5144f53fe3a52e7d57de9e01815c814" kind="function"><name>silent_async_unchecked</name></member>
    <member refid="classtf_1_1Runtime_1a1c772e90614302024cfa52fa86d75cac" kind="function"><name>corun</name></member>
    <member refid="classtf_1_1Runtime_1a078fc4e7202426221d45e44b08ad60e6" kind="function"><name>corun_until</name></member>
    <member refid="classtf_1_1Runtime_1afcc18484a95fd2a834940d878eaf4dfc" kind="function"><name>corun_all</name></member>
    <member refid="classtf_1_1Runtime_1ae1dbce75fd7375ae3bf38948638e34ec" kind="function"><name>worker</name></member>
    <member refid="classtf_1_1Runtime_1abe76e072e64f5d1b1fe09c7e7c22777e" kind="function"><name>Runtime</name></member>
    <member refid="classtf_1_1Runtime_1afaf53e62684c1fafa92ea603d77c0568" kind="function"><name>_async</name></member>
    <member refid="classtf_1_1Runtime_1ae482005cb6bad7d65b306239086e74a8" kind="function"><name>_silent_async</name></member>
  </compound>
  <compound refid="classtf_1_1ScalablePipeline" kind="class"><name>tf::ScalablePipeline</name>
    <member refid="classtf_1_1ScalablePipeline_1af06cc645f8a7c4797ca53e274b0c7547" kind="typedef"><name>pipe_t</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a22fa085403161f1054f7c06004a6ae0c" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a29cfaffe5b328370e0fc5cabe242c9c9" kind="variable"><name>_num_tokens</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a207985f26c6ddf57e7c286af5576b124" kind="variable"><name>_pipes</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a66182f2b381be1f628da346b2e47c2ab" kind="variable"><name>_tasks</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a879b367ce62ff667d00c16c18313021c" kind="variable"><name>_pipeflows</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a2d6a310af9e3a69efaea0e8002960062" kind="variable"><name>_lines</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a18a2b6051521959ee807c4f1899ec2f3" kind="variable"><name>_ready_tokens</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a93c0b0ee2cff99ff3cdaabbb81592744" kind="variable"><name>_token_dependencies</name></member>
    <member refid="classtf_1_1ScalablePipeline_1aadda92015e28c2545014f7576078bddb" kind="variable"><name>_deferred_tokens</name></member>
    <member refid="classtf_1_1ScalablePipeline_1aaf2267b9dbb1173f533aee5a0a250cf3" kind="variable"><name>_longest_deferral</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a26f5e7e768b77f9e95100c5d6467db71" kind="function"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a0f99aa297a26b97d549b62722d91e8ca" kind="function"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a884818f628bbd4ab876d566b1d2d62dc" kind="function"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a1a8898df4d2224d5f8bd2f3ad14c0ab9" kind="function"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a1ab74fa599b0f1489df398cf039b73e5" kind="function"><name>ScalablePipeline</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a317702ac0bc8c860c68a1f19e57274c5" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a72a123bf432763ce095c201c2655051c" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a5a4dd65638e8e06e35cb4c5792d044cc" kind="function"><name>num_lines</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a70c49f5219847681133d2a226c804da1" kind="function"><name>num_pipes</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a940a8de7b53ac5cbd59c55091d88c88f" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1ScalablePipeline_1ad8886d402568a9980952fa4ab59adcab" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a8165894518d642ceaa0141e2a66d365a" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a693a2ea53cfac9c0b220d5b3a28e6313" kind="function"><name>num_tokens</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a2f45a4cb7116fbe9bbc54305f13c52a8" kind="function"><name>graph</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a3cea771eaee545d4445114c824a3f6df" kind="function"><name>_check_dependents</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a4583da84f07196c55c636e3556a1e5e3" kind="function"><name>_construct_deferred_tokens</name></member>
    <member refid="classtf_1_1ScalablePipeline_1ad210e4d59d58c79100a830df51d55b1f" kind="function"><name>_resolve_token_dependencies</name></member>
    <member refid="classtf_1_1ScalablePipeline_1aea457827353fe9d73ae069daec7fa512" kind="function"><name>_on_pipe</name></member>
    <member refid="classtf_1_1ScalablePipeline_1ae695c9b1bbe3a5f65a5bb4217087c356" kind="function"><name>_build</name></member>
    <member refid="classtf_1_1ScalablePipeline_1a81b18c25db2cba4c530d85c5ab413a6c" kind="function"><name>_line</name></member>
  </compound>
  <compound refid="structtf_1_1ChromeObserver_1_1Segment" kind="struct"><name>tf::ChromeObserver::Segment</name>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1a8e3739d8a5b9be34851a6404f5916d95" kind="variable"><name>name</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1a197cf797abb156e1f17dd276acd2cd74" kind="variable"><name>beg</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1abe331473cff75d9f11c7fb69e481f2f7" kind="variable"><name>end</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Segment_1a069ca8806de9e01a0ae2b3f5263a20c2" kind="function"><name>Segment</name></member>
  </compound>
  <compound refid="structtf_1_1Segment" kind="struct"><name>tf::Segment</name>
    <member refid="structtf_1_1Segment_1a3e259f6da83dcf714ec785aa1a3d14bd" kind="variable"><name>name</name></member>
    <member refid="structtf_1_1Segment_1a8f567dbac067898e2e5c4d4947b04fb4" kind="variable"><name>type</name></member>
    <member refid="structtf_1_1Segment_1aad42f04f26507aa8ad977627774ee2b4" kind="variable"><name>beg</name></member>
    <member refid="structtf_1_1Segment_1ae7558748ed58c8e274539295e6c6d770" kind="variable"><name>end</name></member>
    <member refid="structtf_1_1Segment_1a24021971938c984d134c29a44b5b6093" kind="function"><name>save</name></member>
    <member refid="structtf_1_1Segment_1a74c1671a8ec913fac3a675bb4c5c9be3" kind="function"><name>load</name></member>
    <member refid="structtf_1_1Segment_1ad6393c5cf90f07b0eda6bf0c0321322d" kind="function"><name>Segment</name></member>
    <member refid="structtf_1_1Segment_1aab1d1ddd792d5b7b312ad14532034054" kind="function"><name>Segment</name></member>
    <member refid="structtf_1_1Segment_1a336d5825032b4b9085f1e78a1fa26341" kind="function"><name>span</name></member>
  </compound>
  <compound refid="classtf_1_1Semaphore" kind="class"><name>tf::Semaphore</name>
    <member refid="classtf_1_1Semaphore_1a6db9d28bd448a131448276ee03de1e6d" kind="friend"><name>Node</name></member>
    <member refid="classtf_1_1Semaphore_1a329424188b5287ca596f1af3f6db58f1" kind="variable"><name>_mtx</name></member>
    <member refid="classtf_1_1Semaphore_1a385c4e1622677e20bb53b01c8eb85e9b" kind="variable"><name>_counter</name></member>
    <member refid="classtf_1_1Semaphore_1ab05d171c0852d2c6584d62de004f52fb" kind="variable"><name>_waiters</name></member>
    <member refid="classtf_1_1Semaphore_1a70ffe5c1611dba350d105b70377f8cd2" kind="function"><name>Semaphore</name></member>
    <member refid="classtf_1_1Semaphore_1a8e4236750edd903ec0492231076ba2ba" kind="function"><name>count</name></member>
    <member refid="classtf_1_1Semaphore_1aeb12ad1db7794e13829a0a62549d157b" kind="function"><name>_try_acquire_or_wait</name></member>
    <member refid="classtf_1_1Semaphore_1a47b8ed63d5deecb0878a0b9cc99da20e" kind="function"><name>_release</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1Semaphores" kind="struct"><name>tf::Node::Semaphores</name>
    <member refid="structtf_1_1Node_1_1Semaphores_1a38c40511dbc9e8f719398c316752b2c1" kind="variable"><name>to_acquire</name></member>
    <member refid="structtf_1_1Node_1_1Semaphores_1ae8315d3611ad7b475f62dda20aa36445" kind="variable"><name>to_release</name></member>
  </compound>
  <compound refid="classtf_1_1SmallVector" kind="class"><name>tf::SmallVector</name>
    <member refid="classtf_1_1SmallVector_1a752752b1856c279b5ccb7c71106ddae0" kind="variable"><name>Storage</name></member>
    <member refid="classtf_1_1SmallVector_1a7948bf82d89a97740fc6ae7eb484a14d" kind="function"><name>SmallVector</name></member>
    <member refid="classtf_1_1SmallVector_1a092160eaf54d09827daaa8875c089226" kind="function"><name>SmallVector</name></member>
    <member refid="classtf_1_1SmallVector_1a0e0c9ea3b175d1e48e640434f9839380" kind="function"><name>SmallVector</name></member>
    <member refid="classtf_1_1SmallVector_1ad45a8ae1e4b0d313e56d84787e3d9c91" kind="function"><name>SmallVector</name></member>
    <member refid="classtf_1_1SmallVector_1a7a3ca548c2b19ce570265b6dad2dfff7" kind="function"><name>SmallVector</name></member>
    <member refid="classtf_1_1SmallVector_1acf74c15d1ba09f9d71e706859613c005" kind="function"><name>SmallVector</name></member>
    <member refid="classtf_1_1SmallVector_1aa2a3549a42d052ecb9f9c348f547406e" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1SmallVector_1a66c2613642723060c21f0539d4a86b2d" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1SmallVector_1a2507828c99bdc8d13cc57ec762689e2b" kind="function"><name>SmallVector</name></member>
    <member refid="classtf_1_1SmallVector_1a06e0c4f610e6ede440b8f2ec38392781" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1SmallVector_1a18276baf5b8c09d8452d198b5f568576" kind="function"><name>operator=</name></member>
  </compound>
  <compound refid="classtf_1_1SmallVectorBase" kind="class"><name>tf::SmallVectorBase</name>
    <member refid="classtf_1_1SmallVectorBase_1a5d08aaf8e30cf35422fd5fc00a08365e" kind="variable"><name>BeginX</name></member>
    <member refid="classtf_1_1SmallVectorBase_1ac1a0459890042d10254b7be5dd7c1752" kind="variable"><name>EndX</name></member>
    <member refid="classtf_1_1SmallVectorBase_1a13c5c546448248a63e004725258f1ea3" kind="variable"><name>CapacityX</name></member>
    <member refid="classtf_1_1SmallVectorBase_1a326c733a440cd9a1197bed0f75892152" kind="function"><name>SmallVectorBase</name></member>
    <member refid="classtf_1_1SmallVectorBase_1a39b8b0b14783568a42fc606dee073096" kind="function"><name>grow_pod</name></member>
    <member refid="classtf_1_1SmallVectorBase_1ab2a8fa067f915dc2b67c6e0c33527081" kind="function"><name>size_in_bytes</name></member>
    <member refid="classtf_1_1SmallVectorBase_1a11236e318bfb73ce440e6f29985b08f3" kind="function"><name>capacity_in_bytes</name></member>
    <member refid="classtf_1_1SmallVectorBase_1a538b6a18b5dfe80f650a2ada367a2050" kind="function"><name>empty</name></member>
  </compound>
  <compound refid="classtf_1_1SmallVectorImpl" kind="class"><name>tf::SmallVectorImpl</name>
    <member refid="classtf_1_1SmallVectorImpl_1aeb53b6c473df3c8278add81d71846718" kind="typedef"><name>SuperClass</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a56906d9b3af4322205884dccccda4557" kind="typedef"><name>iterator</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a0214b0ea02db158851fdc27c726eb5c6" kind="typedef"><name>const_iterator</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1ad777bf745a771240340b41ef95b23f94" kind="typedef"><name>size_type</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a54467e7ac16f186941e384eb25557830" kind="function"><name>SmallVectorImpl</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a7e9e271548156643b2a6066472a6901c" kind="function"><name>SmallVectorImpl</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a4ac1132c5abed54299b9c05f5a6c3a5e" kind="function"><name>~SmallVectorImpl</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a0c4d7c6d68cdab50dd2e263dcb9338a5" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a3fd39cea3aa24104f31f051cc858ae31" kind="function"><name>resize</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1ab4b71ea99487d0561849b4ed9c32f493" kind="function"><name>resize</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a50e86216100abce0a02f758ec48dec26" kind="function"><name>reserve</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a787679e464d7605da42cfa51c932b357" kind="function"><name>pop_back_val</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1ac79ba4c3607daede2f497cb7f14cc3cb" kind="function"><name>swap</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a7701c640b693502323a27937ad2433f4" kind="function"><name>append</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a945b8b7e14f3d535754323d85848f00c" kind="function"><name>append</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a63bb5bb28bc13af096f7d0f750ca065d" kind="function"><name>append</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1ac70567cd0a62080782399d6031f42fb3" kind="function"><name>assign</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a3aac17a8dd8a5b05024e3bc3e588bf78" kind="function"><name>assign</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a84bab9df70d6e59f3078da08280022c8" kind="function"><name>erase</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a5d28ee2577dc8da6d096235a3c67b587" kind="function"><name>erase</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1ad0cd1dc5bdc5e85bd891d5e8cbf04aa6" kind="function"><name>insert</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a67186df9203fbf6da88bb868768543e3" kind="function"><name>insert</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1adef89d46d895560d98b9d2a8d5cf58c7" kind="function"><name>insert</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a2f1549f06d7d5899e5e5636c2b5836d2" kind="function"><name>insert</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a183b0273245a9e08281ecf3fcdd6c326" kind="function"><name>insert</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a917970b8ad88f2782c0fdf610422229e" kind="function"><name>emplace_back</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1aaec66ca9e10e70d11c194eecec877a1e" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a014f3cc0e83e01a42e621fc693ab7139" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a9d7b77ff6197e5c30cd0c267196f1ff6" kind="function"><name>operator==</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1a0d3239c335aaa933165c3da83e6544da" kind="function"><name>operator!=</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1af696392bdb0d114a8ead523260045e29" kind="function"><name>operator&lt;</name></member>
    <member refid="classtf_1_1SmallVectorImpl_1aa67a4c5e467bb19b1f16960854a0b010" kind="function"><name>set_size</name></member>
  </compound>
  <compound refid="structtf_1_1SmallVectorStorage" kind="struct"><name>tf::SmallVectorStorage</name>
    <member refid="structtf_1_1SmallVectorStorage_1a389c95f804527bd86d52ee5a2ece0e6c" kind="variable"><name>InlineElts</name></member>
  </compound>
  <compound refid="structtf_1_1SmallVectorStorage_3_01T_00_010_01_4" kind="struct"><name>tf::SmallVectorStorage&lt; T, 0 &gt;</name>
  </compound>
  <compound refid="structtf_1_1SmallVectorStorage_3_01T_00_011_01_4" kind="struct"><name>tf::SmallVectorStorage&lt; T, 1 &gt;</name>
  </compound>
  <compound refid="classtf_1_1SmallVectorTemplateBase" kind="class"><name>tf::SmallVectorTemplateBase</name>
    <member refid="classtf_1_1SmallVectorTemplateBase_1adc772391e02b84d14f4c5513542b29a9" kind="function"><name>SmallVectorTemplateBase</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_1ab804c48d808741a114c698847860d64c" kind="function"><name>grow</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_1a00ebcf9e81eed0b433be97131fd3d1d1" kind="function"><name>destroy_range</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_1adf1b336ce5b5f404de1bb43c354fe1dd" kind="function"><name>uninitialized_move</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_1ab8738fe3287f4ef437fe7363e8ae2d60" kind="function"><name>uninitialized_copy</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_1a6b7c01c4c054379358315a1aac0d49a7" kind="function"><name>push_back</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_1a6509b362398934d6ceed4a74ad0e6547" kind="function"><name>push_back</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_1aaa3d3554c2ae0be47eed43c324e5e73b" kind="function"><name>pop_back</name></member>
  </compound>
  <compound refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4" kind="class"><name>tf::SmallVectorTemplateBase&lt; T, true &gt;</name>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1a6b9849e3fc0a0dbd6e30f8c69c7db935" kind="function"><name>SmallVectorTemplateBase</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1af4f15a8eb802cb9388356d5995eb70e1" kind="function"><name>grow</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1a1c3bcbc4c635b97d99ece152d8c3b29d" kind="function"><name>destroy_range</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1a736e3e5914675f5bbd9350b2351f0e54" kind="function"><name>uninitialized_move</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1a92be65048cff5789a37b93e9c7f71e02" kind="function"><name>uninitialized_copy</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1a73f97021aca0b8f5b263abbb9346aa36" kind="function"><name>uninitialized_copy</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1afd3661d5e240bf35cd814c486916ad8b" kind="function"><name>push_back</name></member>
    <member refid="classtf_1_1SmallVectorTemplateBase_3_01T_00_01true_01_4_1a83dc7f432fa5eb3f6a69dd4c4eee1b89" kind="function"><name>pop_back</name></member>
  </compound>
  <compound refid="classtf_1_1SmallVectorTemplateCommon" kind="class"><name>tf::SmallVectorTemplateCommon</name>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a858a012ef160a4d227a5c1ddb1f56472" kind="typedef"><name>U</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a0af2aaae74afd35894e91e96e221f2b4" kind="typedef"><name>size_type</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1adbfcf9d6ec0b239d48567a420a43b6f6" kind="typedef"><name>difference_type</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ad92ebf3b12a1cd9a7a80d5161cc4449b" kind="typedef"><name>value_type</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1acee58895a98d40868ce8f1a1ff284ab7" kind="typedef"><name>iterator</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a39c4f2406153fd86003f67136e096bf1" kind="typedef"><name>const_iterator</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ae8618ae79998e522734cf4b15fa7956e" kind="typedef"><name>const_reverse_iterator</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a20b7a8544e963fe20fd8a139bddce658" kind="typedef"><name>reverse_iterator</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a4b9db31beb2fe6aef612cd8ce248eb4a" kind="typedef"><name>reference</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ac60fb9e83232f170a2f1af419054b30d" kind="typedef"><name>const_reference</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a4762cde1bfad65cb37752b4df255ddab" kind="typedef"><name>pointer</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ab2ca1203dec28f3d9c626c85b4f36448" kind="typedef"><name>const_pointer</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a793abe4bcf6dc77d4cc24d207a4958b8" kind="friend"><name>SmallVectorStorage</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a5ef73aff6ad53a6b0568fb4ed3530bf2" kind="variable"><name>FirstEl</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a4717897cb4e6fea34640801c69469355" kind="function"><name>SmallVectorTemplateCommon</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a607fabb915c09ab97b1d80fb463e91fc" kind="function"><name>grow_pod</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ad541b208571c7244efc8fbe42b90d608" kind="function"><name>isSmall</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1aed80eb722677292606f4c4e3b14d9639" kind="function"><name>resetToSmall</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ae5fa1f3af9c829c120fd6ee9be5cf562" kind="function"><name>setEnd</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ae101bcc51df9f276a517b7634cc885d0" kind="function"><name>capacity_ptr</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a6785a26fc28425df3fab4e06ccf436e3" kind="function"><name>capacity_ptr</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a5022deed40c9c9f983230c38d99658f4" kind="function"><name>begin</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1af41e27410f801a6aef0e61173ed8c18d" kind="function"><name>begin</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a59e18797630dc06cef6c2ae5acf591a0" kind="function"><name>end</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a0a34e20e970dce1f4e61893982886d49" kind="function"><name>end</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a83f50a1376ad1b3c828e89b9fa34b56d" kind="function"><name>rbegin</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a96c2d2979402cc76f84a76ff08720933" kind="function"><name>rbegin</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ae26b374c3ca4f75054eb17ec85b26cf0" kind="function"><name>rend</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a411820e49d8ab402ac29c7537cd22049" kind="function"><name>rend</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a4416437b41cf9d57a6ed6b061e1cc1e8" kind="function"><name>size</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1ab79607f378fcf2fa8772f02c95a73073" kind="function"><name>max_size</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a82d552c39834d18a03a5a7f62031aac3" kind="function"><name>capacity</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a65c0541a7bf64e1ac4ae2a326d103cee" kind="function"><name>data</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a6d3b04be0f7fef50e88269934c4f95cd" kind="function"><name>data</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a42143086f104cda6e3d2ed2a4f7f9a29" kind="function"><name>operator[]</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1af77ae362f96acd803ed7577fb48b5efd" kind="function"><name>operator[]</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a2a1b3b20ba44906c4df269f6033c1f36" kind="function"><name>front</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a0d17587a21aeba5f1230d183be131252" kind="function"><name>front</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a009d8ff154f5ce94202db6c0591ce9e2" kind="function"><name>back</name></member>
    <member refid="classtf_1_1SmallVectorTemplateCommon_1a14a2f4a352c7ea71bea641125fa64c19" kind="function"><name>back</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1Static" kind="struct"><name>tf::Node::Static</name>
    <member refid="structtf_1_1Node_1_1Static_1ac29bd03ca625bafe5e4322a6eb2d88aa" kind="variable"><name>work</name></member>
    <member refid="structtf_1_1Node_1_1Static_1a91ebe904215e44a81df97586f15b4e07" kind="function"><name>Static</name></member>
  </compound>
  <compound refid="classtf_1_1StaticPartitioner" kind="class"><name>tf::StaticPartitioner</name>
    <member refid="classtf_1_1StaticPartitioner_1ad6791c126752f2d85f3107ce8b09b784" kind="function"><name>type</name></member>
    <member refid="classtf_1_1StaticPartitioner_1a3b8b8040830d1d9f9635090e9af8edf8" kind="function"><name>StaticPartitioner</name></member>
    <member refid="classtf_1_1StaticPartitioner_1aa6dacbd41f721303afe089f65f9f6549" kind="function"><name>StaticPartitioner</name></member>
    <member refid="classtf_1_1StaticPartitioner_1ac4fb48bea1252246857e11993bee68c6" kind="function"><name>StaticPartitioner</name></member>
    <member refid="classtf_1_1StaticPartitioner_1a54a55e0b20f054e215509486bcd5dc1c" kind="function"><name>adjusted_chunk_size</name></member>
    <member refid="classtf_1_1StaticPartitioner_1a69cc7c62ce278a595bc78360882518c2" kind="function"><name>loop</name></member>
    <member refid="classtf_1_1StaticPartitioner_1abe72b896a1e983d672729f1d9bc688f2" kind="function"><name>loop_until</name></member>
  </compound>
  <compound refid="structtf_1_1detail_1_1cudaBlockReduce_1_1Storage" kind="struct"><name>tf::detail::cudaBlockReduce::Storage</name>
    <member refid="structtf_1_1detail_1_1cudaBlockReduce_1_1Storage_1ae96b4912d9ac0413c68bfce227a15d04" kind="variable"><name>data</name></member>
  </compound>
  <compound refid="uniontf_1_1detail_1_1cudaBlockSort_1_1Storage" kind="union"><name>tf::detail::cudaBlockSort::Storage</name>
    <member refid="uniontf_1_1detail_1_1cudaBlockSort_1_1Storage_1a08bff3542e11e199012d1ca64b14881c" kind="variable"><name>keys</name></member>
    <member refid="uniontf_1_1detail_1_1cudaBlockSort_1_1Storage_1a45d6a1f7e31ddb9905bc4c802f7e3e7a" kind="variable"><name>vals</name></member>
  </compound>
  <compound refid="uniontf_1_1detail_1_1cudaBlockScan_1_1storage__t" kind="union"><name>tf::detail::cudaBlockScan::storage_t</name>
    <member refid="uniontf_1_1detail_1_1cudaBlockScan_1_1storage__t_1a9cc602c1e7c8358505637a42b958f398" kind="variable"><name>data</name></member>
    <member refid="uniontf_1_1detail_1_1cudaBlockScan_1_1storage__t_1ac224c3be4b10b573062ca8c91b681553" kind="variable"><name>threads</name></member>
    <member refid="uniontf_1_1detail_1_1cudaBlockScan_1_1storage__t_1a4568128897799803ea8d0ff0fa2524a0" kind="variable"><name>warps</name></member>
    <member refid="uniontf_1_1detail_1_1cudaBlockScan_1_1storage__t_1addf22fd0648d00850dcc4d11fdf809df" kind="variable"><name>@1</name></member>
  </compound>
  <compound refid="structtf_1_1Node_1_1Subflow" kind="struct"><name>tf::Node::Subflow</name>
    <member refid="structtf_1_1Node_1_1Subflow_1ab2f15bdfcde9f0dcb89fb3d300f2bd4a" kind="variable"><name>work</name></member>
    <member refid="structtf_1_1Node_1_1Subflow_1aa35f00009f005b567776f6165e2bfee7" kind="variable"><name>subgraph</name></member>
    <member refid="structtf_1_1Node_1_1Subflow_1ad44a30fc82cf603f089e562f8df6c184" kind="function"><name>Subflow</name></member>
  </compound>
  <compound refid="classtf_1_1Subflow" kind="class"><name>tf::Subflow</name>
    <member refid="classtf_1_1Subflow_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Subflow_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Subflow_1af3d14e26ba8af9e6cc5a32aad8446de7" kind="friend"><name>Runtime</name></member>
    <member refid="classtf_1_1Subflow_1ac8db48417a0777f3c00257689dc63695" kind="variable"><name>_joinable</name></member>
    <member refid="classtf_1_1Subflow_1a59fcac1323e70d920088dd37bd0be245" kind="function"><name>join</name></member>
    <member refid="classtf_1_1Subflow_1acfdedc7e9676126e9a38ecf7b5a37864" kind="function"><name>detach</name></member>
    <member refid="classtf_1_1Subflow_1a540be503df4621be3e8342b99b1729a0" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1Subflow_1ac3805e898b6a55b6e5173c74c5555e57" kind="function"><name>joinable</name></member>
    <member refid="classtf_1_1Subflow_1a84f5f8f179fd27d44ff6a02c7c482659" kind="function"><name>Subflow</name></member>
  </compound>
  <compound refid="structtf_1_1TFProfObserver_1_1Summary" kind="struct"><name>tf::TFProfObserver::Summary</name>
    <member refid="structtf_1_1TFProfObserver_1_1Summary_1ab19b2d75d9114064ea88c24b991e3b45" kind="variable"><name>tsum</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Summary_1acedcc0c1efd703f6b7c5ffe82d9bdabf" kind="variable"><name>wsum</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Summary_1aa59e1a4195d9fb7378f75ad27261bfdd" kind="function"><name>dump_tsum</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Summary_1a94eb7887b66179efda784941e592ae40" kind="function"><name>dump_wsum</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1Summary_1ae9a3467e622801c8482bc7f1e5fbbd67" kind="function"><name>dump</name></member>
  </compound>
  <compound refid="classtf_1_1Task" kind="class"><name>tf::Task</name>
    <member refid="classtf_1_1Task_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Task_1af3d14e26ba8af9e6cc5a32aad8446de7" kind="friend"><name>Runtime</name></member>
    <member refid="classtf_1_1Task_1af043dd6f6a359602805d9c7dd7539cca" kind="friend"><name>Taskflow</name></member>
    <member refid="classtf_1_1Task_1a0aa0e12e4a0ba023033e808fb2132fdf" kind="friend"><name>TaskView</name></member>
    <member refid="classtf_1_1Task_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Task_1abff81069222d0f449e0b43136aea2f05" kind="variable"><name>_node</name></member>
    <member refid="classtf_1_1Task_1a5ed7ba63e8eeaa0f21fe08c80aa474ba" kind="function"><name>Task</name></member>
    <member refid="classtf_1_1Task_1a53deffe60d7c758df4265aeb81063928" kind="function"><name>Task</name></member>
    <member refid="classtf_1_1Task_1aebdcc47e47a119f261daab673a971458" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Task_1a4b0e3d6a1985a353626c15970c51c820" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Task_1ad87bb498b0a4eae0c375bc59b66dbba8" kind="function"><name>operator==</name></member>
    <member refid="classtf_1_1Task_1af4e13636e3a494297b30c2b2e483f095" kind="function"><name>operator!=</name></member>
    <member refid="classtf_1_1Task_1a08ada0425b490997b6ff7f310107e5e3" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Task_1a1a0afc89e8a6a416c511e74d82df135d" kind="function"><name>num_successors</name></member>
    <member refid="classtf_1_1Task_1a974dc1d738b62b829ad261beeafbd67c" kind="function"><name>num_dependents</name></member>
    <member refid="classtf_1_1Task_1ad49a92e8858c3c298bed0215e341b66b" kind="function"><name>num_strong_dependents</name></member>
    <member refid="classtf_1_1Task_1af3bf886291af7f39957d43d17083fe07" kind="function"><name>num_weak_dependents</name></member>
    <member refid="classtf_1_1Task_1a9057ecd0f3833b717480e914f8568f02" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Task_1a2f6f4cec42d016e5eb89390f362ffe99" kind="function"><name>work</name></member>
    <member refid="classtf_1_1Task_1ab38be520fe700cb4ca1f312308a95585" kind="function"><name>composed_of</name></member>
    <member refid="classtf_1_1Task_1a8c78c453295a553c1c016e4062da8588" kind="function"><name>precede</name></member>
    <member refid="classtf_1_1Task_1a331b1b726555072e7c7d10941257f664" kind="function"><name>succeed</name></member>
    <member refid="classtf_1_1Task_1a26709523eb112f2d024f4c0e9d2f0019" kind="function"><name>release</name></member>
    <member refid="classtf_1_1Task_1a076ab9c6f3a0346e16cfb5fee7dc4ce8" kind="function"><name>acquire</name></member>
    <member refid="classtf_1_1Task_1afd82ab6d6518d1142a72c4d2c97ff114" kind="function"><name>data</name></member>
    <member refid="classtf_1_1Task_1a65ba160c1464b4084f85bd9d3dd41291" kind="function"><name>priority</name></member>
    <member refid="classtf_1_1Task_1ab90b3e898dfb4a8d24ccc99b615bbd9a" kind="function"><name>priority</name></member>
    <member refid="classtf_1_1Task_1a302f51ed717d0a4e99edc50f92a571f3" kind="function"><name>reset</name></member>
    <member refid="classtf_1_1Task_1aec3ab712e12137542b7e4bc311ee9f20" kind="function"><name>reset_work</name></member>
    <member refid="classtf_1_1Task_1a8149edcf9ec2bfac18dd171f7a55ce06" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1Task_1afc4ecb89dd4e4645b3ec3fb7c1bb0ec5" kind="function"><name>has_work</name></member>
    <member refid="classtf_1_1Task_1aff13a503d4a3c994eb08cb6f22e1b427" kind="function"><name>for_each_successor</name></member>
    <member refid="classtf_1_1Task_1a3bf68937662bf291637e4a763476b2e4" kind="function"><name>for_each_dependent</name></member>
    <member refid="classtf_1_1Task_1a1c9301f2a330cc23ee18e8f61688141f" kind="function"><name>hash_value</name></member>
    <member refid="classtf_1_1Task_1af2df95e6c8c5870c033d692e88af0bc2" kind="function"><name>type</name></member>
    <member refid="classtf_1_1Task_1a3318a49ff9d0a01cd1e8ee675251e3b7" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1Task_1a320827cb70295a6fe2cc37691405409c" kind="function"><name>data</name></member>
    <member refid="classtf_1_1Task_1a43d108a6cc0417cc470a00b5e95a65f5" kind="function"><name>Task</name></member>
  </compound>
  <compound refid="classtf_1_1Taskflow" kind="class"><name>tf::Taskflow</name>
    <member refid="classtf_1_1Taskflow_1acd2b8699ab7559c0da687cd775e2c778" kind="friend"><name>Topology</name></member>
    <member refid="classtf_1_1Taskflow_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Taskflow_1a61184f9bd9c801d0a5eccecfdbddc641" kind="friend"><name>FlowBuilder</name></member>
    <member refid="classtf_1_1Taskflow_1aa4f464efc6b69669c093d6d5218150db" kind="variable"><name>_mutex</name></member>
    <member refid="classtf_1_1Taskflow_1a5f4243689c241ccb5ca4316211d21a62" kind="variable"><name>_name</name></member>
    <member refid="classtf_1_1Taskflow_1a78a7df50a7d2aeacb7c5c6948f5dd94a" kind="variable"><name>_graph</name></member>
    <member refid="classtf_1_1Taskflow_1a7016553915989a1725addcf7d4e975bf" kind="variable"><name>_topologies</name></member>
    <member refid="classtf_1_1Taskflow_1ad5d60317ed24250a1e1f919e65572d34" kind="variable"><name>_satellite</name></member>
    <member refid="classtf_1_1Taskflow_1a7242a74dcb16731b4e40816647b93305" kind="function"><name>Taskflow</name></member>
    <member refid="classtf_1_1Taskflow_1ade7fc641d136a3f8c96682c08040626a" kind="function"><name>Taskflow</name></member>
    <member refid="classtf_1_1Taskflow_1afd790de6db6d16ddf4729967c1edebb5" kind="function"><name>Taskflow</name></member>
    <member refid="classtf_1_1Taskflow_1aa4957a41e63e1d1a6f77c540d70d04fa" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1Taskflow_1aa966a69493ecc8ecb9131ef3c5354b8e" kind="function"><name>~Taskflow</name></member>
    <member refid="classtf_1_1Taskflow_1ac433018262e44b12c4cc9f0c4748d758" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1Taskflow_1a9c4900da1831dce708664a06b3e3a3fb" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1Taskflow_1af4f03bca084deb5c2228ac8936d33649" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1Taskflow_1a224301842d94c44fd7fe99d8ac2ba241" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1Taskflow_1ad5706e5819aa01a63c4aa2e3485546b9" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Taskflow_1a911edd95acc1322433bddfcfeaf2ccb0" kind="function"><name>name</name></member>
    <member refid="classtf_1_1Taskflow_1a1f00bbe72a1553c9656ecae4d98bb9af" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1Taskflow_1a6350d0d6653ae9ae7b94c35e42fffe07" kind="function"><name>for_each_task</name></member>
    <member refid="classtf_1_1Taskflow_1a354a7673fabeaf3be66928ad6b573900" kind="function"><name>remove_dependency</name></member>
    <member refid="classtf_1_1Taskflow_1a8da984d149b439e88468bf26e02ecf27" kind="function"><name>graph</name></member>
    <member refid="classtf_1_1Taskflow_1a34c956aeab7ae7e44add3538504ea9aa" kind="function"><name>_dump</name></member>
    <member refid="classtf_1_1Taskflow_1a22bd6faed11509c504c4a9cb8cb81fd6" kind="function"><name>_dump</name></member>
    <member refid="classtf_1_1Taskflow_1afdfa1f01d5471d3cddc39b3bae11c464" kind="function"><name>_dump</name></member>
  </compound>
  <compound refid="structtf_1_1TaskParams" kind="struct"><name>tf::TaskParams</name>
    <member refid="structtf_1_1TaskParams_1aa6280a961a5faf0260bd39fff68e2666" kind="variable"><name>name</name></member>
    <member refid="structtf_1_1TaskParams_1a2a25d7c2412f3cb1b8d81e4c2faa74db" kind="variable"><name>priority</name></member>
    <member refid="structtf_1_1TaskParams_1ab0c8d56bea820fd5125afd864dd299bf" kind="variable"><name>data</name></member>
  </compound>
  <compound refid="classtf_1_1TaskQueue" kind="class"><name>tf::TaskQueue</name>
    <member refid="classtf_1_1TaskQueue_1a8b8c8e69e04481708b8b17059398a04b" kind="variable"><name>_top</name></member>
    <member refid="classtf_1_1TaskQueue_1aebf6dd0368728d9fa25127020afb9dda" kind="variable"><name>_bottom</name></member>
    <member refid="classtf_1_1TaskQueue_1abaadb3c00494c5873bc7fd5d8ec30f06" kind="variable"><name>_array</name></member>
    <member refid="classtf_1_1TaskQueue_1aeb6fedf457596dad3f64af57343613cd" kind="variable"><name>_garbage</name></member>
    <member refid="classtf_1_1TaskQueue_1a715574f55d3a05ec4040fc390bfcd632" kind="function"><name>TaskQueue</name></member>
    <member refid="classtf_1_1TaskQueue_1a15d5b45f482cba7383512a9c5bcbd7cf" kind="function"><name>~TaskQueue</name></member>
    <member refid="classtf_1_1TaskQueue_1adfdf70255e24d62c46b31b09c47d78f7" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1TaskQueue_1af57eb2ebc4d92120d7eaf868ec57b524" kind="function"><name>empty</name></member>
    <member refid="classtf_1_1TaskQueue_1ad598bef2211bf4cc99d66d80a12ebb6a" kind="function"><name>size</name></member>
    <member refid="classtf_1_1TaskQueue_1a0386ad90ced931025d14ea955ce40d8c" kind="function"><name>size</name></member>
    <member refid="classtf_1_1TaskQueue_1ad47b2671aa5270bcd05605c4063280ff" kind="function"><name>capacity</name></member>
    <member refid="classtf_1_1TaskQueue_1ab868d17013212547d750267710037877" kind="function"><name>capacity</name></member>
    <member refid="classtf_1_1TaskQueue_1ab90cef7de0b45650b67971db0ccbef76" kind="function"><name>push</name></member>
    <member refid="classtf_1_1TaskQueue_1a3df0b3554e814385d23ee603941391df" kind="function"><name>pop</name></member>
    <member refid="classtf_1_1TaskQueue_1ab486c2b496bc5ebc84122924921e5632" kind="function"><name>pop</name></member>
    <member refid="classtf_1_1TaskQueue_1a23e13cb9f98316b26c00ce494aa2f0c6" kind="function"><name>steal</name></member>
    <member refid="classtf_1_1TaskQueue_1aca896b5d59a78a018aeb313760ca735a" kind="function"><name>steal</name></member>
    <member refid="classtf_1_1TaskQueue_1a512796f5396f152af2f8249bc5519596" kind="function"><name>resize_array</name></member>
  </compound>
  <compound refid="structtf_1_1TFProfObserver_1_1TaskSummary" kind="struct"><name>tf::TFProfObserver::TaskSummary</name>
    <member refid="structtf_1_1TFProfObserver_1_1TaskSummary_1a8d5ae242b9a13dde380122f9fa1ee58a" kind="variable"><name>count</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1TaskSummary_1abfb35499e1c1168896dd0a479c094095" kind="variable"><name>total_span</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1TaskSummary_1ac4ef1685aa1e8192deea59919462dfd7" kind="variable"><name>min_span</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1TaskSummary_1aceb22e37f1c12bf9b27db4a03a0d2316" kind="variable"><name>max_span</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1TaskSummary_1ac5220ba82a25714ec5e9440e0eafd2e2" kind="function"><name>avg_span</name></member>
  </compound>
  <compound refid="classtf_1_1TaskView" kind="class"><name>tf::TaskView</name>
    <member refid="classtf_1_1TaskView_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1TaskView_1a05d718be8be0374448b570276709bedb" kind="variable"><name>_node</name></member>
    <member refid="classtf_1_1TaskView_1ac8cd58171de8ab4865e3c3f142db2db1" kind="function"><name>name</name></member>
    <member refid="classtf_1_1TaskView_1aff16d269ac75cffa55a312593f20d30d" kind="function"><name>num_successors</name></member>
    <member refid="classtf_1_1TaskView_1acc4e2bef464e8fbb5706cefdf482a24f" kind="function"><name>num_dependents</name></member>
    <member refid="classtf_1_1TaskView_1ac7bcb9cb1ee8f020de56fdbf8e651388" kind="function"><name>num_strong_dependents</name></member>
    <member refid="classtf_1_1TaskView_1ad1ddd9a7e68a81feee1785ece99e58f5" kind="function"><name>num_weak_dependents</name></member>
    <member refid="classtf_1_1TaskView_1a3cb647dc0064b5d11e0c87226c47f8f8" kind="function"><name>for_each_successor</name></member>
    <member refid="classtf_1_1TaskView_1a55651e26436bfc2499cadaca4a24e48d" kind="function"><name>for_each_dependent</name></member>
    <member refid="classtf_1_1TaskView_1aa20d7b5796064c3ab194e6d7ebe2adb1" kind="function"><name>type</name></member>
    <member refid="classtf_1_1TaskView_1abe95eb9e866cd7b8137d5e8ca5deace6" kind="function"><name>hash_value</name></member>
    <member refid="classtf_1_1TaskView_1ad19afa391850d49513c4280439fc50ee" kind="function"><name>TaskView</name></member>
    <member refid="classtf_1_1TaskView_1ae85861fa894c206e800a9e5d4ee45cbf" kind="function"><name>TaskView</name></member>
  </compound>
  <compound refid="classtf_1_1TFProfManager" kind="class"><name>tf::TFProfManager</name>
    <member refid="classtf_1_1TFProfManager_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1TFProfManager_1a9a9f25501767ab82d8fcddae279c8789" kind="variable"><name>_fpath</name></member>
    <member refid="classtf_1_1TFProfManager_1a057632d73e24ffc0730f6c953deed880" kind="variable"><name>_mutex</name></member>
    <member refid="classtf_1_1TFProfManager_1a783f61fc9980c173bf63257c5e68071f" kind="variable"><name>_observers</name></member>
    <member refid="classtf_1_1TFProfManager_1ae20ae795ede51362ecb74747e0d468f7" kind="function"><name>~TFProfManager</name></member>
    <member refid="classtf_1_1TFProfManager_1a7de17b017d3b2db51eb227f15adfb123" kind="function"><name>TFProfManager</name></member>
    <member refid="classtf_1_1TFProfManager_1a5218d6dd8665696b51e038002c688434" kind="function"><name>operator=</name></member>
    <member refid="classtf_1_1TFProfManager_1a7d44fb8b25dbcd528487194da43cad6d" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1TFProfManager_1a395d9e6f56a4cdada848d889c7de8a86" kind="function"><name>get</name></member>
    <member refid="classtf_1_1TFProfManager_1a3a9c3d86c712279e91937de039bacf0e" kind="function"><name>TFProfManager</name></member>
    <member refid="classtf_1_1TFProfManager_1a5cea0d2082714658a13b9b506d946253" kind="function"><name>_manage</name></member>
  </compound>
  <compound refid="classtf_1_1TFProfObserver" kind="class"><name>tf::TFProfObserver</name>
    <member refid="classtf_1_1TFProfObserver_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1TFProfObserver_1a7857257f009bf5cae6bda4505fffbd2d" kind="friend"><name>TFProfManager</name></member>
    <member refid="classtf_1_1TFProfObserver_1a38776d45d5d762b56c28c034d71170a9" kind="variable"><name>_timeline</name></member>
    <member refid="classtf_1_1TFProfObserver_1a07f9db5edc30436d8ec55bdaecca5aaa" kind="variable"><name>_stacks</name></member>
    <member refid="classtf_1_1TFProfObserver_1a9f1e839e2a8d3abd0b91ac454f0d078b" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1TFProfObserver_1a59e82cb3f9b0ada38aa1ddea14f14d02" kind="function"><name>dump</name></member>
    <member refid="classtf_1_1TFProfObserver_1a6102cedbaf2e40f8b8ff916827297198" kind="function"><name>summary</name></member>
    <member refid="classtf_1_1TFProfObserver_1a6f12a927a328bd594cf6c3c3a6bfe992" kind="function"><name>summary</name></member>
    <member refid="classtf_1_1TFProfObserver_1a5e1f63034a96a5a79cef6da412efd203" kind="function"><name>clear</name></member>
    <member refid="classtf_1_1TFProfObserver_1a8b3b0bee8762af654cfebd2bb2ee98ed" kind="function"><name>num_tasks</name></member>
    <member refid="classtf_1_1TFProfObserver_1a62ccf28199e35748903559848072fc29" kind="function"><name>num_workers</name></member>
    <member refid="classtf_1_1TFProfObserver_1aa030d8154dd03aea3b8fa8ce42e1151b" kind="function"><name>set_up</name></member>
    <member refid="classtf_1_1TFProfObserver_1a5debfce27f7e012d22872c134b261c63" kind="function"><name>on_entry</name></member>
    <member refid="classtf_1_1TFProfObserver_1af3a1630b5b1db5341a239a5d4c12c891" kind="function"><name>on_exit</name></member>
  </compound>
  <compound refid="structtf_1_1ChromeObserver_1_1Timeline" kind="struct"><name>tf::ChromeObserver::Timeline</name>
    <member refid="structtf_1_1ChromeObserver_1_1Timeline_1a3b3761840cd96e8af15e35ba65093e3d" kind="variable"><name>origin</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Timeline_1a68e28885dc55ee0c4a910efb8e89919e" kind="variable"><name>segments</name></member>
    <member refid="structtf_1_1ChromeObserver_1_1Timeline_1a9094de2f3a2857b6e0d8ccea358aaa0e" kind="variable"><name>stacks</name></member>
  </compound>
  <compound refid="structtf_1_1Timeline" kind="struct"><name>tf::Timeline</name>
    <member refid="structtf_1_1Timeline_1ad2de68d870637ec1fccd98c2c8973c9f" kind="variable"><name>uid</name></member>
    <member refid="structtf_1_1Timeline_1ad38c8a527bc603571c53cfce08ccbab7" kind="variable"><name>origin</name></member>
    <member refid="structtf_1_1Timeline_1a5a942a8ff1ad574d7fc339540be960c4" kind="variable"><name>segments</name></member>
    <member refid="structtf_1_1Timeline_1a2c5e949150d6ac49dfcb9c0ff51ba519" kind="function"><name>Timeline</name></member>
    <member refid="structtf_1_1Timeline_1af744379a935c916c98596e43cd416047" kind="function"><name>Timeline</name></member>
    <member refid="structtf_1_1Timeline_1a2da600f14a05fd319237d79944d3bb4d" kind="function"><name>Timeline</name></member>
    <member refid="structtf_1_1Timeline_1a947baa8607959e2204d7df20a850df86" kind="function"><name>operator=</name></member>
    <member refid="structtf_1_1Timeline_1a9f315578cf84dd0ddfa4bff43762eebb" kind="function"><name>operator=</name></member>
    <member refid="structtf_1_1Timeline_1a435fff911fa14d75c7000f1a908cee57" kind="function"><name>save</name></member>
    <member refid="structtf_1_1Timeline_1af08d956eca1550dcbe161eb53a11fe46" kind="function"><name>load</name></member>
  </compound>
  <compound refid="classtf_1_1Worker" kind="class"><name>tf::Worker</name>
    <member refid="classtf_1_1Worker_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1Worker_1a0f36eeb628ab3803180651682f5821f3" kind="friend"><name>WorkerView</name></member>
    <member refid="classtf_1_1Worker_1ab21837ab13c416c19d133fc2a73f031c" kind="variable"><name>_id</name></member>
    <member refid="classtf_1_1Worker_1a59a04a39db3d147221eed60da75a9744" kind="variable"><name>_vtm</name></member>
    <member refid="classtf_1_1Worker_1a0884258c54f630a3b31e4d1e208852bb" kind="variable"><name>_executor</name></member>
    <member refid="classtf_1_1Worker_1a843309d64f4013e49c4bf36684bd1aae" kind="variable"><name>_thread</name></member>
    <member refid="classtf_1_1Worker_1ac08ba8b8d845b8278a501f836e0cf176" kind="variable"><name>_waiter</name></member>
    <member refid="classtf_1_1Worker_1a753b13866ccf3badaebf5e92af0bf63f" kind="variable"><name>_rdgen</name></member>
    <member refid="classtf_1_1Worker_1a48d8af5d9ce1227254d202548c9b5f13" kind="variable"><name>_wsq</name></member>
    <member refid="classtf_1_1Worker_1a54428c075390d30c9c55a0dd0838575e" kind="variable"><name>_cache</name></member>
    <member refid="classtf_1_1Worker_1a0180ea51cc46551157eaae451b50c7d8" kind="function"><name>id</name></member>
    <member refid="classtf_1_1Worker_1a55cead41a8cf1a1c1fd72cd8790be65f" kind="function"><name>thread</name></member>
    <member refid="classtf_1_1Worker_1a5e1ec48fd2295d260e8f335ff22b95ae" kind="function"><name>queue_size</name></member>
    <member refid="classtf_1_1Worker_1a0c0505b0ce5b464d4458b5278265429a" kind="function"><name>queue_capacity</name></member>
  </compound>
  <compound refid="structtf_1_1TFProfObserver_1_1WorkerSummary" kind="struct"><name>tf::TFProfObserver::WorkerSummary</name>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1a0e19f9b6dac7b433f0ff817c4cad7902" kind="variable"><name>id</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1aba890e5db5231cae8bbb9a7dde220fad" kind="variable"><name>level</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1aeea3d821e97a0ace6b52794af1a5d0c3" kind="variable"><name>count</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1ac73c80f88096b53aa0011f564c089964" kind="variable"><name>total_span</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1a30297be79fc726925cb17e7c312d113a" kind="variable"><name>min_span</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1a3e35a5992f614e2c4660c52948aba8ec" kind="variable"><name>max_span</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1a39e5f41f014d5759ddf27dc60abff0ba" kind="variable"><name>tsum</name></member>
    <member refid="structtf_1_1TFProfObserver_1_1WorkerSummary_1a0421314faa9776ca4b06e8a2ac04df2b" kind="function"><name>avg_span</name></member>
  </compound>
  <compound refid="classtf_1_1WorkerView" kind="class"><name>tf::WorkerView</name>
    <member refid="classtf_1_1WorkerView_1a763b2f90bc53f92d680a635fe28e858e" kind="friend"><name>Executor</name></member>
    <member refid="classtf_1_1WorkerView_1ad4df9bf3972a4fe4253fd27477f51808" kind="variable"><name>_worker</name></member>
    <member refid="classtf_1_1WorkerView_1ab12c901b0bd8a9f1fa33d305a32ae259" kind="function"><name>id</name></member>
    <member refid="classtf_1_1WorkerView_1afb99c27c8224732921fadb98ceff42e4" kind="function"><name>queue_size</name></member>
    <member refid="classtf_1_1WorkerView_1aed408a9cbf65b0598fa27cd75d9b915e" kind="function"><name>queue_capacity</name></member>
    <member refid="classtf_1_1WorkerView_1af5023cb4d6b24fab8992310741952bea" kind="function"><name>WorkerView</name></member>
    <member refid="classtf_1_1WorkerView_1a4b39c214f3cd23c241faa56f4c94042f" kind="function"><name>WorkerView</name></member>
  </compound>
  <compound refid="namespacestd" kind="namespace"><name>std</name>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_and_explicit</name></member>
    <member refid="cpp/atomic/atomic_fetch_xor_1" kind="function"><name>atomic_fetch_xor_explicit</name></member>
    <member refid="cpp/error/set_unexpected_1" kind="function"><name>set_unexpected</name></member>
    <member refid="cpp/io/c/fputs_1" kind="function"><name>fputs</name></member>
    <member refid="cpp/numeric/math/modf_1" kind="function"><name>modf</name></member>
    <member refid="cpp/utility/functional/not2_1" kind="function"><name>not2</name></member>
    <member refid="cpp/string/byte/strlen_1" kind="function"><name>strlen</name></member>
    <member refid="cpp/numeric/math/exp2_1" kind="function"><name>exp2</name></member>
    <member refid="cpp/io/manip/setiosflags_1" kind="function"><name>setiosflags</name></member>
    <member refid="cpp/algorithm/adjacent_difference_1" kind="function"><name>adjacent_difference</name></member>
    <member refid="cpp/numeric/math/cos_1" kind="function"><name>cos</name></member>
    <member refid="cpp/io/c/fwscanf_1" kind="function"><name>fwscanf</name></member>
    <member refid="cpp/atomic/atomic_init_1" kind="function"><name>atomic_init</name></member>
    <member refid="cpp/utility/tuple/forward_as_tuple_1" kind="function"><name>forward_as_tuple</name></member>
    <member refid="cpp/utility/program/abort_1" kind="function"><name>abort</name></member>
    <member refid="cpp/string/wide/wcsncmp_1" kind="function"><name>wcsncmp</name></member>
    <member refid="cpp/algorithm/set_intersection_1" kind="function"><name>set_intersection</name></member>
    <member refid="cpp/atomic/atomic_signal_fence_1" kind="function"><name>atomic_signal_fence</name></member>
    <member refid="cpp/numeric/math/abs_1" kind="function"><name>llabs</name></member>
    <member refid="cpp/iterator/make_move_iterator_1" kind="function"><name>make_move_iterator</name></member>
    <member refid="cpp/io/c/fscanf_1" kind="function"><name>scanf</name></member>
    <member refid="cpp/numeric/math/nextafter_1" kind="function"><name>nextafter</name></member>
    <member refid="cpp/string/basic_string/stol_1" kind="function"><name>stol</name></member>
    <member refid="cpp/string/byte/strcspn_1" kind="function"><name>strcspn</name></member>
    <member refid="cpp/io/c/ungetwc_1" kind="function"><name>ungetwc</name></member>
    <member refid="cpp/algorithm/transform_1" kind="function"><name>transform</name></member>
    <member refid="cpp/io/c/fputc_1" kind="function"><name>putc</name></member>
    <member refid="cpp/string/wide/iswdigit_1" kind="function"><name>iswdigit</name></member>
    <member refid="cpp/numeric/math/rint_1" kind="function"><name>rint</name></member>
    <member refid="cpp/string/byte/memset_1" kind="function"><name>memset</name></member>
    <member refid="cpp/string/byte/isgraph_1" kind="function"><name>isgraph</name></member>
    <member refid="cpp/algorithm/replace_copy_1" kind="function"><name>replace_copy_if</name></member>
    <member refid="cpp/numeric/math/scalbn_1" kind="function"><name>scalbn</name></member>
    <member refid="cpp/algorithm/partial_sort_copy_1" kind="function"><name>partial_sort_copy</name></member>
    <member refid="cpp/error/make_exception_ptr_1" kind="function"><name>make_exception_ptr</name></member>
    <member refid="cpp/numeric/math/frexp_1" kind="function"><name>frexp</name></member>
    <member refid="cpp/string/byte/isxdigit_1" kind="function"><name>isxdigit</name></member>
    <member refid="cpp/atomic/atomic_exchange_1" kind="function"><name>atomic_exchange_explicit</name></member>
    <member refid="cpp/io/c/fwprintf_1" kind="function"><name>wprintf</name></member>
    <member refid="cpp/numeric/math/fdim_1" kind="function"><name>fdim</name></member>
    <member refid="cpp/string/wide/wctype_1" kind="function"><name>wctype</name></member>
    <member refid="cpp/string/multibyte/mbrtoc32_1" kind="function"><name>mbrtoc32</name></member>
    <member refid="cpp/io/manip/setw_1" kind="function"><name>setw</name></member>
    <member refid="cpp/memory/get_temporary_buffer_1" kind="function"><name>get_temporary_buffer</name></member>
    <member refid="cpp/numeric/math/fmax_1" kind="function"><name>fmax</name></member>
    <member refid="cpp/atomic/atomic_thread_fence_1" kind="function"><name>atomic_thread_fence</name></member>
    <member refid="cpp/atomic/atomic_exchange_1" kind="function"><name>atomic_exchange</name></member>
    <member refid="cpp/io/c/fgetwc_1" kind="function"><name>fgetwc</name></member>
    <member refid="cpp/io/c/fwprintf_1" kind="function"><name>swprintf</name></member>
    <member refid="cpp/algorithm/prev_permutation_1" kind="function"><name>prev_permutation</name></member>
    <member refid="cpp/algorithm/max_element_1" kind="function"><name>max_element</name></member>
    <member refid="cpp/algorithm/set_symmetric_difference_1" kind="function"><name>set_symmetric_difference</name></member>
    <member refid="cpp/string/wide/wcscpy_1" kind="function"><name>wcscpy</name></member>
    <member refid="cpp/memory/shared_ptr/pointer_cast_1" kind="function"><name>const_pointer_cast</name></member>
    <member refid="cpp/algorithm/minmax_element_1" kind="function"><name>minmax_element</name></member>
    <member refid="cpp/string/wide/wcstok_1" kind="function"><name>wcstok</name></member>
    <member refid="cpp/utility/functional/ref_1" kind="function"><name>ref</name></member>
    <member refid="cpp/numeric/fenv/feupdateenv_1" kind="function"><name>feupdateenv</name></member>
    <member refid="cpp/io/manip/endl_1" kind="function"><name>endl</name></member>
    <member refid="cpp/iterator/end_1" kind="function"><name>end</name></member>
    <member refid="cpp/string/wide/wmemmove_1" kind="function"><name>wmemmove</name></member>
    <member refid="cpp/numeric/math/fmin_1" kind="function"><name>fmin</name></member>
    <member refid="cpp/memory/uninitialized_fill_n_1" kind="function"><name>uninitialized_fill_n</name></member>
    <member refid="cpp/io/manip/uppercase_1" kind="function"><name>nouppercase</name></member>
    <member refid="cpp/io/manip/showpos_1" kind="function"><name>noshowpos</name></member>
    <member refid="cpp/chrono/c/ctime_1" kind="function"><name>ctime</name></member>
    <member refid="cpp/string/wide/wmemset_1" kind="function"><name>wmemset</name></member>
    <member refid="cpp/string/wide/iswpunct_1" kind="function"><name>iswpunct</name></member>
    <member refid="cpp/algorithm/pop_heap_1" kind="function"><name>pop_heap</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>sprintf</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>fixed</name></member>
    <member refid="cpp/memory/shared_ptr/make_shared_1" kind="function"><name>make_shared</name></member>
    <member refid="cpp/algorithm/make_heap_1" kind="function"><name>make_heap</name></member>
    <member refid="cpp/numeric/math/fmod_1" kind="function"><name>fmod</name></member>
    <member refid="cpp/string/byte/atoi_1" kind="function"><name>atol</name></member>
    <member refid="cpp/memory/uninitialized_copy_1" kind="function"><name>uninitialized_copy</name></member>
    <member refid="cpp/memory/shared_ptr/pointer_cast_1" kind="function"><name>dynamic_pointer_cast</name></member>
    <member refid="cpp/algorithm/set_union_1" kind="function"><name>set_union</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>hexfloat</name></member>
    <member refid="cpp/io/c/vfwprintf_1" kind="function"><name>vswprintf</name></member>
    <member refid="cpp/chrono/c/asctime_1" kind="function"><name>asctime</name></member>
    <member refid="cpp/string/wide/iswspace_1" kind="function"><name>iswspace</name></member>
    <member refid="cpp/numeric/math/nan_1" kind="function"><name>nan</name></member>
    <member refid="cpp/algorithm/sort_1" kind="function"><name>sort</name></member>
    <member refid="cpp/utility/program/quick_exit_1" kind="function"><name>quick_exit</name></member>
    <member refid="cpp/numeric/math/log10_1" kind="function"><name>log10</name></member>
    <member refid="cpp/string/multibyte/mbstowcs_1" kind="function"><name>mbstowcs</name></member>
    <member refid="cpp/string/byte/isspace_1" kind="function"><name>isspace</name></member>
    <member refid="cpp/string/byte/strncat_1" kind="function"><name>strncat</name></member>
    <member refid="cpp/numeric/math/isinf_1" kind="function"><name>isinf</name></member>
    <member refid="cpp/string/byte/atof_1" kind="function"><name>atof</name></member>
    <member refid="cpp/numeric/math/erf_1" kind="function"><name>erf</name></member>
    <member refid="cpp/algorithm/is_sorted_until_1" kind="function"><name>is_sorted_until</name></member>
    <member refid="cpp/numeric/math/cbrt_1" kind="function"><name>cbrt</name></member>
    <member refid="cpp/numeric/math/log1p_1" kind="function"><name>log1p</name></member>
    <member refid="cpp/memory/return_temporary_buffer_1" kind="function"><name>return_temporary_buffer</name></member>
    <member refid="cpp/string/multibyte/mbsrtowcs_1" kind="function"><name>mbsrtowcs</name></member>
    <member refid="cpp/numeric/fenv/feraiseexcept_1" kind="function"><name>feraiseexcept</name></member>
    <member refid="cpp/io/c/fseek_1" kind="function"><name>fseek</name></member>
    <member refid="cpp/atomic/atomic_fetch_or_1" kind="function"><name>atomic_fetch_or_explicit</name></member>
    <member refid="cpp/numeric/math/log_1" kind="function"><name>log</name></member>
    <member refid="cpp/io/c/putchar_1" kind="function"><name>putchar</name></member>
    <member refid="cpp/utility/tuple/make_tuple_1" kind="function"><name>make_tuple</name></member>
    <member refid="cpp/numeric/math/expm1_1" kind="function"><name>expm1</name></member>
    <member refid="cpp/numeric/math/fma_1" kind="function"><name>fma</name></member>
    <member refid="cpp/algorithm/remove_copy_1" kind="function"><name>remove_copy_if</name></member>
    <member refid="cpp/io/manip/showpoint_1" kind="function"><name>showpoint</name></member>
    <member refid="cpp/io/c/fscanf_1" kind="function"><name>fscanf</name></member>
    <member refid="cpp/algorithm/stable_partition_1" kind="function"><name>stable_partition</name></member>
    <member refid="cpp/algorithm/fill_n_1" kind="function"><name>fill_n</name></member>
    <member refid="cpp/algorithm/remove_copy_1" kind="function"><name>remove_copy</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_strong_explicit</name></member>
    <member refid="cpp/string/multibyte/wctomb_1" kind="function"><name>wctomb</name></member>
    <member refid="cpp/io/c/fgets_1" kind="function"><name>fgets</name></member>
    <member refid="cpp/numeric/math/remainder_1" kind="function"><name>remainder</name></member>
    <member refid="cpp/memory/shared_ptr/allocate_shared_1" kind="function"><name>allocate_shared</name></member>
    <member refid="cpp/algorithm/unique_1" kind="function"><name>unique</name></member>
    <member refid="cpp/algorithm/includes_1" kind="function"><name>includes</name></member>
    <member refid="cpp/string/wide/iswalnum_1" kind="function"><name>iswalnum</name></member>
    <member refid="cpp/utility/program/exit_1" kind="function"><name>exit</name></member>
    <member refid="cpp/io/manip/put_time_1" kind="function"><name>put_time</name></member>
    <member refid="cpp/string/basic_string/to_string_1" kind="function"><name>to_string</name></member>
    <member refid="cpp/algorithm/is_heap_until_1" kind="function"><name>is_heap_until</name></member>
    <member refid="cpp/string/wide/wcstof_1" kind="function"><name>wcstold</name></member>
    <member refid="cpp/string/basic_string/stof_1" kind="function"><name>stold</name></member>
    <member refid="cpp/io/c/ftell_1" kind="function"><name>ftell</name></member>
    <member refid="cpp/algorithm/copy_backward_1" kind="function"><name>copy_backward</name></member>
    <member refid="cpp/string/wide/wcstol_1" kind="function"><name>wcstoll</name></member>
    <member refid="cpp/io/c/perror_1" kind="function"><name>perror</name></member>
    <member refid="cpp/io/c/vfwscanf_1" kind="function"><name>vwscanf</name></member>
    <member refid="cpp/algorithm/stable_sort_1" kind="function"><name>stable_sort</name></member>
    <member refid="cpp/error/generic_category_1" kind="function"><name>generic_category</name></member>
    <member refid="cpp/numeric/math/abs_1" kind="function"><name>abs(int)</name></member>
    <member refid="cpp/io/c/fgetws_1" kind="function"><name>fgetws</name></member>
    <member refid="cpp/io/manip/showpos_1" kind="function"><name>showpos</name></member>
    <member refid="cpp/numeric/math/exp_1" kind="function"><name>exp</name></member>
    <member refid="cpp/algorithm/fill_1" kind="function"><name>fill</name></member>
    <member refid="cpp/string/byte/isalpha_1" kind="function"><name>isalpha</name></member>
    <member refid="cpp/numeric/math/lgamma_1" kind="function"><name>lgamma</name></member>
    <member refid="cpp/numeric/fenv/feclearexcept_1" kind="function"><name>feclearexcept</name></member>
    <member refid="cpp/string/wide/wcsncpy_1" kind="function"><name>wcsncpy</name></member>
    <member refid="cpp/memory/gc/undeclare_reachable_1" kind="function"><name>undeclare_reachable</name></member>
    <member refid="cpp/io/manip/hex_1" kind="function"><name>oct</name></member>
    <member refid="cpp/string/byte/strspn_1" kind="function"><name>strspn</name></member>
    <member refid="cpp/memory/c/realloc_1" kind="function"><name>realloc</name></member>
    <member refid="cpp/algorithm/copy_1" kind="function"><name>copy</name></member>
    <member refid="cpp/algorithm/binary_search_1" kind="function"><name>binary_search</name></member>
    <member refid="cpp/error/system_category_1" kind="function"><name>system_category</name></member>
    <member refid="cpp/string/multibyte/mbrtowc_1" kind="function"><name>mbrtowc</name></member>
    <member refid="cpp/string/byte/strtof_1" kind="function"><name>strtof</name></member>
    <member refid="cpp/utility/functional/mem_fn_1" kind="function"><name>mem_fn</name></member>
    <member refid="cpp/iterator/distance_1" kind="function"><name>distance</name></member>
    <member refid="cpp/thread/lock_1" kind="function"><name>lock</name></member>
    <member refid="cpp/string/byte/strcmp_1" kind="function"><name>strcmp</name></member>
    <member refid="cpp/io/c/tmpfile_1" kind="function"><name>tmpfile</name></member>
    <member refid="cpp/numeric/math/hypot_1" kind="function"><name>hypot</name></member>
    <member refid="cpp/utility/program/getenv_1" kind="function"><name>getenv</name></member>
    <member refid="cpp/string/byte/strrchr_1" kind="function"><name>strrchr</name></member>
    <member refid="cpp/algorithm/count_1" kind="function"><name>count</name></member>
    <member refid="cpp/numeric/math/tan_1" kind="function"><name>tan</name></member>
    <member refid="cpp/chrono/c/strftime_1" kind="function"><name>strftime</name></member>
    <member refid="cpp/string/basic_string/stof_1" kind="function"><name>stod</name></member>
    <member refid="cpp/string/wide/towupper_1" kind="function"><name>towupper</name></member>
    <member refid="cpp/string/byte/atoi_1" kind="function"><name>atoll</name></member>
    <member refid="cpp/atomic/atomic_store_1" kind="function"><name>atomic_store</name></member>
    <member refid="cpp/string/basic_string/stol_1" kind="function"><name>stoi</name></member>
    <member refid="cpp/error/rethrow_exception_1" kind="function"><name>rethrow_exception</name></member>
    <member refid="cpp/numeric/math/sin_1" kind="function"><name>sin</name></member>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_sub_explicit</name></member>
    <member refid="cpp/error/unexpected_1" kind="function"><name>unexpected</name></member>
    <member refid="cpp/string/multibyte/mbtowc_1" kind="function"><name>mbtowc</name></member>
    <member refid="cpp/io/manip/get_time_1" kind="function"><name>get_time</name></member>
    <member refid="cpp/algorithm/partition_1" kind="function"><name>partition</name></member>
    <member refid="cpp/iterator/next_1" kind="function"><name>next</name></member>
    <member refid="cpp/numeric/math/isfinite_1" kind="function"><name>isfinite</name></member>
    <member refid="cpp/io/manip/boolalpha_1" kind="function"><name>boolalpha</name></member>
    <member refid="cpp/numeric/fenv/fetestexcept_1" kind="function"><name>fetestexcept</name></member>
    <member refid="cpp/string/multibyte/mbrlen_1" kind="function"><name>mbrlen</name></member>
    <member refid="cpp/string/wide/iswgraph_1" kind="function"><name>iswgraph</name></member>
    <member refid="cpp/chrono/c/time_1" kind="function"><name>time</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_strong</name></member>
    <member refid="cpp/string/wide/wcschr_1" kind="function"><name>wcschr</name></member>
    <member refid="cpp/io/manip/uppercase_1" kind="function"><name>uppercase</name></member>
    <member refid="cpp/algorithm/lower_bound_1" kind="function"><name>lower_bound</name></member>
    <member refid="cpp/algorithm/copy_1" kind="function"><name>copy_if</name></member>
    <member refid="cpp/numeric/math/isnan_1" kind="function"><name>isnan</name></member>
    <member refid="cpp/locale/has_facet_1" kind="function"><name>has_facet</name></member>
    <member refid="cpp/atomic/kill_dependency_1" kind="function"><name>kill_dependency</name></member>
    <member refid="cpp/memory/uninitialized_copy_n_1" kind="function"><name>uninitialized_copy_n</name></member>
    <member refid="cpp/numeric/fenv/feholdexcept_1" kind="function"><name>feholdexcept</name></member>
    <member refid="cpp/numeric/math/div_1" kind="function"><name>div</name></member>
    <member refid="cpp/utility/program/at_quick_exit_1" kind="function"><name>at_quick_exit</name></member>
    <member refid="cpp/string/wide/wcspbrk_1" kind="function"><name>wcspbrk</name></member>
    <member refid="cpp/algorithm/search_1" kind="function"><name>search</name></member>
    <member refid="cpp/algorithm/find_first_of_1" kind="function"><name>find_first_of</name></member>
    <member refid="cpp/algorithm/iota_1" kind="function"><name>iota</name></member>
    <member refid="cpp/memory/gc/declare_reachable_1" kind="function"><name>declare_reachable</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_weak</name></member>
    <member refid="cpp/string/byte/strtof_1" kind="function"><name>strtod</name></member>
    <member refid="cpp/algorithm/accumulate_1" kind="function"><name>accumulate</name></member>
    <member refid="cpp/string/wide/wcsrchr_1" kind="function"><name>wcsrchr</name></member>
    <member refid="cpp/algorithm/min_element_1" kind="function"><name>min_element</name></member>
    <member refid="cpp/io/c/clearerr_1" kind="function"><name>clearerr</name></member>
    <member refid="cpp/algorithm/random_shuffle_1" kind="function"><name>random_shuffle</name></member>
    <member refid="cpp/string/wide/iswalpha_1" kind="function"><name>iswalpha</name></member>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_and</name></member>
    <member refid="cpp/string/wide/wmemchr_1" kind="function"><name>wmemchr</name></member>
    <member refid="cpp/algorithm/bsearch_1" kind="function"><name>bsearch</name></member>
    <member refid="cpp/numeric/math/ilogb_1" kind="function"><name>ilogb</name></member>
    <member refid="cpp/algorithm/unique_copy_1" kind="function"><name>unique_copy</name></member>
    <member refid="cpp/utility/program/_Exit_1" kind="function"><name>_Exit</name></member>
    <member refid="cpp/utility/move_1" kind="function"><name>move</name></member>
    <member refid="cpp/algorithm/find_end_1" kind="function"><name>find_end</name></member>
    <member refid="cpp/numeric/fenv/feexceptflag_1" kind="function"><name>fesetexceptflag</name></member>
    <member refid="cpp/algorithm/nth_element_1" kind="function"><name>nth_element</name></member>
    <member refid="cpp/io/c/gets_1" kind="function"><name>gets</name></member>
    <member refid="cpp/algorithm/lexicographical_compare_1" kind="function"><name>lexicographical_compare</name></member>
    <member refid="cpp/numeric/math/nearbyint_1" kind="function"><name>nearbyint</name></member>
    <member refid="cpp/string/byte/memcpy_1" kind="function"><name>memcpy</name></member>
    <member refid="cpp/io/c/fwrite_1" kind="function"><name>fwrite</name></member>
    <member refid="cpp/io/manip/unitbuf_1" kind="function"><name>unitbuf</name></member>
    <member refid="cpp/string/wide/iswlower_1" kind="function"><name>iswlower</name></member>
    <member refid="cpp/string/multibyte/mblen_1" kind="function"><name>mblen</name></member>
    <member refid="cpp/io/c/fwscanf_1" kind="function"><name>swscanf</name></member>
    <member refid="cpp/string/wide/wcstoimax_1" kind="function"><name>wcstoimax</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>fprintf</name></member>
    <member refid="cpp/algorithm/find_1" kind="function"><name>find_if</name></member>
    <member refid="cpp/string/byte/strtoimax_1" kind="function"><name>strtoimax</name></member>
    <member refid="cpp/string/byte/isalnum_1" kind="function"><name>isalnum</name></member>
    <member refid="cpp/atomic/atomic_fetch_add_1" kind="function"><name>atomic_fetch_add_explicit</name></member>
    <member refid="cpp/algorithm/push_heap_1" kind="function"><name>push_heap</name></member>
    <member refid="cpp/algorithm/min_1" kind="function"><name>min</name></member>
    <member refid="cpp/io/c/fwprintf_1" kind="function"><name>fwprintf</name></member>
    <member refid="cpp/error/uncaught_exception_1" kind="function"><name>uncaught_exception</name></member>
    <member refid="cpp/string/byte/strtol_1" kind="function"><name>strtoll</name></member>
    <member refid="cpp/error/throw_with_nested_1" kind="function"><name>throw_with_nested</name></member>
    <member refid="cpp/algorithm/random_shuffle_1" kind="function"><name>shuffle</name></member>
    <member refid="cpp/string/byte/isprint_1" kind="function"><name>isprint</name></member>
    <member refid="cpp/memory/new/get_new_handler_1" kind="function"><name>get_new_handler</name></member>
    <member refid="cpp/thread/call_once_1" kind="function"><name>call_once</name></member>
    <member refid="cpp/numeric/math/trunc_1" kind="function"><name>trunc</name></member>
    <member refid="cpp/string/wide/wcscspn_1" kind="function"><name>wcscspn</name></member>
    <member refid="cpp/string/multibyte/mbrtoc16_1" kind="function"><name>mbrtoc16</name></member>
    <member refid="cpp/numeric/math/round_1" kind="function"><name>lround</name></member>
    <member refid="cpp/numeric/math/pow_1" kind="function"><name>pow</name></member>
    <member refid="cpp/numeric/math/tgamma_1" kind="function"><name>tgamma</name></member>
    <member refid="cpp/numeric/math/erfc_1" kind="function"><name>erfc</name></member>
    <member refid="cpp/numeric/math/round_1" kind="function"><name>llround</name></member>
    <member refid="cpp/numeric/math/fabs_1" kind="function"><name>abs(float)</name></member>
    <member refid="cpp/numeric/math/asinh_1" kind="function"><name>asinh</name></member>
    <member refid="cpp/io/c/feof_1" kind="function"><name>feof</name></member>
    <member refid="cpp/io/manip/skipws_1" kind="function"><name>noskipws</name></member>
    <member refid="cpp/algorithm/find_1" kind="function"><name>find</name></member>
    <member refid="cpp/string/byte/atoi_1" kind="function"><name>atoi</name></member>
    <member refid="cpp/utility/functional/not1_1" kind="function"><name>not1</name></member>
    <member refid="cpp/io/c/vfscanf_1" kind="function"><name>vfscanf</name></member>
    <member refid="cpp/string/basic_string/stof_1" kind="function"><name>stof</name></member>
    <member refid="cpp/regex/regex_search_1" kind="function"><name>regex_search</name></member>
    <member refid="cpp/algorithm/rotate_copy_1" kind="function"><name>rotate_copy</name></member>
    <member refid="cpp/memory/new/set_new_handler_1" kind="function"><name>set_new_handler</name></member>
    <member refid="cpp/memory/gc/undeclare_no_pointers_1" kind="function"><name>undeclare_no_pointers</name></member>
    <member refid="cpp/thread/async_1" kind="function"><name>async</name></member>
    <member refid="cpp/algorithm/partition_point_1" kind="function"><name>partition_point</name></member>
    <member refid="cpp/io/c/vfscanf_1" kind="function"><name>vsscanf</name></member>
    <member refid="cpp/numeric/fenv/feround_1" kind="function"><name>fesetround</name></member>
    <member refid="cpp/atomic/atomic_is_lock_free_1" kind="function"><name>atomic_is_lock_free</name></member>
    <member refid="cpp/numeric/math/tanh_1" kind="function"><name>tanh</name></member>
    <member refid="cpp/numeric/math/div_1" kind="function"><name>ldiv</name></member>
    <member refid="cpp/io/manip/setbase_1" kind="function"><name>setbase</name></member>
    <member refid="cpp/algorithm/remove_1" kind="function"><name>remove</name></member>
    <member refid="cpp/string/byte/strtol_1" kind="function"><name>strtol</name></member>
    <member refid="cpp/string/byte/strpbrk_1" kind="function"><name>strpbrk</name></member>
    <member refid="cpp/numeric/math/signbit_1" kind="function"><name>signbit</name></member>
    <member refid="cpp/string/wide/wcsncat_1" kind="function"><name>wcsncat</name></member>
    <member refid="cpp/io/manip/get_money_1" kind="function"><name>get_money</name></member>
    <member refid="cpp/algorithm/set_difference_1" kind="function"><name>set_difference</name></member>
    <member refid="cpp/utility/functional/ref_1" kind="function"><name>cref</name></member>
    <member refid="cpp/string/basic_string/getline_1" kind="function"><name>getline</name></member>
    <member refid="cpp/string/basic_string/to_wstring_1" kind="function"><name>to_wstring</name></member>
    <member refid="cpp/utility/program/system_1" kind="function"><name>system</name></member>
    <member refid="cpp/memory/shared_ptr/pointer_cast_1" kind="function"><name>static_pointer_cast</name></member>
    <member refid="cpp/string/wide/wcstoimax_1" kind="function"><name>wcstoumax</name></member>
    <member refid="cpp/string/byte/memmove_1" kind="function"><name>memmove</name></member>
    <member refid="cpp/io/c/getwchar_1" kind="function"><name>getwchar</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>scientific</name></member>
    <member refid="cpp/chrono/c/wcsftime_1" kind="function"><name>wcsftime</name></member>
    <member refid="cpp/iterator/begin_1" kind="function"><name>begin</name></member>
    <member refid="cpp/numeric/math/ceil_1" kind="function"><name>ceil</name></member>
    <member refid="cpp/numeric/math/sinh_1" kind="function"><name>sinh</name></member>
    <member refid="cpp/algorithm/is_permutation_1" kind="function"><name>is_permutation</name></member>
    <member refid="cpp/algorithm/generate_n_1" kind="function"><name>generate_n</name></member>
    <member refid="cpp/numeric/math/acosh_1" kind="function"><name>acosh</name></member>
    <member refid="cpp/iterator/advance_1" kind="function"><name>advance</name></member>
    <member refid="cpp/io/manip/flush_1" kind="function"><name>flush</name></member>
    <member refid="cpp/atomic/atomic_fetch_xor_1" kind="function"><name>atomic_fetch_xor</name></member>
    <member refid="cpp/io/manip/ws_1" kind="function"><name>ws</name></member>
    <member refid="cpp/utility/program/signal_1" kind="function"><name>signal</name></member>
    <member refid="cpp/io/manip/showbase_1" kind="function"><name>noshowbase</name></member>
    <member refid="cpp/algorithm/generate_1" kind="function"><name>generate</name></member>
    <member refid="cpp/numeric/math/ldexp_1" kind="function"><name>ldexp</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vsnprintf</name></member>
    <member refid="cpp/algorithm/remove_1" kind="function"><name>remove_if</name></member>
    <member refid="cpp/string/basic_string/stoul_1" kind="function"><name>stoull</name></member>
    <member refid="cpp/numeric/fenv/feexceptflag_1" kind="function"><name>fegetexceptflag</name></member>
    <member refid="cpp/algorithm/find_1" kind="function"><name>find_if_not</name></member>
    <member refid="cpp/algorithm/merge_1" kind="function"><name>merge</name></member>
    <member refid="cpp/memory/c/free_1" kind="function"><name>free</name></member>
    <member refid="cpp/algorithm/count_1" kind="function"><name>count_if</name></member>
    <member refid="cpp/chrono/c/clock_1" kind="function"><name>clock</name></member>
    <member refid="cpp/chrono/c/mktime_1" kind="function"><name>mktime</name></member>
    <member refid="cpp/iterator/inserter_1" kind="function"><name>inserter</name></member>
    <member refid="cpp/io/c/puts_1" kind="function"><name>puts</name></member>
    <member refid="cpp/numeric/math/asin_1" kind="function"><name>asin</name></member>
    <member refid="cpp/string/byte/iscntrl_1" kind="function"><name>iscntrl</name></member>
    <member refid="cpp/chrono/c/difftime_1" kind="function"><name>difftime</name></member>
    <member refid="cpp/error/terminate_1" kind="function"><name>terminate</name></member>
    <member refid="cpp/string/byte/memcmp_1" kind="function"><name>memcmp</name></member>
    <member refid="cpp/memory/uninitialized_fill_1" kind="function"><name>uninitialized_fill</name></member>
    <member refid="cpp/io/manip/hex_1" kind="function"><name>hex</name></member>
    <member refid="cpp/utility/tuple/tie_1" kind="function"><name>tie</name></member>
    <member refid="cpp/iterator/back_inserter_1" kind="function"><name>back_inserter</name></member>
    <member refid="cpp/algorithm/upper_bound_1" kind="function"><name>upper_bound</name></member>
    <member refid="cpp/algorithm/adjacent_find_1" kind="function"><name>adjacent_find</name></member>
    <member refid="cpp/locale/use_facet_1" kind="function"><name>use_facet</name></member>
    <member refid="cpp/io/c/vfwprintf_1" kind="function"><name>vfwprintf</name></member>
    <member refid="cpp/atomic/atomic_fetch_add_1" kind="function"><name>atomic_fetch_add</name></member>
    <member refid="cpp/io/c/fsetpos_1" kind="function"><name>fsetpos</name></member>
    <member refid="cpp/memory/c/malloc_1" kind="function"><name>malloc</name></member>
    <member refid="cpp/chrono/c/localtime_1" kind="function"><name>localtime</name></member>
    <member refid="cpp/string/wide/wcscmp_1" kind="function"><name>wcscmp</name></member>
    <member refid="cpp/string/multibyte/c32rtomb_1" kind="function"><name>c32rtomb</name></member>
    <member refid="cpp/string/byte/isupper_1" kind="function"><name>isupper</name></member>
    <member refid="cpp/string/wide/wcstof_1" kind="function"><name>wcstod</name></member>
    <member refid="cpp/string/byte/tolower_1" kind="function"><name>tolower</name></member>
    <member refid="cpp/algorithm/sort_heap_1" kind="function"><name>sort_heap</name></member>
    <member refid="cpp/string/byte/isdigit_1" kind="function"><name>isdigit</name></member>
    <member refid="cpp/string/wide/wcslen_1" kind="function"><name>wcslen</name></member>
    <member refid="cpp/string/wide/wmemcmp_1" kind="function"><name>wmemcmp</name></member>
    <member refid="cpp/utility/move_if_noexcept_1" kind="function"><name>move_if_noexcept</name></member>
    <member refid="cpp/utility/declval_1" kind="function"><name>declval</name></member>
    <member refid="cpp/numeric/math/fpclassify_1" kind="function"><name>fpclassify</name></member>
    <member refid="cpp/string/wide/iswupper_1" kind="function"><name>iswupper</name></member>
    <member refid="cpp/numeric/random/rand_1" kind="function"><name>rand</name></member>
    <member refid="cpp/atomic/atomic_compare_exchange_1" kind="function"><name>atomic_compare_exchange_weak_explicit</name></member>
    <member refid="cpp/algorithm/partial_sort_1" kind="function"><name>partial_sort</name></member>
    <member refid="cpp/numeric/math/rint_1" kind="function"><name>llrint</name></member>
    <member refid="cpp/io/c/fclose_1" kind="function"><name>fclose</name></member>
    <member refid="cpp/algorithm/reverse_1" kind="function"><name>reverse</name></member>
    <member refid="cpp/algorithm/partial_sum_1" kind="function"><name>partial_sum</name></member>
    <member refid="cpp/io/manip/showbase_1" kind="function"><name>showbase</name></member>
    <member refid="cpp/io/c/vfwscanf_1" kind="function"><name>vswscanf</name></member>
    <member refid="cpp/numeric/math/atan_1" kind="function"><name>atan</name></member>
    <member refid="cpp/numeric/math/atanh_1" kind="function"><name>atanh</name></member>
    <member refid="cpp/algorithm/iter_swap_1" kind="function"><name>iter_swap</name></member>
    <member refid="cpp/numeric/math/scalbn_1" kind="function"><name>scalbln</name></member>
    <member refid="cpp/algorithm/reverse_copy_1" kind="function"><name>reverse_copy</name></member>
    <member refid="cpp/utility/forward_1" kind="function"><name>forward</name></member>
    <member refid="cpp/io/c/fgetc_1" kind="function"><name>getc</name></member>
    <member refid="cpp/algorithm/equal_range_1" kind="function"><name>equal_range</name></member>
    <member refid="cpp/atomic/atomic_fetch_sub_1" kind="function"><name>atomic_fetch_sub</name></member>
    <member refid="cpp/algorithm/is_partitioned_1" kind="function"><name>is_partitioned</name></member>
    <member refid="cpp/algorithm/next_permutation_1" kind="function"><name>next_permutation</name></member>
    <member refid="cpp/string/byte/isblank_1" kind="function"><name>isblank</name></member>
    <member refid="cpp/io/manip/showpoint_1" kind="function"><name>noshowpoint</name></member>
    <member refid="cpp/numeric/math/atan2_1" kind="function"><name>atan2</name></member>
    <member refid="cpp/numeric/math/nan_1" kind="function"><name>nanf</name></member>
    <member refid="cpp/string/wide/towctrans_1" kind="function"><name>towctrans</name></member>
    <member refid="cpp/io/manip/left_1" kind="function"><name>right</name></member>
    <member refid="cpp/io/c/fputwc_1" kind="function"><name>fputwc</name></member>
    <member refid="cpp/string/byte/strtoul_1" kind="function"><name>strtoul</name></member>
    <member refid="cpp/algorithm/is_heap_1" kind="function"><name>is_heap</name></member>
    <member refid="cpp/io/c/fflush_1" kind="function"><name>fflush</name></member>
    <member refid="cpp/string/byte/strtoimax_1" kind="function"><name>strtoumax</name></member>
    <member refid="cpp/numeric/math/nextafter_1" kind="function"><name>nexttoward</name></member>
    <member refid="cpp/io/manip/unitbuf_1" kind="function"><name>nounitbuf</name></member>
    <member refid="cpp/string/byte/ispunct_1" kind="function"><name>ispunct</name></member>
    <member refid="cpp/io/manip/boolalpha_1" kind="function"><name>noboolalpha</name></member>
    <member refid="cpp/utility/pair/make_pair_1" kind="function"><name>make_pair</name></member>
    <member refid="cpp/string/wide/iswctype_1" kind="function"><name>iswctype</name></member>
    <member refid="cpp/numeric/random/srand_1" kind="function"><name>srand</name></member>
    <member refid="cpp/algorithm/replace_copy_1" kind="function"><name>replace_copy</name></member>
    <member refid="cpp/thread/future/future_category_1" kind="function"><name>future_category</name></member>
    <member refid="cpp/io/manip/resetiosflags_1" kind="function"><name>resetiosflags</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vprintf</name></member>
    <member refid="cpp/chrono/c/gmtime_1" kind="function"><name>gmtime</name></member>
    <member refid="cpp/memory/align_1" kind="function"><name>align</name></member>
    <member refid="cpp/utility/tuple/tuple_cat_1" kind="function"><name>tuple_cat</name></member>
    <member refid="cpp/io/manip/ends_1" kind="function"><name>ends</name></member>
    <member refid="cpp/error/set_terminate_1" kind="function"><name>set_terminate</name></member>
    <member refid="cpp/numeric/math/rint_1" kind="function"><name>lrint</name></member>
    <member refid="cpp/algorithm/all_any_none_of_1" kind="function"><name>none_of</name></member>
    <member refid="cpp/io/c/fwscanf_1" kind="function"><name>wscanf</name></member>
    <member refid="cpp/io/c/fputc_1" kind="function"><name>fputc</name></member>
    <member refid="cpp/io/manip/hex_1" kind="function"><name>dec</name></member>
    <member refid="cpp/string/byte/strcat_1" kind="function"><name>strcat</name></member>
    <member refid="cpp/utility/program/raise_1" kind="function"><name>raise</name></member>
    <member refid="cpp/string/wide/wcsspn_1" kind="function"><name>wcsspn</name></member>
    <member refid="cpp/numeric/math/fabs_1" kind="function"><name>fabs</name></member>
    <member refid="cpp/string/wide/wmemcpy_1" kind="function"><name>wmemcpy</name></member>
    <member refid="cpp/algorithm/copy_n_1" kind="function"><name>copy_n</name></member>
    <member refid="cpp/error/rethrow_if_nested_1" kind="function"><name>rethrow_if_nested</name></member>
    <member refid="cpp/locale/setlocale_1" kind="function"><name>setlocale</name></member>
    <member refid="cpp/memory/addressof_1" kind="function"><name>addressof</name></member>
    <member refid="cpp/memory/c/calloc_1" kind="function"><name>calloc</name></member>
    <member refid="cpp/string/byte/strerror_1" kind="function"><name>strerror</name></member>
    <member refid="cpp/string/byte/strcpy_1" kind="function"><name>strcpy</name></member>
    <member refid="cpp/string/wide/wcstoul_1" kind="function"><name>wcstoull</name></member>
    <member refid="cpp/string/multibyte/c16rtomb_1" kind="function"><name>c16rtomb</name></member>
    <member refid="cpp/numeric/random/generate_canonical_1" kind="function"><name>generate_canonical</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vfprintf</name></member>
    <member refid="cpp/thread/notify_all_at_thread_exit_1" kind="function"><name>notify_all_at_thread_exit</name></member>
    <member refid="cpp/algorithm/rotate_1" kind="function"><name>rotate</name></member>
    <member refid="cpp/error/current_exception_1" kind="function"><name>current_exception</name></member>
    <member refid="cpp/string/byte/strtok_1" kind="function"><name>strtok</name></member>
    <member refid="cpp/string/wide/wcscat_1" kind="function"><name>wcscat</name></member>
    <member refid="cpp/string/byte/strncpy_1" kind="function"><name>strncpy</name></member>
    <member refid="cpp/string/wide/towlower_1" kind="function"><name>towlower</name></member>
    <member refid="cpp/numeric/math/floor_1" kind="function"><name>floor</name></member>
    <member refid="cpp/io/manip/left_1" kind="function"><name>left</name></member>
    <member refid="cpp/io/c/ferror_1" kind="function"><name>ferror</name></member>
    <member refid="cpp/atomic/atomic_load_1" kind="function"><name>atomic_load_explicit</name></member>
    <member refid="cpp/algorithm/swap_1" kind="function"><name>swap</name></member>
    <member refid="cpp/numeric/math/acos_1" kind="function"><name>acos</name></member>
    <member refid="cpp/string/wide/wcscoll_1" kind="function"><name>wcscoll</name></member>
    <member refid="cpp/numeric/math/sqrt_1" kind="function"><name>sqrt</name></member>
    <member refid="cpp/string/multibyte/mbsinit_1" kind="function"><name>mbsinit</name></member>
    <member refid="cpp/algorithm/qsort_1" kind="function"><name>qsort</name></member>
    <member refid="cpp/string/basic_string/stol_1" kind="function"><name>stoll</name></member>
    <member refid="cpp/io/manip/put_money_1" kind="function"><name>put_money</name></member>
    <member refid="cpp/string/wide/wcstoul_1" kind="function"><name>wcstoul</name></member>
    <member refid="cpp/string/wide/wcstol_1" kind="function"><name>wcstol</name></member>
    <member refid="cpp/utility/program/atexit_1" kind="function"><name>atexit</name></member>
    <member refid="cpp/atomic/atomic_fetch_or_1" kind="function"><name>atomic_fetch_or</name></member>
    <member refid="cpp/io/c/rewind_1" kind="function"><name>rewind</name></member>
    <member refid="cpp/string/wide/wcsxfrm_1" kind="function"><name>wcsxfrm</name></member>
    <member refid="cpp/numeric/math/round_1" kind="function"><name>round</name></member>
    <member refid="cpp/io/c/vfwprintf_1" kind="function"><name>vwprintf</name></member>
    <member refid="cpp/algorithm/all_any_none_of_1" kind="function"><name>all_of</name></member>
    <member refid="cpp/algorithm/replace_1" kind="function"><name>replace</name></member>
    <member refid="cpp/numeric/math/remquo_1" kind="function"><name>remquo</name></member>
    <member refid="cpp/io/c/setbuf_1" kind="function"><name>setbuf</name></member>
    <member refid="cpp/string/byte/strncmp_1" kind="function"><name>strncmp</name></member>
    <member refid="cpp/locale/localeconv_1" kind="function"><name>localeconv</name></member>
    <member refid="cpp/string/wide/wctrans_1" kind="function"><name>wctrans</name></member>
    <member refid="cpp/algorithm/all_any_none_of_1" kind="function"><name>any_of</name></member>
    <member refid="cpp/algorithm/equal_1" kind="function"><name>equal</name></member>
    <member refid="cpp/algorithm/max_1" kind="function"><name>max</name></member>
    <member refid="cpp/string/byte/strxfrm_1" kind="function"><name>strxfrm</name></member>
    <member refid="cpp/string/wide/iswxdigit_1" kind="function"><name>iswxdigit</name></member>
    <member refid="cpp/numeric/math/abs_1" kind="function"><name>labs</name></member>
    <member refid="cpp/regex/regex_match_1" kind="function"><name>regex_match</name></member>
    <member refid="cpp/io/c/fputws_1" kind="function"><name>fputws</name></member>
    <member refid="cpp/string/multibyte/wcrtomb_1" kind="function"><name>wcrtomb</name></member>
    <member refid="cpp/io/manip/setprecision_1" kind="function"><name>setprecision</name></member>
    <member refid="cpp/io/c/setvbuf_1" kind="function"><name>setvbuf</name></member>
    <member refid="cpp/regex/regex_replace_1" kind="function"><name>regex_replace</name></member>
    <member refid="cpp/io/c/freopen_1" kind="function"><name>freopen</name></member>
    <member refid="cpp/numeric/math/logb_1" kind="function"><name>logb</name></member>
    <member refid="cpp/string/multibyte/wctob_1" kind="function"><name>wctob</name></member>
    <member refid="cpp/atomic/atomic_load_1" kind="function"><name>atomic_load</name></member>
    <member refid="cpp/algorithm/search_n_1" kind="function"><name>search_n</name></member>
    <member refid="cpp/string/byte/toupper_1" kind="function"><name>toupper</name></member>
    <member refid="cpp/algorithm/move_backward_1" kind="function"><name>move_backward</name></member>
    <member refid="cpp/algorithm/is_sorted_1" kind="function"><name>is_sorted</name></member>
    <member refid="cpp/string/byte/strtoul_1" kind="function"><name>strtoull</name></member>
    <member refid="cpp/string/wide/iswblank_1" kind="function"><name>iswblank</name></member>
    <member refid="cpp/memory/gc/get_pointer_safety_1" kind="function"><name>get_pointer_safety</name></member>
    <member refid="cpp/error/get_unexpected_1" kind="function"><name>get_unexpected</name></member>
    <member refid="cpp/io/c/fscanf_1" kind="function"><name>sscanf</name></member>
    <member refid="cpp/numeric/fenv/feenv_1" kind="function"><name>fesetenv</name></member>
    <member refid="cpp/atomic/atomic_store_1" kind="function"><name>atomic_store_explicit</name></member>
    <member refid="cpp/string/byte/strtof_1" kind="function"><name>strtold</name></member>
    <member refid="cpp/io/c/fread_1" kind="function"><name>fread</name></member>
    <member refid="cpp/string/byte/memchr_1" kind="function"><name>memchr</name></member>
    <member refid="cpp/string/multibyte/btowc_1" kind="function"><name>btowc</name></member>
    <member refid="cpp/algorithm/replace_1" kind="function"><name>replace_if</name></member>
    <member refid="cpp/string/byte/strcoll_1" kind="function"><name>strcoll</name></member>
    <member refid="cpp/io/c/vfprintf_1" kind="function"><name>vsprintf</name></member>
    <member refid="cpp/algorithm/mismatch_1" kind="function"><name>mismatch</name></member>
    <member refid="cpp/io/c/getchar_1" kind="function"><name>getchar</name></member>
    <member refid="cpp/string/byte/islower_1" kind="function"><name>islower</name></member>
    <member refid="cpp/io/c/tmpnam_1" kind="function"><name>tmpnam</name></member>
    <member refid="cpp/numeric/math/nan_1" kind="function"><name>nanl</name></member>
    <member refid="cpp/io/c/fopen_1" kind="function"><name>fopen</name></member>
    <member refid="cpp/algorithm/for_each_1" kind="function"><name>for_each</name></member>
    <member refid="cpp/numeric/fenv/feround_1" kind="function"><name>fegetround</name></member>
    <member refid="cpp/io/c/ungetc_1" kind="function"><name>ungetc</name></member>
    <member refid="cpp/io/manip/left_1" kind="function"><name>internal</name></member>
    <member refid="cpp/io/c/vfwscanf_1" kind="function"><name>vfwscanf</name></member>
    <member refid="cpp/io/c/fgetc_1" kind="function"><name>fgetc</name></member>
    <member refid="cpp/string/wide/wcstof_1" kind="function"><name>wcstof</name></member>
    <member refid="cpp/utility/functional/bind_1" kind="function"><name>bind</name></member>
    <member refid="cpp/io/manip/skipws_1" kind="function"><name>skipws</name></member>
    <member refid="cpp/string/wide/iswprint_1" kind="function"><name>iswprint</name></member>
    <member refid="cpp/string/multibyte/wcstombs_1" kind="function"><name>wcstombs</name></member>
    <member refid="cpp/algorithm/inplace_merge_1" kind="function"><name>inplace_merge</name></member>
    <member refid="cpp/numeric/math/copysign_1" kind="function"><name>copysign</name></member>
    <member refid="cpp/io/c/putwchar_1" kind="function"><name>putwchar</name></member>
    <member refid="cpp/string/wide/wcsstr_1" kind="function"><name>wcsstr</name></member>
    <member refid="cpp/numeric/fenv/feenv_1" kind="function"><name>fegetenv</name></member>
    <member refid="cpp/utility/program/longjmp_1" kind="function"><name>longjmp</name></member>
    <member refid="cpp/string/wide/iswcntrl_1" kind="function"><name>iswcntrl</name></member>
    <member refid="cpp/memory/gc/declare_no_pointers_1" kind="function"><name>declare_no_pointers</name></member>
    <member refid="cpp/numeric/math/isnormal_1" kind="function"><name>isnormal</name></member>
    <member refid="cpp/algorithm/swap_ranges_1" kind="function"><name>swap_ranges</name></member>
    <member refid="cpp/algorithm/minmax_1" kind="function"><name>minmax</name></member>
    <member refid="cpp/io/manip/fixed_1" kind="function"><name>defaultfloat</name></member>
    <member refid="cpp/io/c/rename_1" kind="function"><name>rename</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>snprintf</name></member>
    <member refid="cpp/thread/try_lock_1" kind="function"><name>try_lock</name></member>
    <member refid="cpp/string/basic_string/stoul_1" kind="function"><name>stoul</name></member>
    <member refid="cpp/io/c/fgetpos_1" kind="function"><name>fgetpos</name></member>
    <member refid="cpp/algorithm/partition_copy_1" kind="function"><name>partition_copy</name></member>
    <member refid="cpp/io/c/vfscanf_1" kind="function"><name>vscanf</name></member>
    <member refid="cpp/iterator/front_inserter_1" kind="function"><name>front_inserter</name></member>
    <member refid="cpp/error/get_terminate_1" kind="function"><name>get_terminate</name></member>
    <member refid="cpp/numeric/math/cosh_1" kind="function"><name>cosh</name></member>
    <member refid="cpp/iterator/prev_1" kind="function"><name>prev</name></member>
    <member refid="cpp/string/byte/strchr_1" kind="function"><name>strchr</name></member>
    <member refid="cpp/string/byte/strstr_1" kind="function"><name>strstr</name></member>
    <member refid="cpp/io/c/fprintf_1" kind="function"><name>printf</name></member>
    <member refid="cpp/io/manip/setfill_1" kind="function"><name>setfill</name></member>
    <member refid="cpp/algorithm/inner_product_1" kind="function"><name>inner_product</name></member>
    <member refid="small__vector_8hpp_1a6a0d9efe4f3de0b5046c0afa87556582" kind="function"><name>swap</name></member>
    <member refid="small__vector_8hpp_1ac8164ee2aeb48c22836ad8e3f6c6f067" kind="function"><name>swap</name></member>
  </compound>
  <compound refid="namespacetf" kind="namespace"><name>tf</name>
    <member refid="namespacetf_1ac9f4add8f716ed323b0bdbbc1d89346f" kind="enum"><name>TaskPriority</name></member>
    <member refid="namespacetf_1ac9f4add8f716ed323b0bdbbc1d89346fab89de3b4b81c4facfac906edf29aec8c" kind="enumvalue"><name>HIGH</name></member>
    <member refid="namespacetf_1ac9f4add8f716ed323b0bdbbc1d89346fa1e23852820b9154316c7c06e2b7ba051" kind="enumvalue"><name>NORMAL</name></member>
    <member refid="namespacetf_1ac9f4add8f716ed323b0bdbbc1d89346fa41bc94cbd8eebea13ce0491b2ac11b88" kind="enumvalue"><name>LOW</name></member>
    <member refid="namespacetf_1ac9f4add8f716ed323b0bdbbc1d89346fa26a4b44a837bf97b972628509912b4a5" kind="enumvalue"><name>MAX</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395a" kind="enum"><name>TaskType</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395aae54e6f6ba0c7cbb4eb7a2016e2f17842" kind="enumvalue"><name>PLACEHOLDER</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395aafe6f99ef1ec99efbdc19a9786cf1facc" kind="enumvalue"><name>STATIC</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395aa46be697979903d784a70aeec45eb14ad" kind="enumvalue"><name>SUBFLOW</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395aa9f768c0bb1c3e84ca086a85211e978ac" kind="enumvalue"><name>CONDITION</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395aa1cf5e1f5569acda3c4a88a91c5130a69" kind="enumvalue"><name>MODULE</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395aabe553330beb7b3d994656e0a4e66cd96" kind="enumvalue"><name>ASYNC</name></member>
    <member refid="namespacetf_1a1355048578785a80414707ff308b395aa0db45d2a4141101bdfe48e3314cfbca3" kind="enumvalue"><name>UNDEFINED</name></member>
    <member refid="namespacetf_1a192f7cb0fab2eb6f1c84f6046706435d" kind="enum"><name>ObserverType</name></member>
    <member refid="namespacetf_1a192f7cb0fab2eb6f1c84f6046706435dac19bf39d8838d00eddb556775fa8acce" kind="enumvalue"><name>TFPROF</name></member>
    <member refid="namespacetf_1a192f7cb0fab2eb6f1c84f6046706435da37960509766262569d504f02a0ee986d" kind="enumvalue"><name>CHROME</name></member>
    <member refid="namespacetf_1a192f7cb0fab2eb6f1c84f6046706435da0db45d2a4141101bdfe48e3314cfbca3" kind="enumvalue"><name>UNDEFINED</name></member>
    <member refid="namespacetf_1a32d51425fa23cd0dc3518c16cf3bb6c0" kind="enum"><name>PartitionerType</name></member>
    <member refid="namespacetf_1a32d51425fa23cd0dc3518c16cf3bb6c0afe6f99ef1ec99efbdc19a9786cf1facc" kind="enumvalue"><name>STATIC</name></member>
    <member refid="namespacetf_1a32d51425fa23cd0dc3518c16cf3bb6c0a0fcc90da4811c877ba9f9c12f7d60bc9" kind="enumvalue"><name>DYNAMIC</name></member>
    <member refid="namespacetf_1abb7a11e41fd457f69e7ff45d4c769564" kind="enum"><name>PipeType</name></member>
    <member refid="namespacetf_1abb7a11e41fd457f69e7ff45d4c769564adf13a99b035d6f0bce4f44ab18eec8eb" kind="enumvalue"><name>PARALLEL</name></member>
    <member refid="namespacetf_1abb7a11e41fd457f69e7ff45d4c769564a7b804a28d6154ab8007287532037f1d0" kind="enumvalue"><name>SERIAL</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132e" kind="enum"><name>cudaTaskType</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132eaba2b45bdc11e2a4a6e86aab2ac693cbb" kind="enumvalue"><name>EMPTY</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132eab9361011891280a44d85b967739cc6a5" kind="enumvalue"><name>HOST</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132ea41d4dbfd78ceea21abb0ecb03c3cc921" kind="enumvalue"><name>MEMSET</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132eac5d10cc70cce96265c445f14e7f5aba4" kind="enumvalue"><name>MEMCPY</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132ea35c10219c45ccfb5b07444fd7e17214c" kind="enumvalue"><name>KERNEL</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132ea46be697979903d784a70aeec45eb14ad" kind="enumvalue"><name>SUBFLOW</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132eab72f08e0732365cac9599b5c42157bf9" kind="enumvalue"><name>CAPTURE</name></member>
    <member refid="namespacetf_1afebc56ae6d5765010d0dd13a5f04132ea0db45d2a4141101bdfe48e3314cfbca3" kind="enumvalue"><name>UNDEFINED</name></member>
    <member refid="namespacetf_1a8cff4bbd797dde4dfab096c3cc657833" kind="typedef"><name>observer_stamp_t</name></member>
    <member refid="namespacetf_1a66b72776c788898aee9e132b0ea9b405" kind="typedef"><name>DefaultPartitioner</name></member>
    <member refid="namespacetf_1a0e267ab3e1baeb1962f3b3a374de9553" kind="typedef"><name>cudaDefaultExecutionPolicy</name></member>
    <member refid="namespacetf_1ad3a41adc2499a9519da3e77dc3e9849c" kind="variable"><name>is_task_params_v</name></member>
    <member refid="namespacetf_1a6e7c9182ac3f60e339a7497c16633d28" kind="variable"><name>node_pool</name></member>
    <member refid="namespacetf_1a872cf263ab68abc7c3180710fb792528" kind="variable"><name>TASK_TYPES</name></member>
    <member refid="namespacetf_1aefeb96086f4a99f0e58a0f321012a52c" kind="variable"><name>is_subflow_task_v</name></member>
    <member refid="namespacetf_1a00ca2fc2de0e679a7d9b8039340343df" kind="variable"><name>is_condition_task_v</name></member>
    <member refid="namespacetf_1a78c40dc8776735b0f2c27cd446481aff" kind="variable"><name>is_multi_condition_task_v</name></member>
    <member refid="namespacetf_1a11fc9c98eb3a0d3a9aa55598b1f4d614" kind="variable"><name>is_static_task_v</name></member>
    <member refid="namespacetf_1a73c20705fc54763f195a00b6e626e301" kind="variable"><name>is_partitioner_v</name></member>
    <member refid="namespacetf_1aea9fe5c87d4439816239b5af6ebeec55" kind="function"><name>capacity_in_bytes</name></member>
    <member refid="namespacetf_1a9ca58dc6c666698cc7373eb0262140ef" kind="function"><name>to_string</name></member>
    <member refid="namespacetf_1ad216aea4d0f648e149e47374ad015b1f" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="namespacetf_1aa3fc0699b2c2b8f2f76bb39f91be1acb" kind="function"><name>to_string</name></member>
    <member refid="namespacetf_1a8975fa5762088789adb0b60f38208309" kind="function"><name>make_data_pipe</name></member>
    <member refid="namespacetf_1abffa70155a5f160b7ceb86ee52ab2136" kind="function"><name>cuda_get_num_devices</name></member>
    <member refid="namespacetf_1a235f5a9ce203d538eec1f4114221d473" kind="function"><name>cuda_get_device</name></member>
    <member refid="namespacetf_1ade2938289fa49aafc9b2b7b090deaa22" kind="function"><name>cuda_set_device</name></member>
    <member refid="namespacetf_1a403b679694f4c85c857163b47e84d566" kind="function"><name>cuda_get_device_property</name></member>
    <member refid="namespacetf_1a0e82b8a929e12349240276e34ec9f8c8" kind="function"><name>cuda_get_device_property</name></member>
    <member refid="namespacetf_1aff8073c78daa741df76b530a0e602287" kind="function"><name>cuda_dump_device_property</name></member>
    <member refid="namespacetf_1abf813f7ac4249d1b752d1b724f970deb" kind="function"><name>cuda_get_device_max_threads_per_block</name></member>
    <member refid="namespacetf_1af8184bb128c446fe383315f3dc15acf6" kind="function"><name>cuda_get_device_max_x_dim_per_block</name></member>
    <member refid="namespacetf_1a9aba5f29135b9da29015c2a367ab1d70" kind="function"><name>cuda_get_device_max_y_dim_per_block</name></member>
    <member refid="namespacetf_1a5580f59e633625b2f344bbf477d17c2f" kind="function"><name>cuda_get_device_max_z_dim_per_block</name></member>
    <member refid="namespacetf_1a597579c8a9ab31244418e30a5aa74491" kind="function"><name>cuda_get_device_max_x_dim_per_grid</name></member>
    <member refid="namespacetf_1a91d5c1609a7542949dd56d08b7c4c645" kind="function"><name>cuda_get_device_max_y_dim_per_grid</name></member>
    <member refid="namespacetf_1a0373e32a20c7fc90c4f0461ee41bb918" kind="function"><name>cuda_get_device_max_z_dim_per_grid</name></member>
    <member refid="namespacetf_1aeca46ac171c4941a75aafddfe7546bfa" kind="function"><name>cuda_get_device_max_shm_per_block</name></member>
    <member refid="namespacetf_1aea1b2af1073496f047d6fb9984cff4f1" kind="function"><name>cuda_get_device_warp_size</name></member>
    <member refid="namespacetf_1a1fb03793a6b8705026b80ef87599d4d5" kind="function"><name>cuda_get_device_compute_capability_major</name></member>
    <member refid="namespacetf_1a71f5177665f4f7e18984ccc57d625602" kind="function"><name>cuda_get_device_compute_capability_minor</name></member>
    <member refid="namespacetf_1ad389294b4d1c14219d8d098f796e27c5" kind="function"><name>cuda_get_device_unified_addressing</name></member>
    <member refid="namespacetf_1a43ac57f0eca3aa83c04bec3c4da9ab82" kind="function"><name>cuda_get_driver_version</name></member>
    <member refid="namespacetf_1a31258ad089c6f847c8cd636cd72d6949" kind="function"><name>cuda_get_runtime_version</name></member>
    <member refid="namespacetf_1a1effcf929b7e488925f9e12d74c8c62b" kind="function"><name>cuda_get_free_mem</name></member>
    <member refid="namespacetf_1a58bbc8d5d955582d6b5f7fdac51d010b" kind="function"><name>cuda_get_total_mem</name></member>
    <member refid="namespacetf_1a6f04fd3168c45eeb2dffb223e5c81e45" kind="function"><name>cuda_malloc_device</name></member>
    <member refid="namespacetf_1ab9b68b8f4336f13b190d573969cb1cf7" kind="function"><name>cuda_malloc_device</name></member>
    <member refid="namespacetf_1a8eed05685b030fc44703213a4ef86f11" kind="function"><name>cuda_malloc_shared</name></member>
    <member refid="namespacetf_1ac7a8fe7456b888d6072ba94783c5003c" kind="function"><name>cuda_free</name></member>
    <member refid="namespacetf_1ae174a3a49b91ef21554dac16806f0d72" kind="function"><name>cuda_free</name></member>
    <member refid="namespacetf_1aa4266474b921f8ed7d9ec8071fded2a4" kind="function"><name>cuda_memcpy_async</name></member>
    <member refid="namespacetf_1a6615554d2954e895755411ee444d9760" kind="function"><name>cuda_memset_async</name></member>
    <member refid="namespacetf_1af21fe1eaf680dbddc0503ef5d1a9a664" kind="function"><name>to_string</name></member>
    <member refid="namespacetf_1a9cca69f61d792afb3ad501b703d795c1" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="namespacetf_1a2ff1cf81426c856fc6db1f6ead47878f" kind="function"><name>cuda_single_task</name></member>
    <member refid="namespacetf_1a7c449cec0b93503b8280d05add35e9f4" kind="function"><name>cuda_for_each</name></member>
    <member refid="namespacetf_1a01ad7ce62fa6f42f2f2fbff3659b7884" kind="function"><name>cuda_for_each_index</name></member>
    <member refid="namespacetf_1a3075c7a1f4d08fefefb415b0e2ac58fb" kind="function"><name>cuda_single_task</name></member>
    <member refid="namespacetf_1a3ed764530620a419e3400e1f9ab6c956" kind="function"><name>cuda_transform</name></member>
    <member refid="namespacetf_1abdcb5b755f7ace2aa452541d5bf93b5f" kind="function"><name>cuda_transform</name></member>
    <member refid="namespacetf_1a8a872d2a0ac73a676713cb5be5aa688c" kind="function"><name>cuda_reduce</name></member>
    <member refid="namespacetf_1a492e8410db032a0273a99dd905486161" kind="function"><name>cuda_uninitialized_reduce</name></member>
    <member refid="namespacetf_1a4463d06240d608bc31d8b3546a851e4e" kind="function"><name>cuda_transform_reduce</name></member>
    <member refid="namespacetf_1aa451668b7a0a3abf385cf2abebed8962" kind="function"><name>cuda_uninitialized_transform_reduce</name></member>
    <member refid="namespacetf_1a2e1b44c84a09e0a8495a611cb9a7ea40" kind="function"><name>cuda_inclusive_scan</name></member>
    <member refid="namespacetf_1afa4aa760ddb6efbda1b9bab505ad5baf" kind="function"><name>cuda_transform_inclusive_scan</name></member>
    <member refid="namespacetf_1aeb391c40120844318fd715b8c3a716bb" kind="function"><name>cuda_exclusive_scan</name></member>
    <member refid="namespacetf_1a2e739895c1c73538967af060ca714366" kind="function"><name>cuda_transform_exclusive_scan</name></member>
    <member refid="namespacetf_1aa84d4c68d2cbe9f6efc4a1eb1a115458" kind="function"><name>cuda_merge_by_key</name></member>
    <member refid="namespacetf_1a37ec481149c2f01669353033d75ed72a" kind="function"><name>cuda_merge</name></member>
    <member refid="namespacetf_1a9c69906a4dfd1e2d0cd7ed496d29dafd" kind="function"><name>cuda_sort_buffer_size</name></member>
    <member refid="namespacetf_1a3461b9179221dd7230ce2a0e45156c7f" kind="function"><name>cuda_sort_by_key</name></member>
    <member refid="namespacetf_1a06804cb1598e965febc7bd35fc0fbbb0" kind="function"><name>cuda_sort</name></member>
    <member refid="namespacetf_1a5f9dabd7c5d0fa5166cf76d9fa5a038e" kind="function"><name>cuda_find_if</name></member>
    <member refid="namespacetf_1a572c13198191c46765264f8afabe2e9f" kind="function"><name>cuda_min_element</name></member>
    <member refid="namespacetf_1a3fc577fd0a8f127770bcf68bc56c073e" kind="function"><name>cuda_max_element</name></member>
    <member refid="namespacetf_1a30fa078dcf625e9eada5a95af1467588" kind="function"><name>version</name></member>
  </compound>
  <compound refid="namespacetf_1_1detail" kind="namespace"><name>tf::detail</name>
    <member refid="scan_8hpp_1a1f08990983d8305f1592fee1a3fdc593" kind="enum"><name>cudaScanType</name></member>
    <member refid="scan_8hpp_1a1f08990983d8305f1592fee1a3fdc593af45c3a0bb3687ed8e221253b3fd4a2ce" kind="enumvalue"><name>EXCLUSIVE</name></member>
    <member refid="scan_8hpp_1a1f08990983d8305f1592fee1a3fdc593a572d795e2d044f895cc511e5c05030e5" kind="enumvalue"><name>INCLUSIVE</name></member>
    <member refid="merge_8hpp_1a93988a64371309e28f815e1266b875f9" kind="enum"><name>cudaMergeBoundType</name></member>
    <member refid="merge_8hpp_1a93988a64371309e28f815e1266b875f9aa7c48ba367e019d004bfb0239b85f2b3" kind="enumvalue"><name>LOWER</name></member>
    <member refid="merge_8hpp_1a93988a64371309e28f815e1266b875f9a9e43f5291e6fcb2ad99c8e3f91acd179" kind="enumvalue"><name>UPPER</name></member>
    <member refid="scan_8hpp_1acb48d657669121bb9dfd45662e5bf9e1" kind="variable"><name>cudaScanRecursionThreshold</name></member>
    <member refid="small__vector_8hpp_1af7219c0a48eb7108171068b23dd93c92" kind="function"><name>NextCapacity</name></member>
    <member refid="for__each_8hpp_1a25cd7b4ecddff9e32d577eba0f8455bb" kind="function"><name>cuda_for_each_kernel</name></member>
    <member refid="for__each_8hpp_1aa5625b737f69747c9fe334fc91b9dcb2" kind="function"><name>cuda_for_each_index_kernel</name></member>
    <member refid="transform_8hpp_1ac3c389313dfd125f579cd879bacb5b81" kind="function"><name>cuda_transform_kernel</name></member>
    <member refid="transform_8hpp_1a9b628fdc2171542fc80538207da90f76" kind="function"><name>cuda_transform_kernel</name></member>
    <member refid="reduce_8hpp_1a9b9598d1760f0473831ba440e2334fc3" kind="function"><name>cuda_reduce_kernel</name></member>
    <member refid="reduce_8hpp_1ab2081cd1728759054a34c21a16453db6" kind="function"><name>cuda_reduce_loop</name></member>
    <member refid="reduce_8hpp_1a7f47a6f1da83330ac06a00b85a88c556" kind="function"><name>cuda_uninitialized_reduce_kernel</name></member>
    <member refid="reduce_8hpp_1a6694b88dc343d87df2104809002583cc" kind="function"><name>cuda_uninitialized_reduce_loop</name></member>
    <member refid="scan_8hpp_1a2c9669b414231e12f66e9d40ca9ae3a3" kind="function"><name>cuda_single_pass_scan</name></member>
    <member refid="scan_8hpp_1a10be6941d3e42a5583d07a092a7b083d" kind="function"><name>cuda_scan_loop</name></member>
    <member refid="merge_8hpp_1ae9d3db5c9457ebec7cbdd3a3d8c65e94" kind="function"><name>cuda_merge_path</name></member>
    <member refid="merge_8hpp_1afc818e3bceee479b5dc1af7f0e6da282" kind="function"><name>cuda_merge_path</name></member>
    <member refid="merge_8hpp_1ae27cfa73d1f4b90114cd513e98c56d62" kind="function"><name>cuda_merge_predicate</name></member>
    <member refid="merge_8hpp_1a9c104811415e59c6f7116eb2553d656e" kind="function"><name>cuda_compute_merge_range</name></member>
    <member refid="merge_8hpp_1a433a26ef6a2aa8e1d737fea93a42ecf4" kind="function"><name>cuda_load_two_streams_reg</name></member>
    <member refid="merge_8hpp_1a87f27d6553efe6c32e4eaef800d2787c" kind="function"><name>load_two_streams_reg</name></member>
    <member refid="merge_8hpp_1a6da5d76af53a630241f6aade1bf76969" kind="function"><name>cuda_load_two_streams_shared</name></member>
    <member refid="merge_8hpp_1afefa562dcaa4b71ace44ee6b4be764d6" kind="function"><name>cuda_gather_two_streams_strided</name></member>
    <member refid="merge_8hpp_1a9f8cf7550f2b00d99ffa12aa30374237" kind="function"><name>cuda_gather_two_streams_strided</name></member>
    <member refid="merge_8hpp_1ac4e1e83b946b3ef78e5dcb3e9bfc3c48" kind="function"><name>cuda_transfer_two_streams_strided</name></member>
    <member refid="merge_8hpp_1a9d4d00a3dbc0158eac24e4603548bdbd" kind="function"><name>cuda_serial_merge</name></member>
    <member refid="merge_8hpp_1a79b4c5f2bace6ae958abd8573e00a849" kind="function"><name>block_merge_from_mem</name></member>
    <member refid="merge_8hpp_1a9a1b1d78a16e27a208e90d75d4885f05" kind="function"><name>cuda_merge_path_partitions</name></member>
    <member refid="merge_8hpp_1a9a1d50803593cc703ed79f2baf9cfa78" kind="function"><name>cuda_merge_loop</name></member>
    <member refid="sort_8hpp_1a95a5212f3d79eb1bba3ca3f8e373ae16" kind="function"><name>cuda_clz</name></member>
    <member refid="sort_8hpp_1a9a76c046987683e12f4a4381d1559a69" kind="function"><name>cuda_find_log2</name></member>
    <member refid="sort_8hpp_1a899f77e74e47867dac8c4eb08b92577e" kind="function"><name>cuda_odd_even_sort</name></member>
    <member refid="sort_8hpp_1ad452d61656e6301ef16e8241f05c8918" kind="function"><name>cuda_odd_even_sort</name></member>
    <member refid="sort_8hpp_1a2b01469cc11053017b1cfea2a6409057" kind="function"><name>cuda_out_of_range_flags</name></member>
    <member refid="sort_8hpp_1af2d7d0e939a7d1a07ced94221a24683c" kind="function"><name>cuda_compute_merge_sort_frame</name></member>
    <member refid="sort_8hpp_1a1a8d810065126154d47114e93bbfea57" kind="function"><name>cuda_compute_merge_sort_range</name></member>
    <member refid="sort_8hpp_1a4705874f6abf58283ecae02f60cdf8d2" kind="function"><name>cuda_compute_merge_sort_range</name></member>
    <member refid="sort_8hpp_1ab4d357fb63d82334ea784ee72beaf600" kind="function"><name>cuda_merge_sort_partitions</name></member>
    <member refid="sort_8hpp_1a1d70c013b280d4f811275e892af15c18" kind="function"><name>merge_sort_loop</name></member>
    <member refid="find_8hpp_1a3941b09790867beb42f502c08e08b908" kind="function"><name>cuda_find_if_loop</name></member>
    <member refid="find_8hpp_1a72820903215a409e1e3d47a073579918" kind="function"><name>cuda_min_element_loop</name></member>
    <member refid="find_8hpp_1a442fbc4beb897580a46164147d7db2c9" kind="function"><name>cuda_max_element_loop</name></member>
  </compound>
  <compound refid="algorithms_8dox" kind="file"><name>algorithms.dox</name>
  </compound>
  <compound refid="async__task_8hpp" kind="file"><name>async_task.hpp</name>
  </compound>
  <compound refid="async__tasking_8dox" kind="file"><name>async_tasking.dox</name>
  </compound>
  <compound refid="benchmark__taskflow_8dox" kind="file"><name>benchmark_taskflow.dox</name>
  </compound>
  <compound refid="cancellation_8dox" kind="file"><name>cancellation.dox</name>
  </compound>
  <compound refid="codeofconduct_8dox" kind="file"><name>codeofconduct.dox</name>
  </compound>
  <compound refid="composable__tasking_8dox" kind="file"><name>composable_tasking.dox</name>
  </compound>
  <compound refid="conditional__tasking_8dox" kind="file"><name>conditional_tasking.dox</name>
  </compound>
  <compound refid="contributing_8dox" kind="file"><name>contributing.dox</name>
  </compound>
  <compound refid="contributors_8dox" kind="file"><name>contributors.dox</name>
  </compound>
  <compound refid="Cookbook_8dox" kind="file"><name>Cookbook.dox</name>
  </compound>
  <compound refid="critical_8hpp" kind="file"><name>critical.hpp</name>
  </compound>
  <compound refid="cuda__capturer_8hpp" kind="file"><name>cuda_capturer.hpp</name>
  </compound>
  <compound refid="cuda__compile_8dox" kind="file"><name>cuda_compile.dox</name>
  </compound>
  <compound refid="cuda__device_8hpp" kind="file"><name>cuda_device.hpp</name>
  </compound>
  <compound refid="cuda__execution__policy_8hpp" kind="file"><name>cuda_execution_policy.hpp</name>
  </compound>
  <compound refid="cuda__memory_8hpp" kind="file"><name>cuda_memory.hpp</name>
  </compound>
  <compound refid="cuda__optimizer_8hpp" kind="file"><name>cuda_optimizer.hpp</name>
  </compound>
  <compound refid="cuda__std__algorithms_8dox" kind="file"><name>cuda_std_algorithms.dox</name>
  </compound>
  <compound refid="cuda__std__execution__policy_8dox" kind="file"><name>cuda_std_execution_policy.dox</name>
  </compound>
  <compound refid="cuda__std__find_8dox" kind="file"><name>cuda_std_find.dox</name>
  </compound>
  <compound refid="cuda__std__for__each_8dox" kind="file"><name>cuda_std_for_each.dox</name>
  </compound>
  <compound refid="cuda__std__merge_8dox" kind="file"><name>cuda_std_merge.dox</name>
  </compound>
  <compound refid="cuda__std__reduce_8dox" kind="file"><name>cuda_std_reduce.dox</name>
  </compound>
  <compound refid="cuda__std__scan_8dox" kind="file"><name>cuda_std_scan.dox</name>
  </compound>
  <compound refid="cuda__std__single__task_8dox" kind="file"><name>cuda_std_single_task.dox</name>
  </compound>
  <compound refid="cuda__std__transform_8dox" kind="file"><name>cuda_std_transform.dox</name>
  </compound>
  <compound refid="cuda__stream_8hpp" kind="file"><name>cuda_stream.hpp</name>
  </compound>
  <compound refid="cuda__task_8hpp" kind="file"><name>cuda_task.hpp</name>
  </compound>
  <compound refid="cudaflow_8hpp" kind="file"><name>cudaflow.hpp</name>
  </compound>
  <compound refid="cudaflow__algorithms_8dox" kind="file"><name>cudaflow_algorithms.dox</name>
  </compound>
  <compound refid="cudaflow__for__each_8dox" kind="file"><name>cudaflow_for_each.dox</name>
  </compound>
  <compound refid="cudaflow__single__task_8dox" kind="file"><name>cudaflow_single_task.dox</name>
  </compound>
  <compound refid="cudaflow__transform_8dox" kind="file"><name>cudaflow_transform.dox</name>
  </compound>
  <compound refid="data__pipeline_8dox" kind="file"><name>data_pipeline.dox</name>
  </compound>
  <compound refid="data__pipeline_8hpp" kind="file"><name>data_pipeline.hpp</name>
  </compound>
  <compound refid="dependent__async__tasking_8dox" kind="file"><name>dependent_async_tasking.dox</name>
  </compound>
  <compound refid="dreamplace_8dox" kind="file"><name>dreamplace.dox</name>
  </compound>
  <compound refid="examples_8dox" kind="file"><name>examples.dox</name>
  </compound>
  <compound refid="exception_8dox" kind="file"><name>exception.dox</name>
  </compound>
  <compound refid="executor_8dox" kind="file"><name>executor.dox</name>
  </compound>
  <compound refid="executor_8hpp" kind="file"><name>executor.hpp</name>
  </compound>
  <compound refid="FAQ_8dox" kind="file"><name>FAQ.dox</name>
  </compound>
  <compound refid="fibonacci_8dox" kind="file"><name>fibonacci.dox</name>
  </compound>
  <compound refid="find_8dox" kind="file"><name>find.dox</name>
  </compound>
  <compound refid="find_8hpp" kind="file"><name>find.hpp</name>
  </compound>
  <compound refid="flipcoins_8dox" kind="file"><name>flipcoins.dox</name>
  </compound>
  <compound refid="flow__builder_8hpp" kind="file"><name>flow_builder.hpp</name>
  </compound>
  <compound refid="for__each_8dox" kind="file"><name>for_each.dox</name>
  </compound>
  <compound refid="for__each_8hpp" kind="file"><name>for_each.hpp</name>
  </compound>
  <compound refid="governance_8dox" kind="file"><name>governance.dox</name>
  </compound>
  <compound refid="gpu__tasking__cudaflow_8dox" kind="file"><name>gpu_tasking_cudaflow.dox</name>
  </compound>
  <compound refid="gpu__tasking__cudaflow__capturer_8dox" kind="file"><name>gpu_tasking_cudaflow_capturer.dox</name>
  </compound>
  <compound refid="graph_8hpp" kind="file"><name>graph.hpp</name>
  </compound>
  <compound refid="graph__pipeline_8dox" kind="file"><name>graph_pipeline.dox</name>
  </compound>
  <compound refid="graph__traversal_8dox" kind="file"><name>graph_traversal.dox</name>
  </compound>
  <compound refid="guidelines_8dox" kind="file"><name>guidelines.dox</name>
  </compound>
  <compound refid="header_8html" kind="file"><name>header.html</name>
  </compound>
  <compound refid="install_8dox" kind="file"><name>install.dox</name>
  </compound>
  <compound refid="kmeans_8dox" kind="file"><name>kmeans.dox</name>
  </compound>
  <compound refid="kmeans__cudaflow_8dox" kind="file"><name>kmeans_cudaflow.dox</name>
  </compound>
  <compound refid="matrix__multiplication_8dox" kind="file"><name>matrix_multiplication.dox</name>
  </compound>
  <compound refid="matrix__multiplication__cudaflow_8dox" kind="file"><name>matrix_multiplication_cudaflow.dox</name>
  </compound>
  <compound refid="merge_8hpp" kind="file"><name>merge.hpp</name>
  </compound>
  <compound refid="motivation_8dox" kind="file"><name>motivation.dox</name>
  </compound>
  <compound refid="observer_8hpp" kind="file"><name>observer.hpp</name>
  </compound>
  <compound refid="opentimer_8dox" kind="file"><name>opentimer.dox</name>
  </compound>
  <compound refid="partitioner_8dox" kind="file"><name>partitioner.dox</name>
  </compound>
  <compound refid="partitioner_8hpp" kind="file"><name>partitioner.hpp</name>
  </compound>
  <compound refid="pipeline_8dox" kind="file"><name>pipeline.dox</name>
  </compound>
  <compound refid="pipeline_8hpp" kind="file"><name>pipeline.hpp</name>
  </compound>
  <compound refid="pipeline__with__token__dependencies_8dox" kind="file"><name>pipeline_with_token_dependencies.dox</name>
  </compound>
  <compound refid="prioritized__tasking_8dox" kind="file"><name>prioritized_tasking.dox</name>
  </compound>
  <compound refid="profiler_8dox" kind="file"><name>profiler.dox</name>
  </compound>
  <compound refid="QuickStart_8dox" kind="file"><name>QuickStart.dox</name>
  </compound>
  <compound refid="reduce_8dox" kind="file"><name>reduce.dox</name>
  </compound>
  <compound refid="reduce_8hpp" kind="file"><name>reduce.hpp</name>
  </compound>
  <compound refid="references_8dox" kind="file"><name>references.dox</name>
  </compound>
  <compound refid="release-1_8x_8x_8dox" kind="file"><name>release-1.x.x.dox</name>
  </compound>
  <compound refid="release-2_80_80_8dox" kind="file"><name>release-2.0.0.dox</name>
  </compound>
  <compound refid="release-2_81_80_8dox" kind="file"><name>release-2.1.0.dox</name>
  </compound>
  <compound refid="release-2_82_80_8dox" kind="file"><name>release-2.2.0.dox</name>
  </compound>
  <compound refid="release-2_83_80_8dox" kind="file"><name>release-2.3.0.dox</name>
  </compound>
  <compound refid="release-2_83_81_8dox" kind="file"><name>release-2.3.1.dox</name>
  </compound>
  <compound refid="release-2_84_80_8dox" kind="file"><name>release-2.4.0.dox</name>
  </compound>
  <compound refid="release-2_85_80_8dox" kind="file"><name>release-2.5.0.dox</name>
  </compound>
  <compound refid="release-2_86_80_8dox" kind="file"><name>release-2.6.0.dox</name>
  </compound>
  <compound refid="release-2_87_80_8dox" kind="file"><name>release-2.7.0.dox</name>
  </compound>
  <compound refid="release-3_80_80_8dox" kind="file"><name>release-3.0.0.dox</name>
  </compound>
  <compound refid="release-3_81_80_8dox" kind="file"><name>release-3.1.0.dox</name>
  </compound>
  <compound refid="release-3_82_80_8dox" kind="file"><name>release-3.2.0.dox</name>
  </compound>
  <compound refid="release-3_83_80_8dox" kind="file"><name>release-3.3.0.dox</name>
  </compound>
  <compound refid="release-3_84_80_8dox" kind="file"><name>release-3.4.0.dox</name>
  </compound>
  <compound refid="release-3_85_80_8dox" kind="file"><name>release-3.5.0.dox</name>
  </compound>
  <compound refid="release-3_86_80_8dox" kind="file"><name>release-3.6.0.dox</name>
  </compound>
  <compound refid="release-3_87_80_8dox" kind="file"><name>release-3.7.0.dox</name>
  </compound>
  <compound refid="release-3_88_80_8dox" kind="file"><name>release-3.8.0.dox</name>
  </compound>
  <compound refid="release-roadmap_8dox" kind="file"><name>release-roadmap.dox</name>
  </compound>
  <compound refid="releases_8dox" kind="file"><name>releases.dox</name>
  </compound>
  <compound refid="rules_8dox" kind="file"><name>rules.dox</name>
  </compound>
  <compound refid="runtime__tasking_8dox" kind="file"><name>runtime_tasking.dox</name>
  </compound>
  <compound refid="scalable__pipeline_8dox" kind="file"><name>scalable_pipeline.dox</name>
  </compound>
  <compound refid="scan_8dox" kind="file"><name>scan.dox</name>
  </compound>
  <compound refid="scan_8hpp" kind="file"><name>scan.hpp</name>
  </compound>
  <compound refid="semaphore_8dox" kind="file"><name>semaphore.dox</name>
  </compound>
  <compound refid="semaphore_8hpp" kind="file"><name>semaphore.hpp</name>
  </compound>
  <compound refid="small__vector_8hpp" kind="file"><name>small_vector.hpp</name>
  </compound>
  <compound refid="sort_8dox" kind="file"><name>sort.dox</name>
  </compound>
  <compound refid="sort_8hpp" kind="file"><name>sort.hpp</name>
  </compound>
  <compound refid="static__tasking_8dox" kind="file"><name>static_tasking.dox</name>
  </compound>
  <compound refid="subflow__tasking_8dox" kind="file"><name>subflow_tasking.dox</name>
  </compound>
  <compound refid="task_8hpp" kind="file"><name>task.hpp</name>
  </compound>
  <compound refid="core_2taskflow_8hpp" kind="file"><name>core/taskflow.hpp</name>
  </compound>
  <compound refid="taskflow_8hpp" kind="file"><name>taskflow.hpp</name>
  </compound>
  <compound refid="taskflow__pipeline_8dox" kind="file"><name>taskflow_pipeline.dox</name>
  </compound>
  <compound refid="team_8dox" kind="file"><name>team.dox</name>
  </compound>
  <compound refid="text__pipeline_8dox" kind="file"><name>text_pipeline.dox</name>
  </compound>
  <compound refid="transform_8dox" kind="file"><name>transform.dox</name>
  </compound>
  <compound refid="transform_8hpp" kind="file"><name>transform.hpp</name>
  </compound>
  <compound refid="tsq_8hpp" kind="file"><name>tsq.hpp</name>
  </compound>
  <compound refid="usecases_8dox" kind="file"><name>usecases.dox</name>
  </compound>
  <compound refid="wavefront_8dox" kind="file"><name>wavefront.dox</name>
  </compound>
  <compound refid="worker_8hpp" kind="file"><name>worker.hpp</name>
  </compound>
  <compound refid="Releases" kind="page"><name>Releases</name>
  </compound>
  <compound refid="release-roadmap" kind="page"><name>release-roadmap</name>
  </compound>
  <compound refid="release-3-8-0" kind="page"><name>release-3-8-0</name>
  </compound>
  <compound refid="release-3-7-0" kind="page"><name>release-3-7-0</name>
  </compound>
  <compound refid="release-3-6-0" kind="page"><name>release-3-6-0</name>
  </compound>
  <compound refid="release-3-5-0" kind="page"><name>release-3-5-0</name>
  </compound>
  <compound refid="release-3-4-0" kind="page"><name>release-3-4-0</name>
  </compound>
  <compound refid="release-3-3-0" kind="page"><name>release-3-3-0</name>
  </compound>
  <compound refid="release-3-2-0" kind="page"><name>release-3-2-0</name>
  </compound>
  <compound refid="release-3-1-0" kind="page"><name>release-3-1-0</name>
  </compound>
  <compound refid="release-3-0-0" kind="page"><name>release-3-0-0</name>
  </compound>
  <compound refid="release-2-7-0" kind="page"><name>release-2-7-0</name>
  </compound>
  <compound refid="release-2-6-0" kind="page"><name>release-2-6-0</name>
  </compound>
  <compound refid="release-2-5-0" kind="page"><name>release-2-5-0</name>
  </compound>
  <compound refid="release-2-4-0" kind="page"><name>release-2-4-0</name>
  </compound>
  <compound refid="release-2-3-1" kind="page"><name>release-2-3-1</name>
  </compound>
  <compound refid="release-2-3-0" kind="page"><name>release-2-3-0</name>
  </compound>
  <compound refid="release-2-2-0" kind="page"><name>release-2-2-0</name>
  </compound>
  <compound refid="release-2-1-0" kind="page"><name>release-2-1-0</name>
  </compound>
  <compound refid="release-2-0-0" kind="page"><name>release-2-0-0</name>
  </compound>
  <compound refid="release-1-x-x" kind="page"><name>release-1-x-x</name>
  </compound>
  <compound refid="install" kind="page"><name>install</name>
  </compound>
  <compound refid="CompileTaskflowWithCUDA" kind="page"><name>CompileTaskflowWithCUDA</name>
  </compound>
  <compound refid="BenchmarkTaskflow" kind="page"><name>BenchmarkTaskflow</name>
  </compound>
  <compound refid="Cookbook" kind="page"><name>Cookbook</name>
  </compound>
  <compound refid="ProjectMotivation" kind="page"><name>ProjectMotivation</name>
  </compound>
  <compound refid="StaticTasking" kind="page"><name>StaticTasking</name>
  </compound>
  <compound refid="ExecuteTaskflow" kind="page"><name>ExecuteTaskflow</name>
  </compound>
  <compound refid="SubflowTasking" kind="page"><name>SubflowTasking</name>
  </compound>
  <compound refid="ConditionalTasking" kind="page"><name>ConditionalTasking</name>
  </compound>
  <compound refid="ComposableTasking" kind="page"><name>ComposableTasking</name>
  </compound>
  <compound refid="RuntimeTasking" kind="page"><name>RuntimeTasking</name>
  </compound>
  <compound refid="PrioritizedTasking" kind="page"><name>PrioritizedTasking</name>
  </compound>
  <compound refid="LimitTheMaximumConcurrency" kind="page"><name>LimitTheMaximumConcurrency</name>
  </compound>
  <compound refid="AsyncTasking" kind="page"><name>AsyncTasking</name>
  </compound>
  <compound refid="DependentAsyncTasking" kind="page"><name>DependentAsyncTasking</name>
  </compound>
  <compound refid="ExceptionHandling" kind="page"><name>ExceptionHandling</name>
  </compound>
  <compound refid="GPUTaskingcudaFlow" kind="page"><name>GPUTaskingcudaFlow</name>
  </compound>
  <compound refid="GPUTaskingcudaFlowCapturer" kind="page"><name>GPUTaskingcudaFlowCapturer</name>
  </compound>
  <compound refid="RequestCancellation" kind="page"><name>RequestCancellation</name>
  </compound>
  <compound refid="Profiler" kind="page"><name>Profiler</name>
  </compound>
  <compound refid="PartitioningAlgorithm" kind="page"><name>PartitioningAlgorithm</name>
  </compound>
  <compound refid="Algorithms" kind="page"><name>Algorithms</name>
  </compound>
  <compound refid="ParallelIterations" kind="page"><name>ParallelIterations</name>
  </compound>
  <compound refid="ParallelTransforms" kind="page"><name>ParallelTransforms</name>
  </compound>
  <compound refid="ParallelReduction" kind="page"><name>ParallelReduction</name>
  </compound>
  <compound refid="ParallelSort" kind="page"><name>ParallelSort</name>
  </compound>
  <compound refid="ParallelScan" kind="page"><name>ParallelScan</name>
  </compound>
  <compound refid="ParallelFind" kind="page"><name>ParallelFind</name>
  </compound>
  <compound refid="TaskParallelPipeline" kind="page"><name>TaskParallelPipeline</name>
  </compound>
  <compound refid="TaskParallelScalablePipeline" kind="page"><name>TaskParallelScalablePipeline</name>
  </compound>
  <compound refid="DataParallelPipeline" kind="page"><name>DataParallelPipeline</name>
  </compound>
  <compound refid="TaskParallelPipelineWithTokenDependencies" kind="page"><name>TaskParallelPipelineWithTokenDependencies</name>
  </compound>
  <compound refid="cudaFlowAlgorithms" kind="page"><name>cudaFlowAlgorithms</name>
  </compound>
  <compound refid="SingleTaskCUDA" kind="page"><name>SingleTaskCUDA</name>
  </compound>
  <compound refid="ForEachCUDA" kind="page"><name>ForEachCUDA</name>
  </compound>
  <compound refid="ParallelTransformsCUDA" kind="page"><name>ParallelTransformsCUDA</name>
  </compound>
  <compound refid="cudaStandardAlgorithms" kind="page"><name>cudaStandardAlgorithms</name>
  </compound>
  <compound refid="CUDASTDExecutionPolicy" kind="page"><name>CUDASTDExecutionPolicy</name>
  </compound>
  <compound refid="CUDASTDSingleTask" kind="page"><name>CUDASTDSingleTask</name>
  </compound>
  <compound refid="CUDASTDForEach" kind="page"><name>CUDASTDForEach</name>
  </compound>
  <compound refid="CUDASTDTransform" kind="page"><name>CUDASTDTransform</name>
  </compound>
  <compound refid="CUDASTDReduce" kind="page"><name>CUDASTDReduce</name>
  </compound>
  <compound refid="CUDASTDScan" kind="page"><name>CUDASTDScan</name>
  </compound>
  <compound refid="CUDASTDMerge" kind="page"><name>CUDASTDMerge</name>
  </compound>
  <compound refid="CUDASTDFind" kind="page"><name>CUDASTDFind</name>
  </compound>
  <compound refid="Examples" kind="page"><name>Examples</name>
  </compound>
  <compound refid="wavefront" kind="page"><name>wavefront</name>
  </compound>
  <compound refid="matrix_multiplication" kind="page"><name>matrix_multiplication</name>
  </compound>
  <compound refid="matrix_multiplication_cudaflow" kind="page"><name>matrix_multiplication_cudaflow</name>
  </compound>
  <compound refid="kmeans" kind="page"><name>kmeans</name>
  </compound>
  <compound refid="kmeans_cudaflow" kind="page"><name>kmeans_cudaflow</name>
  </compound>
  <compound refid="fibonacci" kind="page"><name>fibonacci</name>
  </compound>
  <compound refid="flipcoins" kind="page"><name>flipcoins</name>
  </compound>
  <compound refid="graphtraversal" kind="page"><name>graphtraversal</name>
  </compound>
  <compound refid="TextProcessingPipeline" kind="page"><name>TextProcessingPipeline</name>
  </compound>
  <compound refid="GraphProcessingPipeline" kind="page"><name>GraphProcessingPipeline</name>
  </compound>
  <compound refid="TaskflowProcessingPipeline" kind="page"><name>TaskflowProcessingPipeline</name>
  </compound>
  <compound refid="usecases" kind="page"><name>usecases</name>
  </compound>
  <compound refid="opentimer" kind="page"><name>opentimer</name>
  </compound>
  <compound refid="dreamplace" kind="page"><name>dreamplace</name>
  </compound>
  <compound refid="Contributing" kind="page"><name>Contributing</name>
  </compound>
  <compound refid="guidelines" kind="page"><name>guidelines</name>
  </compound>
  <compound refid="contributors" kind="page"><name>contributors</name>
  </compound>
  <compound refid="Governance" kind="page"><name>Governance</name>
  </compound>
  <compound refid="rules" kind="page"><name>rules</name>
  </compound>
  <compound refid="team" kind="page"><name>team</name>
  </compound>
  <compound refid="codeofconduct" kind="page"><name>codeofconduct</name>
  </compound>
  <compound refid="FAQ" kind="page"><name>FAQ</name>
  </compound>
  <compound refid="References" kind="page"><name>References</name>
  </compound>
  <compound refid="dir_04c130fdbeeccfa0338db9f77a5dc2c3" kind="dir"><name>algorithm</name>
  </compound>
  <compound refid="dir_7d8f2e56a3b68fb88e627c2a1db4941a" kind="dir"><name>algorithm</name>
  </compound>
  <compound refid="dir_73635165b734e23094c358e517ec45fc" kind="dir"><name>algorithms</name>
  </compound>
  <compound refid="dir_ecfa7d70310a08b350e190615cc70712" kind="dir"><name>contributing</name>
  </compound>
  <compound refid="dir_61bd9e18b52c497a2e6d3af3a72c0d02" kind="dir"><name>cookbook</name>
  </compound>
  <compound refid="dir_220cd4d9b8cb38c840b455d5d75c25bb" kind="dir"><name>core</name>
  </compound>
  <compound refid="dir_638d51f8e6f20ea8c720cc8c006296ba" kind="dir"><name>cuda</name>
  </compound>
  <compound refid="dir_b300e8dd3979c341db683b8f1cb76e6e" kind="dir"><name>cuda_std_algorithms</name>
  </compound>
  <compound refid="dir_05586da0f4e90fa96d454e8d75d56e9a" kind="dir"><name>cudaflow_algorithms</name>
  </compound>
  <compound refid="dir_0c6655e7a474ec7aa2f43d8d56b9e1c1" kind="dir"><name>examples</name>
  </compound>
  <compound refid="dir_87abf3142b2bf0ff331672dc90c991b0" kind="dir"><name>governance</name>
  </compound>
  <compound refid="dir_13901390c6d5ee592c18c2f167e01d4f" kind="dir"><name>install</name>
  </compound>
  <compound refid="dir_d7a9e4fcc659571fb4c113eec28c5eeb" kind="dir"><name>references</name>
  </compound>
  <compound refid="dir_7c512093e4879e21c0dd502d7d593a16" kind="dir"><name>releases</name>
  </compound>
  <compound refid="dir_88dad41ea55ca2177e141d32a93e931c" kind="dir"><name>taskflow</name>
  </compound>
  <compound refid="dir_183ade9c70bd4384e3037d383160f942" kind="dir"><name>usecases</name>
  </compound>
  <compound refid="dir_ce5b1d0a1b287ae7223729d7a3a091a8" kind="dir"><name>utility</name>
  </compound>
  <compound refid="indexpage" kind="page"><name>index</name>
  </compound>
</doxygenindex>
